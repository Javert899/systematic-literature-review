{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,10,21]],"date-time":"2019-10-21T16:40:26Z","timestamp":1571676026956},"reference-count":25,"publisher":"Association for Computing Machinery (ACM)","issue":"ICFP","license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,7,30]],"date-time":"2018-07-30T00:00:00Z","timestamp":1532908800000},"delay-in-days":0,"content-version":"vor"}],"funder":[{"DOI":"10.13039\/501100011002","name":"National Natural Science Foundation of China-Yunnan Joint Fund","doi-asserted-by":"publisher","award":["1319880, 1521539"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":["Proc. ACM Program. Lang."],"published-print":{"date-parts":[[2018,7,30]]},"DOI":"10.1145\/3236784","type":"journal-article","created":{"date-parts":[[2018,7,31]],"date-time":"2018-07-31T19:41:18Z","timestamp":1533066078000},"page":"1-16","source":"Crossref","is-referenced-by-count":1,"title":["Ready, set, verify! applying hs-to-coq to real-world Haskell code (experience report)"],"prefix":"10.1145","volume":"2","author":[{"given":"Joachim","family":"Breitner","sequence":"first","affiliation":[{"name":"University of Pennsylvania, USA"}]},{"given":"Antal","family":"Spector-Zabusky","sequence":"additional","affiliation":[{"name":"University of Pennsylvania, USA"}]},{"given":"Yao","family":"Li","sequence":"additional","affiliation":[{"name":"University of Pennsylvania, USA"}]},{"given":"Christine","family":"Rizkallah","sequence":"additional","affiliation":[{"name":"UNSW, Australia"}]},{"given":"John","family":"Wiegley","sequence":"additional","affiliation":[{"name":"BAE Systems, USA"}]},{"given":"Stephanie","family":"Weirich","sequence":"additional","affiliation":[{"name":"University of Pennsylvania, USA"}]}],"member":"320","reference":[{"key":"key-10.1145\/3236784-1","unstructured":"Stephen Adams. 1992. Implementing sets efficiently in a functional language,. Research Report CSTR 92-10. University of Southampton."},{"key":"key-10.1145\/3236784-2","unstructured":"Andrew W. Appel, Lennart Beringer, Adam Chlipala, Benjamin C. Pierce, Zhong Shao, Stephanie Weirich, and Steve Zdancewic. 2017. Position paper: the science of deep specification. Philosophical Transactions of the Royal Society of London A: Mathematical, Physical and Engineering Sciences 375, 2104 (2017). DOI:","DOI":"10.1098\/rsta.2016.0331","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-3","unstructured":"Ana Bove, Peter Dybjer, and Ulf Norell. 2009. A Brief Overview of Agda - A Functional Language with Dependent Types. In Theorem Proving in Higher Order Logics, 22nd International Conference, TPHOLs 2009, Munich, Germany, August 17-20, 2009. Proceedings (Lecture Notes in Computer Science), Stefan Berghofer, Tobias Nipkow, Christian Urban, and Makarius Wenzel (Eds.), Vol. 5674. Springer, 73&#8211;78. DOI:"},{"key":"key-10.1145\/3236784-4","unstructured":"Edwin Brady. 2017. Type-driven Development With Idris. Manning."},{"key":"key-10.1145\/3236784-5","unstructured":"Joachim Breitner, Antal Spector-Zabusky, Yao Li, Christine Rizkallah, John Wiegley, and Stephanie Weirich. 2018. Ready, Set, Verify! Applying hs-to-coq to real-world Haskell code. CoRR abs\/1803.06960 (2018). arXiv: 1803.06960 http: \/\/arxiv.org\/abs\/1803.06960"},{"key":"key-10.1145\/3236784-6","unstructured":"Arthur Chargu&#233;raud. 2010. The Optimal Fixed Point Combinator. In Proceedings of the First International Conference on Interactive Theorem Proving (ITP&#8217;10). Springer-Verlag, Berlin, Heidelberg, 195&#8211;210. DOI:","DOI":"10.1007\/978-3-642-14052-5_15","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-7","unstructured":"Koen Claessen and John Hughes. 2000. QuickCheck: a lightweight tool for random testing of Haskell programs. In ICFP. ACM, 268&#8211;279.","DOI":"10.1145\/351240.351266","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-8","unstructured":"Nils Anders Danielsson, John Hughes, Patrik Jansson, and Jeremy Gibbons. 2006. Fast and loose reasoning is morally correct. In POPL. ACM, 206&#8211;217. DOI:","DOI":"10.1145\/1111037.1111056","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-9","unstructured":"Yoichi Hirai and Kazuhiko Yamamoto. 2011. Balancing weight-balanced trees. Journal of Functional Programming 21, 3 (2011), 287&#8211;307. DOI:","DOI":"10.1017\/S0956796811000104","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-10","unstructured":"Alexander Krauss. 2006. Partial Recursive Functions in Higher-Order Logic. In IJCAR (LNCS), Vol. 4130. Springer, 589&#8211;603.","DOI":"10.1007\/11814771_48","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-11","unstructured":"Daniel Kr&#246;ning, Philipp R&#252;mmer, and Georg Weissenbacher. 2009. A proposal for a theory of finite sets, lists, and maps for the SMT-LIB standard. In Informal proceedings, 7th International Workshop on Satisfiability Modulo Theories at CADE, Vol. 22."},{"key":"key-10.1145\/3236784-12","unstructured":"The Coq development team. 2016. The Coq proof assistant reference manual. LogiCal Project. http:\/\/coq.inria.fr Version 8.6.1."},{"key":"key-10.1145\/3236784-13","unstructured":"Donald R. Morrison. 1968. PATRICIA&#38;amp;Mdash;Practical Algorithm To Retrieve Information Coded in Alphanumeric. J. ACM 15, 4 (Oct. 1968), 514&#8211;534. DOI:","DOI":"10.1145\/321479.321481","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-14","unstructured":"J&#252;rg Nievergelt and Edward M. Reingold. 1972. Binary Search Trees of Bounded Balance. In STOC. ACM, 137&#8211;142. DOI:","DOI":"10.1145\/800152.804906","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-15","unstructured":"Tobias Nipkow and Stefan Dirix. 2018. Weight-Balanced Trees. Archive of Formal Proofs (March 2018). http:\/\/isa-afp.org\/ entries\/Weight_Balanced_Trees.html , Formal proof development."},{"key":"key-10.1145\/3236784-16","unstructured":"Tobias Nipkow, Lawrence C. Paulson, and Markus Wenzel. 2002. Isabelle\/HOL - A Proof Assistant for Higher-Order Logic. Lecture Notes in Computer Science, Vol. 2283. Springer. DOI:","DOI":"10.1007\/3-540-45949-9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-17","unstructured":"Chris Okasaki. 1999. Purely functional data structures. Cambridge University Press. DOI:","DOI":"10.1017\/CBO9780511530104","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-18","unstructured":"Chris Okasaki and Andrew Gill. 1998. Fast Mergeable Integer Maps. In In Workshop on ML. 77&#8211;86."},{"key":"key-10.1145\/3236784-19","unstructured":"Simon Peyton Jones, Andrew Tolmach, and Tony Hoare. 2001. Playing by the rules: rewriting as a practical optimisation technique in GHC. In Haskell Workshop."},{"key":"key-10.1145\/3236784-20","unstructured":"Antal Spector-Zabusky, Joachim Breitner, Christine Rizkallah, and Stephanie Weirich. 2018. Total Haskell is reasonable Coq. In CPP. ACM, 14&#8211;27. DOI:","DOI":"10.1145\/3167092","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-21","unstructured":"Milan Straka. 2010. The Performance of the Haskell Containers Package. In Proceedings of the Third ACM Haskell Symposium on Haskell (Haskell &#8217;10). ACM, New York, NY, USA, 13&#8211;24. DOI:","DOI":"10.1145\/1863523.1863526","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-22","unstructured":"Niki Vazou, Leonidas Lampropoulos, and Jeff Polakow. 2017. A Tale of Two Provers: Verifying Monoidal String Matching in Liquid Haskell and Coq. In Haskell Symposium. ACM, 63&#8211;74. DOI:","DOI":"10.1145\/3156695.3122963","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-23","unstructured":"Niki Vazou, Patrick M. Rondon, and Ranjit Jhala. 2013. Abstract Refinement Types. In Proceedings of the 22Nd European Conference on Programming Languages and Systems (ESOP&#8217;13). Springer-Verlag, Berlin, Heidelberg, 209&#8211;228. DOI:","DOI":"10.1007\/978-3-642-37036-6_13","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-24","unstructured":"Niki Vazou, Eric L. Seidel, Ranjit Jhala, Dimitrios Vytiniotis, and Simon Peyton-Jones. 2014. Refinement Types for Haskell. In ICFP. ACM, 269&#8211;282. DOI:","DOI":"10.1145\/2628136.2628161","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236784-25","unstructured":"Niki Vazou, Anish Tondwalkar, Vikraman Choudhury, Ryan G. Scott, Ryan R. Newton, Philip Wadler, and Ranjit Jhala. 2018. Refinement reflection: complete verification with SMT. PACMPL 2, POPL (2018), 53:1&#8211;53:31. DOI:","DOI":"10.1145\/3158141","doi-asserted-by":"crossref"}],"container-title":["Proceedings of the ACM on Programming Languages"],"original-title":[],"language":"en","link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3236784&ftid=1991955&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,10,21]],"date-time":"2019-10-21T16:06:17Z","timestamp":1571673977000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018,7,30]]},"references-count":25,"journal-issue":{"published-print":{"date-parts":[[2018,7,30]]},"issue":"ICFP"},"URL":"http:\/\/dx.doi.org\/10.1145\/3236784","relation":{"cites":[]},"ISSN":["2475-1421"],"issn-type":[{"value":"2475-1421","type":"electronic"}]}}