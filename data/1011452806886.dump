{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,11,13]],"date-time":"2019-11-13T15:04:25Z","timestamp":1573657465451},"reference-count":48,"publisher":"Association for Computing Machinery (ACM)","issue":"3","license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2016,5,2]],"date-time":"2016-05-02T00:00:00Z","timestamp":1462147200000},"delay-in-days":0,"content-version":"vor"}],"funder":[{"name":"NSF","award":["CCF-1319786"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":["ACM Trans. Program. Lang. Syst.","TOPLAS"],"published-print":{"date-parts":[[2016,5,2]]},"DOI":"10.1145\/2806886","type":"journal-article","created":{"date-parts":[[2016,5,2]],"date-time":"2016-05-02T12:16:07Z","timestamp":1462191367000},"page":"1-51","source":"Crossref","is-referenced-by-count":9,"title":["A Practical Approach for Model Checking C\/C++11 Code"],"prefix":"10.1145","volume":"38","author":[{"given":"Brian","family":"Norris","sequence":"first","affiliation":[{"name":"University of California, Irvine"}]},{"given":"Brian","family":"Demsky","sequence":"additional","affiliation":[{"name":"University of California, Irvine"}]}],"member":"320","reference":[{"key":"key-10.1145\/2806886-1","unstructured":"Synchronization Algorithm Verificator for C++0x. https:\/\/groups.google.com\/forum\/#&excl;msg\/comp.programming.threads\/nSSFT9vKEe0\/7eD3ioDg6nEJ. Oct. 2012."},{"key":"key-10.1145\/2806886-2","unstructured":"Writing a (spinning) thread barrier using c++11 atomics. http:\/\/stackoverflow.com\/questions\/8115267\/writing-a-spinning-thread-barrier-using-c11-atomics. Oct. 2012."},{"key":"key-10.1145\/2806886-3","unstructured":"Multithreading and Concurrency. http:\/\/www.justsoftwaresolutions.co.uk\/threading\/. Dec. 2012."},{"key":"key-10.1145\/2806886-4","unstructured":"MCS list-based lock. http:\/\/cbloomrants.blogspot.com\/2011\/07\/07-18-11-mcs-list-based-lock_18. html. Oct. 2012."},{"key":"key-10.1145\/2806886-5","unstructured":"A look at some bounded queues - part 2. http:\/\/cbloomrants.blogspot.com\/2011\/07\/07-30-11-look-at-some-bounded-queues.html. Oct. 2012."},{"key":"key-10.1145\/2806886-6","unstructured":"Mark Batty, Mike Dodds, and Alexey Gotsman. 2013. Library abstraction for C\/C++ concurrency. In Proceedings of the Symposium on Principles of Programming Languages.","DOI":"10.1145\/2429069.2429099","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-7","unstructured":"Mark Batty, Scott Owens, Susmit Sarkar, Peter Sewell, and Tjark Weber. 2011. Mathematizing C++ concurrency. In Proceedings of the Symposium on Principles of Programming Languages.","DOI":"10.1145\/1926385.1926394","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-8","unstructured":"Jasmin Christian Blanchette, Tjark Weber, Mark Batty, Scott Owens, and Susmit Sarkar. 2011. Nitpicking C++ concurrency. In Proceedings of the 13th International ACM SIGPLAN Symposium on Principles and Practices of Declarative Programming.","DOI":"10.1145\/2003476.2003493","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-9","unstructured":"Hans Boehm. 2012. Can seqlocks get along with programming language memory models? In Proceedings of the 2012 ACM SIGPLAN Workshop on Memory Systems Performance and Correctness.","DOI":"10.1145\/2247684.2247688","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-10","unstructured":"Hans J. Boehm. 2013. N3786: Prohibiting &#8220;out of thin air&#8221; results in C++14. Retrieved from http:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2013\/n3786.htm."},{"key":"key-10.1145\/2806886-11","unstructured":"Hans J. Boehm and Sarita V. Adve. 2008. Foundations of the C++ concurrency memory model. In Proceedings of the 2008 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1375581.1375591","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-12","unstructured":"Hans-J. Boehm, Mark Batty, Brian Demsky, Olivier Giroux, Paul McKenney, Peter Sewell, and Francesco Zappa Nardelli. 2013. N3710: Specifying the absence of &#8220;out of thin air&#8221; results. Retrieved from http:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2013\/n3710.html."},{"key":"key-10.1145\/2806886-13","unstructured":"Hans-J. Boehm and Brian Demsky. 2014. Outlawing ghosts: Avoiding out-of-thin-air results. In Proceedings of the ACM SIGPLAN Workshop on Memory Systems Performance and Correctness.","DOI":"10.1145\/2618128.2618134","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-14","unstructured":"Sebastian Burckhardt, Chris Dern, Madanlal Musuvathi, and Roy Tan. 2010. Line-up: A complete and automatic linearizability checker. In Proceedings of the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1806596.1806634","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-15","unstructured":"Cliff Click. 2007. A Lock-Free Hash Table. Retrieved from http:\/\/www.azulsystems.com\/events\/javaone_2007\/ 2007_LockFreeHash.pdf."},{"key":"key-10.1145\/2806886-16","unstructured":"Arnab De, Abhik Roychoudhury, and Deepak D&#8217;Souza. 2008. Java memory model aware software validation. In Proceedings of the 8th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering.","DOI":"10.1145\/1512475.1512478","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-17","unstructured":"Tayfun Elmas, Shaz Qadeer, and Serdar Tasiran. 2007. Goldilocks: A race and transaction-aware java runtime. In Proceedings of the 2007 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1250734.1250762","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-18","unstructured":"Dawson Engler and Ken Ashcraft. 2003. RacerX: Effective, static detection of race conditions and deadlocks. In Proceedings of the 19th ACM Symposium on Operating Systems Principles.","DOI":"10.1145\/945445.945468","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-19","unstructured":"Cormac Flanagan and Stephen N. Freund. 2009. FastTrack: Efficient and precise dynamic race detection. In Proceedings of the 2009 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1542476.1542490","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-20","unstructured":"Cormac Flanagan and Stephen N. Freund. 2010. Adversarial memory for detecting destructive races. In Proceedings of the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1806596.1806625","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-21","unstructured":"Cormac Flanagan and Patrice Godefroid. 2005. Dynamic partial-order reduction for model checking software. In Proceedings of the Symposium on Principles of Programming Languages.","DOI":"10.1145\/1040305.1040315","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-22","unstructured":"Patrice Godefroid. 1996. Partial-order methods for the verification of concurrent systems: An approach to the state-explosion problem. Lecture Notes in Computer Science 1032.","DOI":"10.1007\/3-540-60761-7","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-23","unstructured":"Patrice Godefroid. 1997. Model checking for programming languages using VeriSoft. In Proceedings of the Symposium on Principles of Programming Languages.","DOI":"10.1145\/263699.263717","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-24","unstructured":"Gerard J. Holzmann. 2003. The SPIN Model Checker: Primer and Reference Manual (1st ed.). Addison-Wesley Professional, New York, NY."},{"key":"key-10.1145\/2806886-25","unstructured":"Thuan Quang Huynh and Abhik Roychoudhury. 2006. A memory model sensitive checker for C#. In Proceedings of the 14th International Conference on Formal Methods.","DOI":"10.1007\/11813040_32","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-26","unstructured":"ISO\/IEC 14882:2011. ISO\/IEC 14882:2011, Information Technology -- Programming Languages -- C++."},{"key":"key-10.1145\/2806886-27","unstructured":"ISO\/IEC 9899:2011. ISO\/IEC 9899:2011, Information Technology -- Programming Languages -- C."},{"key":"key-10.1145\/2806886-28","unstructured":"Bengt Jonsson. 2009. State-space exploration for concurrent algorithms under weak memory orderings. SIGARCH Computer Architecture News 36, 5 (June 2009), 65--71.","DOI":"10.1145\/1556444.1556453","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-29","unstructured":"Michael Kuperstein, Martin Vechev, and Eran Yahav. 2010. Automatic inference of memory fences. In Proceedings of the Conference on Formal Methods in Computer-Aided Design."},{"key":"key-10.1145\/2806886-30","unstructured":"Michael Kuperstein, Martin Vechev, and Eran Yahav. 2011. Partial-coherence abstractions for relaxed memory models. In Proceedings of the 2011 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1993498.1993521","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-31","unstructured":"Leslie Lamport. 1978. Time, clocks, and the ordering of events in a distributed system. Commun. ACM 21, 7 (July 1978), 558--565.","DOI":"10.1145\/359545.359563","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-32","unstructured":"Nhat Minh L&#234;, Antoniu Pop, Albert Cohen, and Francesco Zappa Nardelli. 2013. Correct and efficient work-stealing for weak memory models. In Proceedings of the 18th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming. ACM, New York, NY.","DOI":"10.1145\/2442516.2442524","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-33","unstructured":"Brandon Lucia, Luis Ceze, Karin Strauss, Shaz Qadeer, and Hans Boehm. 2010. Conflict exceptions: Simplifying concurrent language semantics with precise hardware exceptions for data-races. In Proceedings of the 37th Annual International Symposium on Computer Architecture.","DOI":"10.1145\/1815961.1815987","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-34","unstructured":"Daniel Marino, Abhayendra Singh, Todd Millstein, Madanlal Musuvathi, and Satish Narayanasamy. 2011. A case for an sc-preserving compiler. In Proceedings of the 2011 ACM SIGPLAN Conference on Programming Language Design and Implementation.","DOI":"10.1145\/1993498.1993522","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-35","unstructured":"John M. Mellor-Crummey and Michael L. Scott. 1991. Synchronization without contention. In Proceedings of the 4th International Conference on Architectural Support for Programming Languages and Operating Systems. 269--278.","DOI":"10.1145\/106973.106999","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-36","unstructured":"Maged M. Michael and Michael L. Scott. 1996. Simple, fast, and practical non-blocking and blocking concurrent queue algorithms. In Proceedings of the 15th Annual ACM Symposium on Principles of Distributed Computing. ACM, New York, NY.","DOI":"10.1145\/248052.248106","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-37","unstructured":"Mark Moir and Nir Shavit. 2004. Handbook of Data Structures and Applications. Chapman and Hall\/CRC Press, Boca Raton, FL."},{"key":"key-10.1145\/2806886-38","unstructured":"Madanlal Musuvathi, Shaz Qadeer, Piramanayagam Arumuga Nainar, Thomas Ball, Gerard Basler, and Iulian Neamtiu. 2008. Finding and reproducing heisenbugs in concurrent programs. In Proceedings of the 8th Symposium on Operating Systems Design and Implementation."},{"key":"key-10.1145\/2806886-39","unstructured":"Brian Norris and Brian Demsky. 2013. CDSChecker: Checking concurrent data structures written with C\/C++ atomics. In Proceeding of the 28th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications.","DOI":"10.1145\/2509136.2509514","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-40","unstructured":"Seungjoon Park and David L. Dill. 1999. An executable specification and verifier for relaxed memory order. IEEE Trans. Comput. 48 (1999), 227--235.","DOI":"10.1109\/12.752664","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-41","unstructured":"Stefan Savage, Michael Burrows, Greg Nelson, Patrick Sobalvarro, and Thomas Anderson. 1997. Eraser: A dynamic data race detector for multithreaded programs. ACM Transactions on Computing Systems 15, 4 (Nov. 1997), 391--411.","DOI":"10.1145\/265924.265927","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-42","unstructured":"Nir Shavit. 2011. Data structures in the multicore age. Commun. ACM 54, 3 (March 2011).","DOI":"10.1145\/1897852.1897873","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-43","unstructured":"Viktor Vafeiadis, Thibaut Balabonski, Soham Chakraborty, Robin Morisset, and Francesco Zappa Nardelli. 2015. Common compiler optimisations are invalid in the C11 memory model and what we can do about it. In Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages.","DOI":"10.1145\/2676726.2676995","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-44","unstructured":"Viktor Vafeiadis and Chinmay Narayan. 2013. Relaxed separation logic: A program logic for C11 concurrency. In Proceeding of the 28th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications.","DOI":"10.1145\/2509136.2509532","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-45","unstructured":"Dmitriy Vyukov. Oct. Relacy Race Detector. Retrieved from http:\/\/relacy.sourceforge.net\/."},{"key":"key-10.1145\/2806886-46","unstructured":"Chao Wang, Yu Yang, Aarti Gupta, and Ganesh Gopalakrishnan. 2008. Dynamic model checking with property driven pruning to detect race conditions. ATVA LNCS 126--140 (2008).","DOI":"10.1007\/978-3-540-88387-6_11","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-47","unstructured":"Yu Yang, Xiaofang Chen, Ganesh Gopalakrishnan, and Robert M. Kirby. 2008. Efficient stateful dynamic partial order reduction. In Proceedings of the 15th International SPIN Workshop on Model Checking Software.","DOI":"10.1007\/978-3-540-85114-1_20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2806886-48","unstructured":"Yu Yang, Xiaofang Chen, Ganesh Gopalakrishnan, and Chao Wang. 2009. Automatic discovery of transition symmetry in multithreaded programs using dynamic analysis. In Proceedings of the 16th International SPIN Workshop on Model Checking Software. 279--295.","DOI":"10.1007\/978-3-642-02652-2_22","doi-asserted-by":"crossref"}],"container-title":["ACM Transactions on Programming Languages and Systems"],"original-title":[],"language":"en","link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=2806886&amp;ftid=1714977&amp;dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,7]],"date-time":"2019-09-07T06:57:08Z","timestamp":1567839428000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2016,5,2]]},"references-count":48,"journal-issue":{"published-print":{"date-parts":[[2016,5,2]]},"issue":"3"},"URL":"http:\/\/dx.doi.org\/10.1145\/2806886","relation":{"cites":[]},"ISSN":["0164-0925"],"issn-type":[{"value":"0164-0925","type":"print"}]}}