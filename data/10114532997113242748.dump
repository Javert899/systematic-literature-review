{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,11,7]],"date-time":"2019-11-07T05:10:57Z","timestamp":1573103457930},"reference-count":26,"publisher":"Association for Computing Machinery (ACM)","issue":"7","license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,9,17]],"date-time":"2018-09-17T00:00:00Z","timestamp":1537142400000},"delay-in-days":0,"content-version":"vor"}],"funder":[{"DOI":"10.13039\/501100011002","name":"National Natural Science Foundation of China-Yunnan Joint Fund","doi-asserted-by":"publisher","award":["1319880,1521539"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":["SIGPLAN Not."],"published-print":{"date-parts":[[2018,9,17]]},"DOI":"10.1145\/3299711.3242748","type":"journal-article","created":{"date-parts":[[2018,12,10]],"date-time":"2018-12-10T13:09:16Z","timestamp":1544447356000},"page":"14-25","source":"Crossref","is-referenced-by-count":0,"title":["A promise checked is a promise kept: inspection testing"],"prefix":"10.1145","volume":"53","author":[{"given":"Joachim","family":"Breitner","sequence":"first","affiliation":[{"name":"University of Pennsylvania, USA"}]}],"member":"320","reference":[{"key":"key-10.1145\/3299711.3242748-1","unstructured":"Lennart Augustsson. 2008. djinn: Generate Haskell code from a type. http:\/\/hackage.haskell.org\/package\/djinn. (2008)."},{"key":"key-10.1145\/3299711.3242748-2","unstructured":"Joachim Breitner. 2014. list-fusion-probe: testing list fusion for success. http:\/\/hackage.haskell.org\/package\/list-fusion-probe. (2014)."},{"key":"key-10.1145\/3299711.3242748-3","unstructured":"Joachim Breitner. 2018. ghc-justdoit: A magic typeclass that just does it. http:\/\/hackage.haskell.org\/package\/ghc-justdoit. (2018)."},{"key":"key-10.1145\/3299711.3242748-4","unstructured":"Manuel M. T. Chakravarty, Gabriele Keller, Simon L. Peyton Jones, and Simon Marlow. 2005. Associated types with class. InPOPL. ACM.","DOI":"10.1145\/1040305.1040306","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-5","unstructured":"James Cheney and Ralf Hinze. 2003.First-Class Phantom Types. Technical Report. Cornell University."},{"key":"key-10.1145\/3299711.3242748-6","unstructured":"Koen Claessen and John Hughes. 2000. QuickCheck: a lightweight tool for random testing of Haskell programs. InICFP. ACM.","DOI":"10.1145\/351240.351266","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-7","unstructured":"Nils Anders Danielsson and Patrik Jansson. 2004. Chasing Bottoms: A Case Study in Program Verification in the Presence of Partial and Infinite Values. InMPC (LNCS), Vol. 3125. Springer.","DOI":"10.1007\/978-3-540-27764-4_6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-8","unstructured":"Roy Dyckhoff. 1992. Contraction-Free Sequent Calculi for Intuitionistic Logic.Journal of Symbolic Logic57, 3 (1992).","DOI":"10.2307\/2275431","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-9","unstructured":"Richard A. Eisenberg, Stephanie Weirich, and Hamidhasan G. Ahmed. 2016. Visible Type Application. InESOP (LNCS), Vol. 9632. Springer.","DOI":"10.1007\/978-3-662-49498-1_10","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-10","unstructured":"Kenneth Foner, Hengchu Zhang, and Leonidas Lampropoulos. 2018. Keep your Laziness in Check. (2018).","DOI":"10.1145\/3236797","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-11","unstructured":"Dean Herington and Simon Hegel. 2006. HUnit: A unit testing framework for Haskell. http:\/\/hackage.haskell.org\/package\/HUnit. (2006)."},{"key":"key-10.1145\/3299711.3242748-12","unstructured":"Csongor Kiss. 2017. generic-lens: Generic data-structure operations exposed as lenses. http:\/\/hackage.haskell.org\/package\/generic-lens. (2017)."},{"key":"key-10.1145\/3299711.3242748-13","unstructured":"Csongor Kiss, Matthew Pickering, and Toby Shaw. 2017. Deriving lenses using generics. InIFL."},{"key":"key-10.1145\/3299711.3242748-14","unstructured":"Csongor Kiss, Matthew Pickering, and Nicolas Wu. 2018. Generic Deriving of Generic Traversals. InICFP. ACM.","DOI":"10.1145\/3236780","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-15","unstructured":"The Haskell library maintainers. 2007. containers: Assorted concrete container types. http:\/\/hackage.haskell.org\/package\/containers. (2007)."},{"key":"key-10.1145\/3299711.3242748-16","unstructured":"Jose Pedro Magalhaes, Atze Dijkstra, Johan Jeuring, and Andres Loh. 2010. A generic deriving mechanism for Haskell. InHaskell Symposium. ACM.","DOI":"10.1145\/1863523.1863529","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-17","unstructured":"Nicholas Nethercote and Julian Seward. 2007. Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation. InProgramming Language Design and Implementation (PLDI). ACM.","DOI":"10.1145\/1250734.1250746","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-18","unstructured":"Bryan O'Sullivan and Tom Harper. 2017. text: An efficient packed Unicode text type. http:\/\/hackage.haskell.org\/package\/text-1.2.2.2. (2017)."},{"key":"key-10.1145\/3299711.3242748-19","unstructured":"Will Partain. 1993. The nofib Benchmark Suite of Haskell Programs. InFunctional Programming 1992 (Workshops in Computing). Springer.","DOI":"10.1007\/978-1-4471-3215-8_17","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-20","unstructured":"Simon L. Peyton Jones and Simon Marlow. 2002. Secrets of the Glasgow Haskell Compiler Inliner.Journal of Functional Programming12, 5 (2002).","DOI":"10.1017\/S0956796802004331","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-21","unstructured":"Simon L. Peyton Jones, Andrew Tolmach, and Tony Hoare. 2001. Playing by the rules: rewriting as a practical optimisation technique in GHC. InHaskell Workshop."},{"key":"key-10.1145\/3299711.3242748-22","unstructured":"Tiark Rompf and Martin Odersky. 2012. Lightweight modular staging: a pragmatic approach to runtime code generation and compiled DSLs.Commun. ACM55, 6 (2012).","DOI":"10.1145\/2184319.2184345","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-23","unstructured":"Tim Sheard and Simon L. Peyton Jones. 2002. Template meta-programming for Haskell.SIGPLAN Notices37, 12 (2002).","DOI":"10.1145\/636517.636528","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-24","unstructured":"Niki Vazou, Joachim Breitner, Rose Kunkel, David Van Horn, and Graham Hutton. 2018. Theorem proving for all. (2018)."},{"key":"key-10.1145\/3299711.3242748-25","unstructured":"Niki Vazou, Eric L. Seidel, Ranjit Jhala, Dimitrios Vytiniotis, and Simon L. Peyton Jones. 2014. Refinement types for Haskell. InICFP. ACM.","DOI":"10.1145\/2628136.2628161","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3299711.3242748-26","unstructured":"Sergei Winitzki. 2001. curryhoward: Automatic code generation for Scala functions and expressions via the Curry-Howard isomorphism. https:\/\/github.com\/Chymyst\/curryhoward. (2001)."}],"container-title":["ACM SIGPLAN Notices"],"original-title":[],"language":"en","link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3242748&ftid=2003215&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,11,7]],"date-time":"2019-11-07T04:31:44Z","timestamp":1573101104000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018,9,17]]},"references-count":26,"journal-issue":{"published-print":{"date-parts":[[2018,12,7]]},"issue":"7"},"URL":"http:\/\/dx.doi.org\/10.1145\/3299711.3242748","relation":{"cites":[]},"ISSN":["0362-1340"],"issn-type":[{"value":"0362-1340","type":"print"}],"subject":["Software","Computer Graphics and Computer-Aided Design"]}}