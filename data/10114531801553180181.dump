{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,11,27]],"date-time":"2019-11-27T09:01:38Z","timestamp":1574845298342},"publisher-location":"New York, New York, USA","reference-count":51,"publisher":"ACM Press","isbn-type":[{"value":"9781450356381","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,5,27]],"date-time":"2018-05-27T00:00:00Z","timestamp":1527379200000},"delay-in-days":146,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3180155.3180181","type":"proceedings-article","created":{"date-parts":[[2018,6,12]],"date-time":"2018-06-12T12:16:01Z","timestamp":1528805761000},"source":"Crossref","is-referenced-by-count":6,"title":["HireBuild"],"prefix":"10.1145","author":[{"given":"Foyzul","family":"Hassan","sequence":"first","affiliation":[{"name":"The University of Texas at San Antonio"}]},{"given":"Xiaoyin","family":"Wang","sequence":"additional","affiliation":[{"name":"The University of Texas at San Antonio"}]}],"member":"320","reference":[{"key":"key-10.1145\/3180155.3180181-1","unstructured":"2015. GNU Autoconf - Creating Automatic Configuration Scripts. http:\/\/www.gnu.org\/software\/autoconf\/manual\/index.html. (2015). Accessed: 2015-10-25."},{"key":"key-10.1145\/3180155.3180181-2","unstructured":"2017. The Gradle build language, https:\/\/docs.gradle.org\/current\/userguide\/writing_build_scripts.html. (2017). Accessed: 2017-04-30."},{"key":"key-10.1145\/3180155.3180181-3","unstructured":"2017. Gradle Build Script Structure. https:\/\/docs.gradle.Org\/3.5\/dsl\/. (2017). Accessed: 2017-04-30."},{"key":"key-10.1145\/3180155.3180181-4","unstructured":"Bram Adams, Kris De Schutter, Herman Tromp, and Wolfgang De Meuter. 2007. The Evolution of the Linux Build System.ECEASST8 (2007)."},{"key":"key-10.1145\/3180155.3180181-5","unstructured":"B. Adams, H. Tromp, K. De Schutter, and W. De Meuter. 2007. Design recovery and maintenance of build systems. InSoftware Maintenance, 2007. ICSM 2007. IEEE International Conference on.114--123.","DOI":"10.1109\/ICSM.2007.4362624","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-6","unstructured":"Jafar Al-Kofahi, Hung Viet Nguyen, and Tien N. Nguyen. 2014. Fault Localization for Build Code Errors in Makefiles. InCompanion Proceedings of the 36th International Conference on Software Engineering (ICSE Companion 2014).ACM, New York, NY, USA, 600--601.","DOI":"10.1145\/2591062.2591135","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-7","unstructured":"Nasreddine Aoumeur and Gunter Saake. 2004. Dynamically Evolving Concurrent Information Systems Specification and Validation: A Component-based Petri Nets Proposal.Data Knowl. Eng.50, 2 (Aug. 2004), 117--173.","DOI":"10.1016\/j.datak.2003.10.005","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-8","unstructured":"Earl T Barr, Yuriy Brun, Premkumar Devanbu, Mark Harman, and Federica Sarro. 2014. The plastic surgery hypothesis. InProceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering.ACM, 306--317."},{"key":"key-10.1145\/3180155.3180181-9","unstructured":"Moritz Beller, Georgios Gousios, and Andy Zaidman. 2017. Travis Torrent: Synthesizing Travis CI and GitHub for Full-Stack Research on Continuous Integration. InProceedings of the 14th working conference on mining software repositories.","DOI":"10.1109\/MSR.2017.24","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-10","unstructured":"John Downs, Beryl Plimmer, and John G. Hosking. 2012. Ambient Awareness of Build Status in Collocated Software Teams. InProceedings of ICSE.507--517.","DOI":"10.1109\/ICSE.2012.6227165","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-11","unstructured":"Jean-R&#233;my Falleri, Flor&#233;al Morandat, Xavier Blanc, Matias Martinez, and Martin Monperrus. 2014. Fine-grained and Accurate Source Code Differencing. InProceedings of the 29th ACM\/IEEE International Conference on Automated Software Engineering (ASE '14).ACM, New York, NY, USA, 313--324.","DOI":"10.1145\/2642937.2642982","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-12","unstructured":"Ethan Fast, Claire Le Goues, Stephanie Forrest, and Westley Weimer. 2010. Designing better fitness functions for automated program repair. InGECCO,Martin Pelikan and J&#252;rgen Branke (Eds.). ACM, 965--972.","DOI":"10.1145\/1830483.1830654","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-13","unstructured":"B. Fluri, M. Wuersch, M. PInzger, and H. Gall. 2007. Change Distilling:Tree Differencing for Fine-Grained Source Code Change Extraction.IEEE Transactions on Software Engineering33, 11 (Nov 2007), 725--743.","DOI":"10.1109\/TSE.2007.70731","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-14","unstructured":"C. Le Goues, T. Nguyen, S. Forrest, and W. Weimer. 2012. GenProg: A Generic Method for Automatic Software Repair.IEEE Transactions on Software Engineering38, 1 (Jan 2012), 54--72.","DOI":"10.1109\/TSE.2011.104","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-15","unstructured":"F. Hassan, S. Mostafa, E. S. L. Lam, and X. Wang. 2017. Automatic Building of Java Projects in Software Repositories: A Study on Feasibility and Challenges. In2017 ACM\/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM).38--47.","DOI":"10.1109\/ESEM.2017.11","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-16","unstructured":"F. Hassan and X. Wang. 2017. Change-Aware Build Prediction Model for Stall Avoidance in Continuous Integration. In2017 ACM\/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM).157--162.","DOI":"10.1109\/ESEM.2017.23","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-17","unstructured":"Foyzul Hassan and Xiaoyin Wang. 2017. Mining readme files to support automatic building of java projects in software repositories: Poster. InProceedings of the 39th International Conference on Software Engineering Companion.277--279.","DOI":"10.1109\/ICSE-C.2017.114","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-18","unstructured":"Hubert Klein Ikkink. 2015.Gradle Dependency Management.Packt Publishing."},{"key":"key-10.1145\/3180155.3180181-19","unstructured":"Hannes Kegel and Friedrich Steimann. 2008. Systematically Refactoring Inheritance to Delegation in Java. InProceedings of the 30th International Conference on Software Engineering (ICSE '08).431--440.","DOI":"10.1145\/1368088.1368147","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-20","unstructured":"Dongsun Kim, Jaechang Nam, Jaewoo Song, and Sunghun Kim. 2013. Automatic Patch Generation Learned from Human-written Patches. InProceedings of the 2013 International Conference on Software Engineering (ICSE '13).IEEE Press, Piscataway, NJ, USA, 802--811. http:\/\/dl.acm.org\/citation.cfm?id=2486788.2486893","DOI":"10.1109\/ICSE.2013.6606626","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-21","unstructured":"X. B. D. Le, D. Lo, and C. L. Goues. 2016. History Driven Program Repair. In2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER),Vol. 1. 213--224.","DOI":"10.1109\/SANER.2016.76","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-22","unstructured":"Claire Le Goues, Michael Dewey-Vogt, Stephanie Forrest, and Westley Weimer. 2012. A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for $8 Each. InProceedings of the 34th International Conference on Software Engineering (ICSE '12).IEEE Press, Piscataway, NJ, USA, 3--13. http:\/\/dl.acm.org\/citation.cfm?id=2337223.2337225","DOI":"10.1109\/ICSE.2012.6227211","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-23","unstructured":"Fan Long and Martin Rinard. 2015. Staged Program Repair in SPR. InJoint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering."},{"key":"key-10.1145\/3180155.3180181-24","unstructured":"Fan Long and Martin Rinard. 2016. Automatic patch generation by learning correct code. InACM SIGPLAN Notices,Vol. 51. ACM, 298--312.","DOI":"10.1145\/2837614.2837617","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-25","unstructured":"Shane Mcintosh, Bram Adams, and Ahmed E. Hassan. 2012. The Evolution of Java Build Systems.Empirical Softw. Engg.17, 4--5 (Aug. 2012), 578--608."},{"key":"key-10.1145\/3180155.3180181-26","unstructured":"S. Mcintosh, B. Adams, T.H.D. Nguyen, Y. Kamei, and AE. Hassan. 2011. An empirical study of build maintenance effort. InSoftware Engineering (ICSE), 2011 33rd International Conference on.141--150.","DOI":"10.1145\/1985793.1985813","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-27","unstructured":"S. Mechtaev, J. Yi, and A. Roychoudhury. 2015. DirectFix: Looking for Simple Program Repairs. In2015 IEEE\/ACM 37th IEEE International Conference on Software Engineering,Vol. 1. 448--458."},{"key":"key-10.1145\/3180155.3180181-28","unstructured":"S. Mechtaev, J. Yi, and A. Roychoudhury. 2016. Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis. In2016 IEEE\/ACM 38th International Conference on Software Engineering (ICSE).691--701.","DOI":"10.1145\/2884781.2884807","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-29","unstructured":"Frederic P. Miller, Agnes F. Vandome, and John McBrewster. 2010.Apache Maven.Alpha Press."},{"key":"key-10.1145\/3180155.3180181-30","unstructured":"Hoang Duong Thien Nguyen, Dawei Qi, Abhik Roychoudhury, and Satish Chandra. 2013. SemFix: Program Repair via Semantic Analysis. InProceedings of the 2013 International Conference on Software Engineering.772--781."},{"key":"key-10.1145\/3180155.3180181-31","unstructured":"S. Pearson, J. Campos, R. Just, G. Fraser, R. Abreu, M. D. Ernst, D. Pang, and B. Keller. 2017. Evaluating and Improving Fault Localization. In2017 IEEE\/ACM 39th International Conference on Software Engineering (ICSE).609--620.","DOI":"10.1109\/ICSE.2017.62","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-32","unstructured":"Yuhua Qi, Xiaoguang Mao, Yan Lei, Ziying Dai, and Chengsong Wang. 2014. The Strength of Random Search on Automated Program Repair. InProceedings of the 36th International Conference on Software Engineering (ICSE 2014).ACM, New York, NY, USA, 254--265.","DOI":"10.1145\/2568225.2568254","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-33","unstructured":"Juan Ramos and others. 2003. Using tf-idf to determine word relevance in document queries. InProceedings of the first instructional conference on machine learning."},{"key":"key-10.1145\/3180155.3180181-34","unstructured":"T. Rausch, W. Hummer, P. Leitner, and S. Schulte. 2017. An Empirical Analysis of Build Failures in the Continuous Integration Workflows of Java-Based Open-Source Software. In2017 IEEE\/ACM 14th International Conference on Mining Software Repositories (MSR).345--355.","DOI":"10.1109\/MSR.2017.54","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-35","unstructured":"Hyunmin Seo, Caitlin Sadowski, Sebastian Elbaum, Edward Aftandilian, and Robert Bowdidge. 2014. Programmers' Build Errors: A Case Study (at Google). InProceedings of the 36th International Conference on Software Engineering (ICSE 2014).ACM, New York, NY, USA, 724--734.","DOI":"10.1145\/2568225.2568255","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-36","unstructured":"Hyunmin Seo, Caitlin Sadowski, Sebastian Elbaum, Edward Aftandilian, and Robert Bowdidge. 2014. Programmers' Build Errors: A Case Study (at Google). InProceedings of ICSE.724--734.","DOI":"10.1145\/2568225.2568255","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-37","unstructured":"S. Sidiroglou and A. D. Keromytis. 2005. Countering network worms through automatic patch generation.IEEE Security Privacy3, 6 (2005), 41--49.","DOI":"10.1109\/MSP.2005.144","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-38","unstructured":"E. Smith, E. Barr, C. Le Goues, and Y. Brun. 2015. Is the Cure Worse Than the Disease? Overfitting in Automated Program Repair. InJoint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering.","DOI":"10.1145\/2786805.2786825","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-39","unstructured":"Yoonki Song, Xiaoyin Wang, Tao Xie, Lu Zhang, and Hong Mei. 2010. JDF: detecting duplicate bug reports in Jazz. InProceedings of the 32nd ACM\/IEEE International Conference on Software Engineering-Volume 2.ACM, 315--316.","DOI":"10.1145\/1810295.1810368","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-40","unstructured":"Mat&#250;&#353; Sul&#237;r and Jaroslav Porub&#228;n. 2016. A Quantitative Study of Java Software Buildability. InProceedings of the 7th International Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU 2016).ACM, New York, NY, USA, 17--25.","DOI":"10.1145\/3001878.3001882","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-41","unstructured":"Ahmed Tamrawi, Hoan Anh Nguyen, Hung Viet Nguyen, and Tien N. Nguyen. 2012. SYMake: A Build Code Analysis and Refactoring Tool for Makefiles. InProceedings of the 27th IEEE\/ACM International Conference on Automated Software Engineering (ASE 2012).ACM, New York, NY, USA, 366--369.","DOI":"10.1145\/2351676.2351749","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-42","unstructured":"S. H. Tan and A. Roychoudhury. 2015. Relifix: Automated Repair of Software Regressions. InInternational Conference on Software Engineering.","DOI":"10.1109\/ICSE.2015.65","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-43","unstructured":"Yida Tao, Jindae Kim, Sunghun Kim, and Chang Xu. 2014. Automatically Generated Patches As Debugging Aids: A Human Study. InProceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering.64--74.","DOI":"10.1145\/2635868.2635873","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-44","unstructured":"Jesse Tilly and Eric M. Burke. 2002.Ant: The Definitive Guide(1st ed.). O'Reilly &#38; Associates, Inc., Sebastopol, CA, USA."},{"key":"key-10.1145\/3180155.3180181-45","unstructured":"Xiaoyin Wang, Lu Zhang, Tao Xie, Hong Mei, and Jiasu Sun. 2009. Transtrl: An automatic need-to-translate string locator for software internationalization. InProceedings of the 31st International Conference on Software Engineering.IEEE Computer Society, 555--558.","DOI":"10.1109\/ICSE.2009.5070554","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-46","unstructured":"Westley Weimer, Zachary P Fry, and Stephanie Forrest. 2013. Leveraging program equivalence for adaptive program repair: Models and first results. InAutomated Software Engineering (ASE), 2013 IEEE\/ACM 28th International Conference on.IEEE, 356--366."},{"key":"key-10.1145\/3180155.3180181-47","unstructured":"Peter Willett. 2006. The Porter stemming algorithm: then and now.Program40, 3(2006), 219--223.","DOI":"10.1108\/00330330610681295","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-48","unstructured":"Timo Wolf, Adrian Schroter, Daniela Damian, and Thanh Nguyen. 2009. Predicting Build Failures Using Social Network Analysis on Developer Communication. InProceedings of ICSE.1--11.","DOI":"10.1109\/ICSE.2009.5070503","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-49","unstructured":"J. Xuan, M. Martinez, F. DeMarco, M. Cl&#195;l'ment, S. L. Marcote, T. Durieux, D. Le Berre, and M. Monperrus. 2017. Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs.IEEE Transactions on Software Engineering43, 1 (Jan 2017), 34--55.","DOI":"10.1109\/TSE.2016.2560811","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-50","unstructured":"Hongyu Zhang, Hee Beng Kuan Tan, Lu Zhang, Xi Lin, Xiaoyin Wang, Chun Zhang, and Hong Mei. 2011. Checking enforcement of integrity constraints in database applications based on code patterns.Journal of Systems and Software84, 12 (2011), 2253--2264.","DOI":"10.1016\/j.jss.2011.06.044","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180181-51","unstructured":"Hao Zhong and Na Meng. 2017. An empirical study on using hints from past fixes: poster. InProceedings of the 39th International Conference on Software Engineering Companion.144--145.","DOI":"10.1109\/ICSE-C.2017.88","doi-asserted-by":"crossref"}],"event":{"name":"the 40th International Conference","location":"Gothenburg, Sweden","sponsor":["SIGSOFT, ACM Special Interest Group on Software Engineering","IEEE-CS, Computer Society"],"acronym":"ICSE '18","number":"40","start":{"date-parts":[[2018,5,27]]},"end":{"date-parts":[[2018,6,3]]}},"container-title":["Proceedings of the 40th International Conference on Software Engineering - ICSE '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3180181&ftid=1979935&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,10,19]],"date-time":"2019-10-19T10:20:31Z","timestamp":1571480431000},"score":1.0,"subtitle":["an automatic approach to history-driven repair of build scripts"],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450356381"],"references-count":51,"URL":"http:\/\/dx.doi.org\/10.1145\/3180155.3180181","relation":{"cites":[]}}}