{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,5,1]],"date-time":"2019-05-01T13:12:08Z","timestamp":1556716328714},"publisher-location":"New York, New York, USA","reference-count":26,"publisher":"ACM Press","isbn-type":[{"value":"9781450359337","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2019,4,8]],"date-time":"2019-04-08T00:00:00Z","timestamp":1554681600000},"delay-in-days":97,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2019]]},"DOI":"10.1145\/3297280.3297500","type":"proceedings-article","created":{"date-parts":[[2019,5,1]],"date-time":"2019-05-01T12:18:47Z","timestamp":1556713127000},"source":"Crossref","is-referenced-by-count":0,"title":["Verification-based test case generation for information-flow properties"],"prefix":"10.1145","author":[{"given":"Mihai","family":"Herda","sequence":"first","affiliation":[{"name":"Karlsruhe Institute of Technology, Germany"}]},{"given":"Shmuel","family":"Tyszberowicz","sequence":"additional","affiliation":[{"name":"Southwest University, China"}]},{"given":"Joachim","family":"M\u00fcssig","sequence":"additional","affiliation":[{"name":"Karlsruhe Institute of Technology, Germany"}]},{"given":"Bernhard","family":"Beckert","sequence":"additional","affiliation":[{"name":"Karlsruhe Institute of Technology, Germany"}]}],"member":"320","reference":[{"key":"key-10.1145\/3297280.3297500-1","unstructured":"Wolfgang Ahrendt et al. (Eds.). 2016. Deductive Software Verification - The KeY Book: From Theory to Practice. LNCS, Vol. 10001. Springer."},{"key":"key-10.1145\/3297280.3297500-2","unstructured":"Wolfgang Ahrendt, Christoph Gladisch, and Mihai Herda. 2016. Proof-based Test Case Generation. See [1], Chapter 12, 415--451."},{"key":"key-10.1145\/3297280.3297500-3","unstructured":"Frances E. Allen. 1970. Control Flow Analysis. SIGPLAN Not. 5, 7 (1970), 1--19."},{"key":"key-10.1145\/3297280.3297500-4","unstructured":"Saswat Anand et al. 2013. An orchestrated survey of methodologies for automated software test case generation. JSS 86, 8 (2013), 1978--2001."},{"key":"key-10.1145\/3297280.3297500-5","unstructured":"Bernhard Beckert et al. 2013. Information Flow in Object-Oriented Software. In Logic-Based Program Synthesis and Transformation (LOPSTR). 19--37.","DOI":"10.1007\/978-3-319-14125-1_2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-6","unstructured":"Tsong Yueh Chen, Fei-Ching Kuo, Huai Liu, Pak-Lok Poon, Dave Towey, TH Tse, and Zhi Quan Zhou. 2018. Metamorphic testing: A review of challenges and opportunities. ACM Computing Surveys (CSUR) 51, 1 (2018), 4."},{"key":"key-10.1145\/3297280.3297500-7","unstructured":"Leonardo De Moura and Nikolaj Bj&#248;rner. 2008. Z3: An efficient SMT solver. In TACAS. Springer, 337--340."},{"key":"key-10.1145\/3297280.3297500-8","unstructured":"Quoc Huy Do, Eduard Kamburjan, and Nathan Wasser. 2016. Towards Fully Automatic Logic-Based Information Flow Analysis: An Electronic-Voting Case Study. In (POST), Part of ETAPS (LNCS), Vol. 9635. Springer, 97--115."},{"key":"key-10.1145\/3297280.3297500-9","unstructured":"Stefan J. Galler and Bernhard K. Aichernig. 2014. Survey on test data generation tools. STTT 16, 6 (01 Nov 2014), 727--751."},{"key":"key-10.1145\/3297280.3297500-10","unstructured":"Joseph A. Goguen and Jos&#233; Meseguer. 1982. Security Policies and Security Models. In Symposium on Security and Privacy (SP). 11--20.","DOI":"10.1109\/SP.1982.10014","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-11","unstructured":"Damas P. Gruska. 2013. Information Flow Testing. Fundamenta Informaticae 128, 1--2 (2013), 81--95."},{"key":"key-10.1145\/3297280.3297500-12","unstructured":"Tobias Hamann et al. 2018. A Uniform Information-Flow-Security Benchmark Suite for Source Code and Bytecode. In Nordic Conference on Secure IT Systems (NordSec 2018) (November 28--30). To appear.","DOI":"10.1007\/978-3-030-03638-6_27","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-13","unstructured":"Mihai Herda. 2014. Generating Bounded Counterexamples for KeY Proof Obligations. Master Thesis. Karlsruhe Institute of Technology."},{"key":"key-10.1145\/3297280.3297500-14","unstructured":"Catalin Hritcu et al. 2016. Testing noninterference, quickly. Journal of Functional Programming 26 (2016).","DOI":"10.1017\/S0956796816000058","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-15","unstructured":"Daniel Jackson. 2002. Alloy: A Lightweight Object Modelling Notation. Transactions Software Engineering and Methodology 11, 2 (2002), 256--290."},{"key":"key-10.1145\/3297280.3297500-16","unstructured":"Johannes Kinder. 2015. Hypertesting: The Case for Automated Testing of Hyper-properties. In Hot Issues in Security Principles and Trust (HotSpot). 1--8."},{"key":"key-10.1145\/3297280.3297500-17","unstructured":"Gurvan Le Guernic. 2007. Information Flow Testing---The Third Path Towards Confidentiality Guarantee. In Advances in Computer Science - (ASIAN), Computer and Network Security (LNCS), Iliano Cervesato (Ed.), Vol. 4846. Springer, 33--47.","DOI":"10.1007\/978-3-540-76929-3_4","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-18","unstructured":"Gary T. Leavens, Joseph R. Kiniry, and Erik Poll. 2007. A JML Tutorial: Modular Specification and Verification of Functional Behavior for Java. In CAV (LNCS), Vol. 4590. Springer, 37."},{"key":"key-10.1145\/3297280.3297500-19","unstructured":"Dimiter Milushev, Wim Beck, and Dave Clarke. 2012. Noninterference via Symbolic Execution. In Formal Techniques for Distributed Systems (LNCS), Holger Giese and Grigore Rosu (Eds.), Vol. 7273. Springer, 152--168."},{"key":"key-10.1145\/3297280.3297500-20","unstructured":"Alejandro Russo and Andrei Sabelfeld. 2010. Dynamic vs. Static Flow-Sensitive Security Analysis. In Computer Security Foundations Symposium (CSF). 186--199.","DOI":"10.1109\/CSF.2010.20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3297280.3297500-21","unstructured":"Andrei Sabelfeld and Andrew C. Myers. 2006. Language-based Information-flow Security. Journal on Selected Areas in Communications 21, 1 (2006), 5--19."},{"key":"key-10.1145\/3297280.3297500-22","unstructured":"Christoph Scheben. 2014. Program-level Specification and Deductive Verification of Security Properties. Ph.D. Dissertation. Karlsruhe Institute of Technology."},{"key":"key-10.1145\/3297280.3297500-23","unstructured":"Christoph Scheben and Simon Greiner. 2016. Information Flow Analysis. See [1], Chapter 13, 453--471."},{"key":"key-10.1145\/3297280.3297500-24","unstructured":"Peter H. Schmitt. 2016. First-Order Logic. See [1], Chapter 2, 23--47."},{"key":"key-10.1145\/3297280.3297500-25","unstructured":"Benjamin Wei&#223;. 2011. Deductive verification of object-oriented software: dynamic frames, dynamic logic and predicate abstraction. Ph.D. Dissertation. Karlsruhe Institute of Technology."},{"key":"key-10.1145\/3297280.3297500-26","unstructured":"Lee J. White. 1981. Basic Mathematical Definitions and Results in Testing. Computer Program Testing (1981), 13--24."}],"event":{"name":"the 34th ACM\/SIGAPP Symposium","location":"Limassol, Cyprus","sponsor":["SIGAPP, ACM Special Interest Group on Applied Computing"],"acronym":"SAC '19","number":"34","start":{"date-parts":[[2019,4,8]]},"end":{"date-parts":[[2019,4,12]]}},"container-title":["Proceedings of the 34th ACM\/SIGAPP Symposium on Applied Computing  - SAC '19"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3297500&ftid=2053471&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,5,1]],"date-time":"2019-05-01T12:50:56Z","timestamp":1556715056000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2019]]},"ISBN":["9781450359337"],"references-count":26,"URL":"http:\/\/dx.doi.org\/10.1145\/3297280.3297500","relation":{"cites":[]}}}