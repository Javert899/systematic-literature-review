{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,2,18]],"date-time":"2019-02-18T13:19:02Z","timestamp":1550495942547},"publisher-location":"New York, New York, USA","reference-count":42,"publisher":"ACM Press","isbn-type":[{"value":"9781450364416","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,9,3]],"date-time":"2018-09-03T00:00:00Z","timestamp":1535932800000},"delay-in-days":245,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3236950.3236957","type":"proceedings-article","created":{"date-parts":[[2018,8,14]],"date-time":"2018-08-14T12:09:54Z","timestamp":1534248594000},"source":"Crossref","is-referenced-by-count":0,"title":["Verifying Fail-Free Declarative Programs"],"prefix":"10.1145","author":[{"given":"Michael","family":"Hanus","sequence":"first","affiliation":[{"name":"CAU Kiel, Institut f\u00fcr Informatik, Kiel, Germany"}]}],"member":"320","reference":[{"key":"key-10.1145\/3236950.3236957-1","unstructured":"E. Albert, M. Hanus, F. Huch, J. Oliver, and G. Vidal. 2005. Operational Semantics for Declarative Multi-Paradigm Languages. Journal of Symbolic Computation 40, 1 (2005), 795--829.","DOI":"10.1016\/j.jsc.2004.01.001","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-2","unstructured":"S. Antoy, R. Echahed, and M. Hanus. 2000. A Needed Narrowing Strategy. J. ACM 47, 4 (2000), 776--822. https:\/\/doi.org\/10.1145\/347476.347484","DOI":"10.1145\/347476.347484","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-3","unstructured":"S. Antoy and M. Hanus. 2005. Declarative Programming with Function Patterns. In Proceedings of the International Symposium on Logic-based Program Synthesis and Transformation (LOPSTR'05). Springer LNCS 3901, 6--22."},{"key":"key-10.1145\/3236950.3236957-4","unstructured":"S. Antoy and M. Hanus.2006. Overlapping Rules and Logic Variables in Functional Logic Programs. In Proceedings of the 22nd International Conference on Logic Programming (ICLP 2006). Springer LNCS 4079, 87--101.","DOI":"10.1007\/11799573_9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-5","unstructured":"S. Antoy and M. Hanus. 2009. Set Functions for Functional Logic Programming. In Proceedings of the 11th ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming (PPDP'09). ACM Press, 73--82. https:\/\/doi.org\/10.1145\/1599410.1599420","DOI":"10.1145\/1599410.1599420","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-6","unstructured":"S. Antoy and M. Hanus. 2012. Contracts and Specifications for Functional Logic Programming. In Proc. of the 14th International Symposium on Practical Aspects of Declarative Languages (PADL 2012). Springer LNCS 7149, 33--47. https:\/\/doi.org\/10.1007\/978-3-642-27694-1_4","DOI":"10.1007\/978-3-642-27694-1_4","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-7","unstructured":"S. Antoy and M. Hanus. 2017. Default Rules for Curry. Theory and Practice of Logic Programming 17, 2 (2017), 121--147. https:\/\/doi.org\/10.1017\/S1471068416000168","DOI":"10.1017\/S1471068416000168","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-8","unstructured":"Y. Bertot and P. Cast&#233;ran. 2004. Interactive Theorem Proving and Program Development - Coq'Art: The Calculus of Inductive Constructions. Springer. https:\/\/doi.org\/10.1007\/978-3-662-07964-5","DOI":"10.1007\/978-3-662-07964-5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-9","unstructured":"E. Brady. 2013. Idris, a general-purpose dependently typed programming language: Design and implementation. Journal of Functional Programming 23, 5 (2013), 552--593. https:\/\/doi.org\/10.1017\/S095679681300018X","DOI":"10.1017\/S095679681300018X","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-10","unstructured":"B. Bra&#223;el. 2011. Implementing Functional Logic Programs by Translation into Purely Functional Programs. Ph.D. Dissertation. Christian-Albrechts-Universit&#228;t zu Kiel."},{"key":"key-10.1145\/3236950.3236957-11","unstructured":"B. Bra&#223;el, M. Hanus, and F. Huch. 2004. Encapsulating Non-Determinism in Functional Logic Computations. Journal of Functional and Logic Programming 2004, 6 (2004)."},{"key":"key-10.1145\/3236950.3236957-12","unstructured":"B. Bra&#223;el, M. Hanus, B. Peem&#246;ller, and F. Reck. 2011. KiCS2: A New Compiler from Curry to Haskell. In Proc. of the 20th International Workshop on Functional and (Constraint) Logic Programming (WFLP 2011). Springer LNCS 6816, 1--18. https:\/\/doi.org\/10.1007\/978-3-642-22531-4_1","DOI":"10.1007\/978-3-642-22531-4_1","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-13","unstructured":"F. Bueno, P. L&#243;pez-Garc&#237;a, and M. V. Hermenegildo. 2004. Multivariant Non-failure Analysis via Standard Abstract Interpretation. In 7th International Symposium on Functional and Logic Programming (FLOPS 2004). Springer LNCS 2998, 100--116. https:\/\/doi.org\/10.1007\/978-3-540-24754-8_9","DOI":"10.1007\/978-3-540-24754-8_9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-14","unstructured":"J. de Dios Castro and F.J. L&#243;pez-Fraguas. 2007. Extra variables can be eliminated from functional logic programs. Electronic Notes in Theoretical Computer Science 188 (2007), 3--19.","DOI":"10.1016\/j.entcs.2006.05.049","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-15","unstructured":"L. de Moura and N. Bj&#248;rner. 2008. Z3: An Efficient SMT Solver. In Proc. of the 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2008). Springer LNCS 4963, 337--340. https:\/\/doi.org\/10.1007\/978-3-540-78800-3","DOI":"10.1007\/978-3-540-78800-3","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-16","unstructured":"S. Debray, P. L&#243;pez-Garc&#237;a,and M.V. Hermenegildo. 1997. Non-failure Analysis for Logic Programs. In 14th International Conference on Logic Programming (ICLP '97). MIT Press, 48--62."},{"key":"key-10.1145\/3236950.3236957-17","unstructured":"J.C. Gonz&#225;lez-Moreno, M.T. Hortal&#225;-Gonz&#225;lez, F.J. L&#243;pez-Fraguas, and M. Rodr&#237;guez-Artalejo. 1999. An approach to declarative programming based on a rewriting logic. Journal of Logic Programming 40 (1999), 47--87.","DOI":"10.1016\/S0743-1066(98)10029-8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-18","unstructured":"M. Hanus. 2013. Functional Logic Programming: From Theory to Curry. In Programming Logics - Essays in Memory of Harald Ganzinger. Springer LNCS 7797, 123--168. https:\/\/doi.org\/10.1007\/978-3-642-37651-1_6","DOI":"10.1007\/978-3-642-37651-1_6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-19","unstructured":"M. Hanus. 2017. Combining Static and Dynamic Contract Checking for Curry. In Proceedings of the 27th International Symposium on Logic-Based Program Synthesis and Transformation (LOPSTR 2017). Spriner LNCS 10855, 323--340. https:\/\/doi.org\/10.1007\/978-3-319-94460-9_19","DOI":"10.1007\/978-3-319-94460-9_19","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-20","unstructured":"M. Hanus, S. Antoy, B. Bra&#223;el, M. Engelke, K. H&#246;ppner, J. Koj, P. Niederau, R. Sadre, and F. Steiner. 2017. PAKCS: The Portland Aachen Kiel Curry System. Available at http:\/\/www.informatik.uni-kiel.de\/~pakcs\/."},{"key":"key-10.1145\/3236950.3236957-21","unstructured":"M. Hanus and F. Steiner. 1998. Controlling Search in Declarative Programs. In Principles of Declarative Programming (Proc. Joint International Symposium PLILP\/ALP'98). Springer LNCS 1490, 374--390.","DOI":"10.1007\/BFb0056627","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-22","unstructured":"M. Hanus (ed.). 2016. Curry: An Integrated Functional Logic Language (Vers. 0.9.0). Available at http:\/\/www.curry-language.org."},{"key":"key-10.1145\/3236950.3236957-23","unstructured":"C. Isradisaikul and A.C. Myers. 2013. Reconciling exhaustive pattern matching with objects. In ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI '13). ACM, 343--354. https:\/\/doi.org\/10.1145\/2462156.2462194","DOI":"10.1145\/2491956.2462194","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-24","unstructured":"J. Launchbury. 1993. A Natural Semantics for Lazy Evaluation. In Proc. 20th ACM Symposium on Principles of Programming Languages (POPL'93). ACM Press, 144--154.","DOI":"10.1145\/158511.158618","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-25","unstructured":"T. Lindahl and K. Sagonas. 2006. Practical Type Inference Based on Success Typings. In Proceedings of the 8th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP 2006). ACM Press, 167--178. https:\/\/doi.org\/10.1145\/1140335.1140356","DOI":"10.1145\/1140335.1140356","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-26","unstructured":"F.J. L&#243;pez-Fraguas and J. S&#225;nchez-Hern&#225;ndez. 2004. A Proof Theoretic Approach to Failure in Functional Logic Programming. Theory and Practice of Logic Programming 4, 1 (2004), 41--74.","DOI":"10.1017\/S1471068403001728","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-27","unstructured":"W. Lux. 1999. Implementing Encapsulated Search for a Lazy Functional Logic Language. In Proc. 4th Fuji International Symposium on Functional and Logic Programming (FLOPS '99). Springer LNCS 1722, 100--113.","DOI":"10.1007\/10705424_7","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-28","unstructured":"B. Meyer. 1997. Object-oriented Software Construction (seconded.). Prentice Hall."},{"key":"key-10.1145\/3236950.3236957-29","unstructured":"B. Meyer. 2017. Ending null pointer crashes. Commun. ACM 60, 5 (2017), 8--9. https:\/\/doi.org\/10.1145\/3057284","DOI":"10.1145\/3057284","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-30","unstructured":"N. Mitchell and C. Runciman. 2007. A Static Checker for Safe Pattern Matching in Haskell. In Trends in Functional Programming, Vol. 6. Intellect, 15--30."},{"key":"key-10.1145\/3236950.3236957-31","unstructured":"N. Mitchell and C. Runciman. 2008. Not all patterns, but enough: an automatic verifier for partial but sufficient pattern matching. In Proc. of the 1st ACM SIGPLAN Symposium on Haskell (Haskell 2008). ACM, 49--60. https:\/\/doi.org\/10.1145\/1411286.1411293","DOI":"10.1145\/1411286.1411293","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-32","unstructured":"L. Naish. 1985. All Solutions Predicates in Prolog. In Proc. IEEE Internat. Symposium on Logic Programming. IEEE-CS, Boston, 73--77."},{"key":"key-10.1145\/3236950.3236957-33","unstructured":"U. Norell. 2008. Dependently Typed Programming in Agda. In Proceedings of the 6th International School on Advanced Functional Programming (AFP'08). Springer LNCS 5832, 230--266. https:\/\/doi.org\/10.1007\/978-3-642-04652-0_5","DOI":"10.1007\/978-3-642-04652-0_5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-34","unstructured":"M. Odersky and T. Rompf. 2014. Unifying Functional and Object-Oriented Programming with Scala. Commun. ACM 57, 4 (2014), 76--86. https:\/\/doi.org\/10.1145\/2591013","DOI":"10.1145\/2591013","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-35","unstructured":"S. Peyton Jones (Ed.). 2003. Haskell 98 Language and Libraries--The Revised Report. Cambridge University Press."},{"key":"key-10.1145\/3236950.3236957-36","unstructured":"Z. Somogyi, F. Henderson, and T. Conway. 1996. The execution algorithm of Mercury, an efficient purely declarative logic programming language. Journal of Logic Programming 29, 1-3 (1996), 17--64.","DOI":"10.1016\/S0743-1066(96)00068-4","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-37","unstructured":"A. Stump. 2016. Verified Functional Programming in Agda. ACM and Morgan & Claypool. https:\/\/doi.org\/10.1145\/2841316","DOI":"10.1145\/2841316","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-38","unstructured":"N. Vazou, E.L. Seidel, and R. Jhala. 2014. LiquidHaskell: Experience with Refinement Types in the Real World. In Proceedings of the 2014 ACM SIGPLAN Symposium on Haskell. ACM Press, 39--51. https:\/\/doi.org\/10.1145\/2633357.2633366","DOI":"10.1145\/2633357.2633366","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-39","unstructured":"N. Vazou, E.L. Seidel, R. Jhala, and S. Peyton Jones. 2014. Refinement Types for Haskell. In Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming (ICFP). ACM Press, 269--282. https:\/\/doi.org\/10.1145\/2628136.2628161","DOI":"10.1145\/2628136.2628161","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-40","unstructured":"P. Wadler. 1997. How to Declare an Imperative. Comput. Surveys 29, 3 (1997), 240--263.","DOI":"10.1145\/262009.262011","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-41","unstructured":"D.N. Xu. 2006. Extended static checking for Haskell. In Proc. of the 36th ACM SIGPLAN Workshop on Haskell (Haskell 2006). 48--59. https:\/\/doi.org\/10.1145\/1159842.1159849","DOI":"10.1145\/1159842.1159849","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3236950.3236957-42","unstructured":"D.N. Xu, S.L. Peyton Jones, and K. Claessen. 2009. Static contract checking for Haskell. In Proc. of the 36th ACM Symposium on Principles of Programming Languages (POPL 2009). 41--52. https:\/\/doi.org\/10.1145\/1480881.1480889","DOI":"10.1145\/1480881.1480889","doi-asserted-by":"crossref"}],"event":{"name":"the 20th International Symposium","location":"Frankfurt am Main, Germany","sponsor":["SIGPLAN, ACM Special Interest Group on Programming Languages","Goethe University, Goethe University Frankfurt"],"acronym":"PPDP '18","number":"20","start":{"date-parts":[[2018,9,3]]},"end":{"date-parts":[[2018,9,5]]}},"container-title":["Proceedings of the 20th International Symposium on Principles and Practice of Declarative Programming  - PPDP '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3236957&ftid=1993870&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2018,8,23]],"date-time":"2018-08-23T12:09:01Z","timestamp":1535026141000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450364416"],"references-count":42,"URL":"http:\/\/dx.doi.org\/10.1145\/3236950.3236957","relation":{"cites":[]}}}