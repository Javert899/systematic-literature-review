{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,9,14]],"date-time":"2019-09-14T21:40:26Z","timestamp":1568497226103},"publisher-location":"New York, New York, USA","reference-count":59,"publisher":"ACM Press","isbn-type":[{"value":"9781450344449","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2016,10,19]],"date-time":"2016-10-19T00:00:00Z","timestamp":1476835200000},"delay-in-days":292,"content-version":"vor"}],"funder":[{"name":"U.S. Army Research Office","award":["W911NF0910273"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2016]]},"DOI":"10.1145\/2983990.2984036","type":"proceedings-article","created":{"date-parts":[[2016,10,20]],"date-time":"2016-10-20T15:58:54Z","timestamp":1476979134000},"source":"Crossref","is-referenced-by-count":2,"title":["Stateless model checking with data-race preemption points"],"prefix":"10.1145","author":[{"given":"Ben","family":"Blum","sequence":"first","affiliation":[{"name":"Carnegie Mellon University, USA"}]},{"given":"Garth","family":"Gibson","sequence":"additional","affiliation":[{"name":"Carnegie Mellon University, USA"}]}],"member":"320","reference":[{"key":"key-10.1145\/2983990.2984036-1","unstructured":"P. Abdulla, S. Aronis, B. Jonsson, and K. Sagonas. Optimal dynamic partial order reduction. In Principles of Programming Languages, POPL &#8217;14, pages 373&#8211;384. ACM, 2014.","DOI":"10.1145\/2535838.2535845","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-2","unstructured":"S. V. Adve and H.-J. Boehm. Memory models: A case for rethinking parallel languages and hardware. Commun. ACM, 53(8):90&#8211;101, Aug. 2010.","DOI":"10.1145\/1787234.1787255","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-3","unstructured":"S. V. Adve and K. Gharachorloo. Shared memory consistency models: A tutorial. Computer, 29(12):66&#8211;76, Dec. 1996.","DOI":"10.1109\/2.546611","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-4","unstructured":"T. Ball, S. Burckhardt, K. E. Coons, M. Musuvathi, and S. Qadeer. Preemption sealing for efficient concurrency testing. In Tools and Algorithms for the Construction and Analysis of Systems, TACAS&#8217;10, pages 420&#8211;434. Springer-Verlag, 2010.","DOI":"10.1007\/978-3-642-12002-2_35","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-5","unstructured":"A. Bessey, K. Block, B. Chelf, A. Chou, B. Fulton, S. Hallem, C. Henri-Gros, A. Kamsky, S. McPeak, and D. Engler. A few billion lines of code later: Using static analysis to find bugs in the real world. Commun. ACM, 53(2):66&#8211;75, Feb. 2010.","DOI":"10.1145\/1646353.1646374","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-6","unstructured":"P. Bielik, V. Raychev, and M. Vechev. Scalable race detection for Android applications. In Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2015, pages 332&#8211;348. ACM, 2015.","DOI":"10.1145\/2814270.2814303","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-7","unstructured":"B. Blum. Landslide: Systematic dynamic race detection in kernel space. Master&#8217;s thesis, Carnegie Mellon University, Pittsburgh, PA, USA, May 2012."},{"key":"key-10.1145\/2983990.2984036-8","unstructured":"B. Blum. Soundness proofs for iterative deepening. Technical Report CMU-PDL-16-103, Carnegie Mellon University, September 2016."},{"key":"key-10.1145\/2983990.2984036-9","unstructured":"H.-J. Boehm. How to miscompile programs with &#8221;benign&#8221; data races. In Hot Topics in Parallelism, HotPar&#8217;11, pages 3&#8211;3. USENIX Association, 2011."},{"key":"key-10.1145\/2983990.2984036-10","unstructured":"H.-J. Boehm. Position paper: Nondeterminism is unavoidable, but data races are pure evil. In Relaxing Synchronization for Multicore and Manycore Scalability, RACES &#8217;12, pages 9&#8211;14. ACM, 2012.","DOI":"10.1145\/2414729.2414732","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-11","unstructured":"H.-J. Boehm and S. V. Adve. Foundations of the C++ concurrency memory model. In Programming Language Design and Implementation, PLDI &#8217;08, pages 68&#8211;78. ACM, 2008.","DOI":"10.1145\/1375581.1375591","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-12","unstructured":"S. Burckhardt, P. Kothari, M. Musuvathi, and S. Nagarakatte. A randomized scheduler with probabilistic guarantees of finding bugs. In Architectural Support for Programming Languages and Operating Systems, ASPLOS XV, pages 167&#8211;178. ACM, 2010.","DOI":"10.1145\/1736020.1736040","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-13","unstructured":"K. E. Coons, S. Burckhardt, and M. Musuvathi. Gambit: Effective unit testing for concurrency libraries. In Principles and Practice of Parallel Programming, PPoPP &#8217;10, pages 15&#8211; 24. ACM, 2010.","DOI":"10.1145\/1693453.1693458","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-14","unstructured":"K. E. Coons, M. Musuvathi, and K. S. McKinley. Bounded partial-order reduction. In Object Oriented Programming Systems Languages &#38;amp;#38; Applications, OOPSLA &#8217;13, pages 833&#8211;848. ACM, 2013.","DOI":"10.1145\/2509136.2509556","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-15","unstructured":"H. Cui, J. Simsa, Y.-H. Lin, H. Li, B. Blum, X. Xu, J. Yang, G. A. Gibson, and R. E. Bryant. Parrot: A practical runtime for deterministic, stable, and reliable threads. In Symposium on Operating Systems Principles, SOSP &#8217;13, pages 388&#8211;405. ACM, 2013.","DOI":"10.1145\/2517349.2522735","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-16","unstructured":"B. Demsky and P. Lam. SATCheck: SAT-directed stateless model checking for SC and TSO. In Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2015, pages 20&#8211;36. ACM, 2015.","DOI":"10.1145\/2858965.2814297","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-17","unstructured":"D. Eckhardt. Pebbles kernel specification. http:\/\/www.cs. cmu.edu\/~410-s16\/p2\/kspec.pdf, 2016."},{"key":"key-10.1145\/2983990.2984036-18","unstructured":"D. Eckhardt. Project 2: User level thread library. http: \/\/www.cs.cmu.edu\/~410-s16\/p2\/thr_lib.pdf, 2016."},{"key":"key-10.1145\/2983990.2984036-19","unstructured":"L. Effinger-Dean, B. Lucia, L. Ceze, D. Grossman, and H.-J. Boehm. Ifrit: Interference-free regions for dynamic datarace detection. In Object Oriented Programming Systems Languages and Applications, OOPSLA &#8217;12, pages 467&#8211;484. ACM, 2012.","DOI":"10.1145\/2384616.2384650","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-20","unstructured":"D. Engler and K. Ashcraft. RacerX: Effective, static detection of race conditions and deadlocks. In Symposium on Operating Systems Principles, SOSP &#8217;03, pages 237&#8211;252. ACM, 2003.","DOI":"10.1145\/945445.945468","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-21","unstructured":"J. Erickson, M. Musuvathi, S. Burckhardt, and K. Olynyk. Effective data-race detection for the kernel. In Operating Systems Design and Implementation, OSDI&#8217;10, pages 1&#8211;16. USENIX Association, 2010."},{"key":"key-10.1145\/2983990.2984036-22","unstructured":"C. Flanagan and S. N. Freund. Fasttrack: Efficient and precise dynamic race detection. In Programming Language Design and Implementation, PLDI &#8217;09, pages 121&#8211;133. ACM, 2009.","DOI":"10.1145\/1542476.1542490","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-23","unstructured":"C. Flanagan and P. Godefroid. Dynamic partial-order reduction for model checking software. In Principles of Programming Languages, POPL &#8217;05, pages 110&#8211;121. ACM, 2005.","DOI":"10.1145\/1040305.1040315","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-24","unstructured":"P. Fonseca, R. Rodrigues, and B. B. Brandenburg. SKI: Exposing kernel concurrency bugs through systematic schedule exploration. In Operating Systems Design and Implementation, OSDI&#8217;14, pages 415&#8211;431. USENIX Association, 2014."},{"key":"key-10.1145\/2983990.2984036-25","unstructured":"P. Godefroid. VeriSoft: A tool for the automatic analysis of concurrent reactive software. In Computer Aided Verification, CAV &#8217;97, pages 476&#8211;479. Springer-Verlag, 1997.","DOI":"10.1007\/3-540-63166-6_52","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-26","unstructured":"H. Guo, M. Wu, L. Zhou, G. Hu, J. Yang, and L. Zhang. Practical software model checking via dynamic interface reduction. In Symposium on Operating Systems Principles, SOSP &#8217;11, pages 265&#8211;278. ACM, 2011.","DOI":"10.1145\/2043556.2043582","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-27","unstructured":"G. J. Holzmann. The model checker SPIN. IEEE Transactions on Software Engineering, 23(5):279&#8211;295, May 1997.","DOI":"10.1109\/32.588521","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-28","unstructured":"C.-H. Hsiao, J. Yu, S. Narayanasamy, Z. Kong, C. L. Pereira, G. A. Pokam, P. M. Chen, and J. Flinn. Race detection for event-driven mobile applications. In Programming Language Design and Implementation, PLDI &#8217;14, pages 326&#8211;336. ACM, 2014.","DOI":"10.1145\/2666356.2594330","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-29","unstructured":"J. Huang. Stateless model checking concurrent programs with maximal causality reduction. In Programming Language Design and Implementation, PLDI 2015, pages 165&#8211;174. ACM, 2015.","DOI":"10.1145\/2813885.2737975","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-30","unstructured":"C. S. Jensen, A. M&#248;ller, V. Raychev, D. Dimitrov, and M. Vechev. Stateless model checking of event-driven applications. In Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2015, pages 57&#8211;73. ACM, 2015.","DOI":"10.1145\/2814270.2814282","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-31","unstructured":"B. Kasikci, C. Zamfir, and G. Candea. Data races vs. data race bugs: Telling the difference with Portend. In Architectural Support for Programming Languages and Operating Systems, ASPLOS XVII, pages 185&#8211;198. ACM, 2012.","DOI":"10.1145\/2150976.2150997","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-32","unstructured":"C. Killian, J. W. Anderson, R. Jhala, and A. Vahdat. Life, death, and the critical transition: finding liveness bugs in systems code. In Networked Systems Design &#38;amp; Implementation, NSDI&#8217;07, pages 18&#8211;18. USENIX Association, 2007."},{"key":"key-10.1145\/2983990.2984036-33","unstructured":"R. E. Korf. Iterative-deepening-A: An optimal admissible tree search. In International Joint Conference on Artificial Intelligence, IJCAI&#8217;85, pages 1034&#8211;1036. Morgan Kaufmann Publishers Inc., 1985."},{"key":"key-10.1145\/2983990.2984036-34","unstructured":"L. Lamport. Time, clocks, and the ordering of events in a distributed system. Commun. ACM, 21(7):558&#8211;565, July 1978.","DOI":"10.1145\/359545.359563","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-35","unstructured":"T. Leesatapornwongsa, M. Hao, P. Joshi, J. F. Lukman, and H. S. Gunawi. SAMC: Semantic-aware model checking for fast discovery of deep bugs in cloud systems. In Operating Systems Design and Implementation, OSDI&#8217;14, pages 399&#8211; 414. USENIX Association, 2014."},{"key":"key-10.1145\/2983990.2984036-36","unstructured":"P. S. Magnusson, M. Christensson, J. Eskilson, D. Forsgren, G. H&#730;allberg, J. H&#246;gberg, F. Larsson, A. Moestedt, and B. Werner. Simics: A full system simulation platform. Computer, 35(2):50&#8211;58, Feb. 2002.","DOI":"10.1109\/2.982916","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-37","unstructured":"P. Maiya, A. Kanade, and R. Majumdar. Race detection for Android applications. In Programming Language Design and Implementation, PLDI &#8217;14, pages 316&#8211;325. ACM, 2014.","DOI":"10.1145\/2666356.2594311","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-38","unstructured":"A. Mazurkiewicz. Trace theory. In Advances in Petri Nets 1986, Part II on Petri Nets: Applications and Relationships to Other Models of Concurrency, pages 279&#8211;324. Springer-Verlag New York, Inc., 1987.","DOI":"10.1007\/3-540-17906-2_30","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-39","unstructured":"P. McKenney and J. Walpole. What is RCU, fundamentally? https:\/\/lwn.net\/Articles\/262464\/, 2007."},{"key":"key-10.1145\/2983990.2984036-40","unstructured":"M. Musuvathi and S. Qadeer. Iterative context bounding for systematic testing of multithreaded programs. In Programming Language Design and Implementation, PLDI &#8217;07, pages 446&#8211;455. ACM, 2007.","DOI":"10.1145\/1250734.1250785","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-41","unstructured":"M. Musuvathi, S. Qadeer, T. Ball, G. Basler, P. A. Nainar, and I. Neamtiu. Finding and reproducing heisenbugs in concurrent programs. In Operating Systems Design and Implementation, OSDI&#8217;08, pages 267&#8211;280. USENIX Association, 2008."},{"key":"key-10.1145\/2983990.2984036-42","unstructured":"S. Narayanasamy, Z. Wang, J. Tigani, A. Edwards, and B. Calder. Automatically classifying benign and harmful data races using replay analysis. In Programming Language Design and Implementation, PLDI &#8217;07, pages 22&#8211;31. ACM, 2007.","DOI":"10.1145\/1250734.1250738","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-43","unstructured":"N. Nethercote and J. Seward. Valgrind: a framework for heavyweight dynamic binary instrumentation. In Programming Language Design and Implementation, PLDI &#8217;07, pages 89&#8211;100. ACM, 2007.","DOI":"10.1145\/1250734.1250746","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-44","unstructured":"R. O&#8217;Callahan and J.-D. Choi. Hybrid dynamic data race detection. In Principles and Practice of Parallel Programming, PPoPP &#8217;03, pages 167&#8211;178. ACM, 2003.","DOI":"10.1145\/966049.781528","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-45","unstructured":"B. Pfaff, A. Romano, and G. Back. The Pintos instructional operating system kernel. In Computer Science Education, SIGCSE &#8217;09, pages 453&#8211;457. ACM, 2009.","DOI":"10.1145\/1508865.1509023","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-46","unstructured":"E. Pozniansky and A. Schuster. Efficient on-the-fly data race detection in multithreaded C++ programs. In Principles and Practice of Parallel Programming, PPoPP &#8217;03, pages 179&#8211; 190. ACM, 2003.","DOI":"10.1109\/IPDPS.2003.1213513","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-47","unstructured":"S. Savage, M. Burrows, G. Nelson, P. Sobalvarro, and T. Anderson. Eraser: A dynamic data race detector for multithreaded programs. ACM Trans. Comput. Syst., 15(4):391&#8211; 411, Nov. 1997.","DOI":"10.1145\/265924.265927","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-48","unstructured":"K. Sen. Race directed random testing of concurrent programs. In Programming Language Design and Implementation, PLDI &#8217;08, pages 11&#8211;21. ACM, 2008.","DOI":"10.1145\/1375581.1375584","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-49","unstructured":"K. Serebryany and T. Iskhodzhanov. ThreadSanitizer: Data race detection in practice. In Workshop on Binary Instrumentation and Applications, WBIA &#8217;09, pages 62&#8211;71. ACM, 2009.","DOI":"10.1145\/1791194.1791203","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-50","unstructured":"J. Simsa. Systematic and Scalable Testing of Concurrent Programs. PhD thesis, Carnegie Mellon University, Pittsburgh, PA, USA, 2013."},{"key":"key-10.1145\/2983990.2984036-51","unstructured":"J. Simsa, R. Bryant, and G. Gibson. dBug: Systematic evaluation of distributed systems. In Systems Software Verification, SSV&#8217;10, pages 3&#8211;3. USENIX Association, 2010."},{"key":"key-10.1145\/2983990.2984036-52","unstructured":"J. Simsa, R. Bryant, G. Gibson, and J. Hickey. Efficient Exploratory Testing of Concurrent Systems. Technical Report CMU-PDL-11-113, Carnegie Mellon University, November 2011."},{"key":"key-10.1145\/2983990.2984036-53","unstructured":"J. Simsa, R. Bryant, and G. Gibson. Runtime estimation and resource allocation for concurrency testing. Technical Report CMU-PDL-12-113, Carnegie Mellon University, December 2012."},{"key":"key-10.1145\/2983990.2984036-54","unstructured":"J. Simsa, R. Bryant, G. Gibson, and J. Hickey. Concurrent systematic testing at scale. Technical Report CMU-PDL-12-101, Carnegie Mellon University, May 2012."},{"key":"key-10.1145\/2983990.2984036-55","unstructured":"Y. Smaragdakis, J. Evans, C. Sadowski, J. Yi, and C. Flanagan. Sound predictive race detection in polynomial time. In Principles of Programming Languages, POPL &#8217;12, pages 387&#8211;400. ACM, 2012.","DOI":"10.1145\/2103656.2103702","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-56","unstructured":"P. Thomson, A. F. Donaldson, and A. Betts. Concurrency testing using schedule bounding: An empirical study. In Principles and Practice of Parallel Programming, PPoPP &#8217;14, pages 15&#8211;28. ACM, 2014.","DOI":"10.1145\/2555243.2555260","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-57","unstructured":"J. Yang, T. Chen, M. Wu, Z. Xu, X. Liu, H. Lin, M. Yang, F. Long, L. Zhang, and L. Zhou. MODIST: transparent model checking of unmodified distributed systems. In Networked Systems Design and Implementation, NSDI&#8217;09, pages 213&#8211; 228. USENIX Association, 2009."},{"key":"key-10.1145\/2983990.2984036-58","unstructured":"Y. Yang, X. Chen, G. Gopalakrishnan, and R. M. Kirby. Efficient stateful dynamic partial order reduction. In Workshop on Model Checking Software, SPIN &#8217;08, pages 288&#8211;305. Springer-Verlag, 2008.","DOI":"10.1007\/978-3-540-85114-1_20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2983990.2984036-59","unstructured":"N. Zhang, M. Kusano, and C. Wang. Dynamic partial order reduction for relaxed memory models. In Programming Language Design and Implementation, PLDI 2015, pages 250&#8211; 259. ACM, 2015.","DOI":"10.1145\/2813885.2737956","doi-asserted-by":"crossref"}],"event":{"name":"the 2016 ACM SIGPLAN International Conference","location":"Amsterdam, Netherlands","sponsor":["SIGAda, ACM Special Interest Group on Ada Programming Language","SIGPLAN, ACM Special Interest Group on Programming Languages"],"acronym":"OOPSLA 2016","number":"2016","start":{"date-parts":[[2016,11,2]]},"end":{"date-parts":[[2016,11,4]]}},"container-title":["Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications - OOPSLA 2016"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=2984036&amp;ftid=1804984&amp;dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,14]],"date-time":"2019-09-14T21:21:09Z","timestamp":1568496069000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2016]]},"ISBN":["9781450344449"],"references-count":59,"URL":"http:\/\/dx.doi.org\/10.1145\/2983990.2984036","relation":{"cites":[]}}}