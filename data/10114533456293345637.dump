{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,9,3]],"date-time":"2019-09-03T13:40:32Z","timestamp":1567518032375},"publisher-location":"New York, New York, USA","reference-count":31,"publisher":"ACM Press","isbn-type":[{"value":"9781450372336","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2019,9,18]],"date-time":"2019-09-18T00:00:00Z","timestamp":1568764800000},"delay-in-days":260,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2019]]},"DOI":"10.1145\/3345629.3345637","type":"proceedings-article","created":{"date-parts":[[2019,9,3]],"date-time":"2019-09-03T12:32:59Z","timestamp":1567513979000},"source":"Crossref","is-referenced-by-count":0,"title":["Reviewer Recommendation using Software Artifact Traceability Graphs"],"prefix":"10.1145","author":[{"given":"Emre","family":"S\u00fcl\u00fcn","sequence":"first","affiliation":[{"name":"Bilkent University, Ankara, Turkey"}]},{"given":"Eray","family":"T\u00fcz\u00fcn","sequence":"additional","affiliation":[{"name":"Bilkent University, Ankara, Turkey"}]},{"given":"U\u011fur","family":"Do\u011frus\u00f6z","sequence":"additional","affiliation":[{"name":"Bilkent University, Ankara, Turkey"}]}],"member":"320","reference":[{"key":"key-10.1145\/3345629.3345637-1","unstructured":"John Anvik. 2006. Automating bug report assignment. In Proceeding of the 28th international conference on Software engineering - ICSE '06. https:\/\/doi.org\/10.1145\/1134285.1134457","DOI":"10.1145\/1134285.1134457","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-2","unstructured":"John Anvik, Lyndon Hiew, and Gail C. Murphy. 2006. Who should fix this bug?. In Proceeding of the 28th international conference on Software engineering - ICSE '06. https:\/\/doi.org\/10.1145\/1134285.1134336","DOI":"10.1145\/1134285.1134336","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-3","unstructured":"Vipin Balachandran. 2013. Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation. Proceedings - International Conference on Software Engineering (2013), 931--940. https:\/\/doi.org\/10.1109\/ICSE.2013.6606642","DOI":"10.1109\/ICSE.2013.6606642","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-4","unstructured":"Santiago Due&#241;as, Valerio Cosentino, Gregorio Robles, and Jesus M. Gonzalez-Barahona. 2018. Perceval: Software project data at your will. In Proceedings of the 40th International Conference on Software Engineering Companion Proceeedings - ICSE '18, Vol. s8-I. ACM Press, New York, New York, USA, 1--4. https:\/\/doi.org\/10.1145\/3183440.3183475","DOI":"10.1145\/3183440.3183475","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-5","unstructured":"Tim Hegeman and Alexandru Iosup. 2018. Survey of Graph Analysis Applications. (2018). http:\/\/arxiv.org\/abs\/1807.00382"},{"key":"key-10.1145\/3345629.3345637-6","unstructured":"Gaeul Jeong, Sunghun Kim, and Thomas Zimmermann. 2009. Improving code review by predicting reviewers and acceptance of patches. Research on Software (2009). http:\/\/rosaec.snu.ac.kr\/publish\/2009\/techmemo\/ROSAEC-2009-006.pdf"},{"key":"key-10.1145\/3345629.3345637-7","unstructured":"Jing Jiang, Jia Huan He, and Xue Yuan Chen. 2015. CoreDevRec: Automatic Core Member Recommendation for Contribution Evaluation. Journal of Computer Science and Technology 30, 5 (2015), 998--1016. https:\/\/doi.org\/10.1007\/s11390-015-1577-3","DOI":"10.1007\/s11390-015-1577-3","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-8","unstructured":"Huzefa Kagdi, Malcom Gethers, Denys Poshyvanyk, and Maen Hammad. 2012. Assigning change requests to software developers. Journal of software: Evolution and Process (2012). https:\/\/doi.org\/10.1002\/smr.530","DOI":"10.1002\/smr.530","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-9","unstructured":"Mik Kersten. 2018. A cambrian explosion of DevOps tools. IEEE Software 35, 2 (2018), 14--17. https:\/\/doi.org\/10.1109\/MS.2018.1661330","DOI":"10.1109\/MS.2018.1661330","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-10","unstructured":"Jungil Kim and Eunjoo Lee. 2018. Understanding review expertise of developers: A reviewer recommendation approach based on latent Dirichlet allocation. Symmetry 10, 4 (2018), 5--7. https:\/\/doi.org\/10.3390\/sym10040114","DOI":"10.3390\/sym10040114","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-11","unstructured":"John Boaz Lee, Akinori Ihara, Akito Monden, and Ken Ichi Matsumoto. 2013. Patch reviewer recommendation in OSS projects. Proceedings - Asia-Pacific Software Engineering Conference, APSEC 2 (2013), 1--6. https:\/\/doi.org\/10.1109\/APSEC.2013.103","DOI":"10.1109\/APSEC.2013.103","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-12","unstructured":"Jakub Lip&#269;&#225;k and Bruno Rossi. 2018. A Large-Scale Study on Source Code Reviewer Recommendation. In 44th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), IEEE. https:\/\/doi.org\/10.1109\/SEAA.2018.00068","DOI":"10.1109\/SEAA.2018.00068","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-13","unstructured":"Jakub Lip&#269;&#225;k and Bruno Rossi. 2018. Rev-rec Source - Code Reviews Dataset (SEAA2018). (2018). https:\/\/doi.org\/10.6084\/m9.figshare.6462380.v1"},{"key":"key-10.1145\/3345629.3345637-14","unstructured":"Laura MacLeod, Michaela Greiler, Margaret Anne Storey, Christian Bird, and Jacek Czerwonka. 2018. Code Reviewing in the Trenches: Challenges and Best Practices. IEEE Software (2018). https:\/\/doi.org\/10.1109\/MS.2017.265100500","DOI":"10.1109\/MS.2017.265100500","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-15","unstructured":"Hoda Naguib, Nitesh Narayan, Bernd Br&#252;gge, and Dina Helal. 2013. Bug report assignee recommendation using activity profiles. In IEEE International Working Conference on Mining Software Repositories. https:\/\/doi.org\/10.1109\/MSR.2013.6623999","DOI":"10.1109\/MSR.2013.6623999","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-16","unstructured":"Ali Ouni, Raula Gaikovina Kula, and Katsuro Inoue. 2017. Search-based peer reviewers recommendation in modern code review. Proceedings - 2016 IEEE International Conference on Software Maintenance and Evolution, ICSME 2016 (2017), 367--377. https:\/\/doi.org\/10.1109\/ICSME.2016.65","DOI":"10.1109\/ICSME.2016.65","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-17","unstructured":"Zhenhui Peng, Jeehoon Yoo, Meng Xia, Sunghun Kim, and Xiaojuan Ma. 2018. Exploring How Software Developers Work with Mention Bot in GitHub. Proceedings of the Sixth International Symposium of Chinese CHI (2018), 152--155. https:\/\/doi.org\/10.1145\/3202667.3202694","DOI":"10.1145\/3202667.3202694","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-18","unstructured":"Mohammad Masudur Rahman, Chanchal K. Roy, and Jason A. Collins. 2016. CoRReCT. Proceedings of the 38th International Conference on Software Engineering Companion - ICSE '16 (2016). https:\/\/doi.org\/10.1145\/2889160.2889244","DOI":"10.1145\/2889160.2889244","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-19","unstructured":"Per Runeson and Martin H&#246;st. 2009. Guidelines for conducting and reporting case study research in software engineering. Empirical Software Engineering (2009). https:\/\/doi.org\/10.1007\/s10664-008-9102-8 arXiv:gr-qc\/9809069v1","DOI":"10.1007\/s10664-008-9102-8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-20","unstructured":"Caitlin Sadowski, Emma S&#246;derberg, Luke Church, Michal Sipko, and Alberto Bacchelli. 2018. Modern code review. Proceedings of the 40th International Conference on Software Engineering Software Engineering in Practice - ICSE-SEIP '18 (2018), 181--190. https:\/\/doi.org\/10.1145\/3183519.3183525","DOI":"10.1145\/3183519.3183525","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-21","unstructured":"Emre S&#252;l&#252;n. 2019. Suggesting Reviewers of Software Artifacts using Traceability Graphs. In Proceedings of the 27th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC\/FSE 19), August 26-30, 2019, Tallinn, Estonia. ACM, New York, NY, USA. https:\/\/doi.org\/10.1145\/3338906.3342507","DOI":"10.1145\/3338906.3342507","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-22","unstructured":"Patanamon Thongtanunam, Chakkrit Tantithamthavorn, Raula Gaikovina Kula, Norihiro Yoshida, Hajimu Iida, and Ken Ichi Matsumoto. 2015. Who should review my code? A file location-based code-reviewer recommendation approach for Modern Code Review. 2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering, SANER 2015 - Proceedings (2015), 141--150. https:\/\/doi.org\/10.1109\/SANER.2015.7081824","DOI":"10.1109\/SANER.2015.7081824","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-23","unstructured":"Eray T&#252;z&#252;n, Bedir Tekinerdogan, Yagup Macit, and Kursat Ince. 2019. Adopting integrated application lifecycle management within a large-scale software company: An action research approach. Journal of Systems and Software 149 (2019), 63--82. https:\/\/doi.org\/10.1016\/J.JSS.2018.11.021","DOI":"10.1016\/j.jss.2018.11.021","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-24","unstructured":"Xin Xia, David Lo, Xinyu Wang, and Xiaohu Yang. 2015. Who should review this change?: Putting text and file location analyses together for more accurate recommendations. 2015 IEEE 31st International Conference on Software Maintenance and Evolution, ICSME 2015 - Proceedings (2015), 261--270. https:\/\/doi.org\/10.1109\/ICSM.2015.7332472","DOI":"10.1109\/ICSM.2015.7332472","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-25","unstructured":"Zhenglin Xia, Hailong Sun, Jing Jiang, Xu Wang, and Xudong Liu. 2017. A hybrid approach to code reviewer recommendation with collaborative filtering. SoftwareMining 2017 - Proceedings of the 2017 6th IEEE\/ACM International Workshop on Software Mining, co-located with ASE 2017 (2017), 24--31. https:\/\/doi.org\/10.1109\/SOFTWAREMINING.2017.8100850","DOI":"10.1109\/SOFTWAREMINING.2017.8100850","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-26","unstructured":"Cheng Yang, Xun hui Zhang, Ling bin Zeng, Qiang Fan, Tao Wang, Yue Yu, Gang Yin, and Huai min Wang. 2018. RevRec: A two-layer reviewer recommendation algorithm in pull-based development model. Journal of Central South University 25, 5 (2018), 1129--1143. https:\/\/doi.org\/10.1007\/s11771-018-3812-x","DOI":"10.1007\/s11771-018-3812-x","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-27","unstructured":"Xin Yang. 2014. Social Network Analysis in Open Source Software Peer Review. In Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering. https:\/\/doi.org\/10.1145\/2635868.2661682","DOI":"10.1145\/2635868.2661682","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-28","unstructured":"Yue Yu, Huaimin Wang, Gang Yin, and Tao Wang. 2016. Reviewer recommendation for pull-requests in GitHub: What can we learn from code review and bug assignment? Information and Software Technology 74 (2016), 204--218. https:\/\/doi.org\/10.1016\/j.infsof.2016.01.004","DOI":"10.1016\/j.infsof.2016.01.004","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-29","unstructured":"Motahareh Bahrami Zanjani, Huzefa Kagdi, and Christian Bird. 2016. Automatically Recommending Peer Reviewers in Modern Code Review. IEEE Transactions on Software Engineering 42, 6 (2016), 530--543. https:\/\/doi.org\/10.1109\/TSE.2015.2500238","DOI":"10.1109\/TSE.2015.2500238","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-30","unstructured":"Wei Qiang Zhang, Li Ming Nie, He Jiang, Zhen Yu Chen, and Jia Liu. 2014. Developer social networks in software engineering: construction, analysis, and applications. Science China Information Sciences 57, 12 (2014), 1--23. https:\/\/doi.org\/10.1007\/s11432-014-5221-6","DOI":"10.1007\/s11432-014-5221-6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3345629.3345637-31","unstructured":"Thomas Zimmermann and Nachiappan Nagappan. 2008. Predicting defects using network analysis on dependency graphs. Proceedings of the 13th international conference on Software engineering - ICSE '08 (2008), 531. https:\/\/doi.org\/10.1145\/1368088.1368161","DOI":"10.1145\/1368088.1368161","doi-asserted-by":"crossref"}],"event":{"name":"the Fifteenth International Conference","location":"Recife, Brazil","acronym":"PROMISE'19","number":"15","start":{"date-parts":[[2019,9,18]]},"end":{"date-parts":[[2019,9,18]]}},"container-title":["Proceedings of the Fifteenth International Conference on Predictive Models and Data Analytics in Software Engineering  - PROMISE'19"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3345637&ftid=2081556&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,3]],"date-time":"2019-09-03T13:12:47Z","timestamp":1567516367000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2019]]},"ISBN":["9781450372336"],"references-count":31,"URL":"http:\/\/dx.doi.org\/10.1145\/3345629.3345637","relation":{"cites":[]}}}