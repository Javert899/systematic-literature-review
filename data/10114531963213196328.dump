{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,10,31]],"date-time":"2019-10-31T21:03:53Z","timestamp":1572555833434},"publisher-location":"New York, New York, USA","reference-count":39,"publisher":"ACM Press","isbn-type":[{"value":"9781450357142","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,5,28]],"date-time":"2018-05-28T00:00:00Z","timestamp":1527465600000},"delay-in-days":147,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3196321.3196328","type":"proceedings-article","created":{"date-parts":[[2018,7,19]],"date-time":"2018-07-19T13:05:12Z","timestamp":1532005512000},"source":"Crossref","is-referenced-by-count":2,"title":["Logtracker"],"prefix":"10.1145","author":[{"given":"Shanshan","family":"Li","sequence":"first","affiliation":[{"name":"National University of Defense Technology, Changsha, China"}]},{"given":"Xu","family":"Niu","sequence":"additional","affiliation":[{"name":"National University of Defense Technology, Changsha, China"}]},{"given":"Zhouyang","family":"Jia","sequence":"additional","affiliation":[{"name":"National University of Defense Technology, Changsha, China"}]},{"given":"Ji","family":"Wang","sequence":"additional","affiliation":[{"name":"National University of Defense Technology, changsha, China"}]},{"given":"Haochen","family":"He","sequence":"additional","affiliation":[{"name":"National University of Defense Technology, Changsha, China"}]},{"given":"Teng","family":"Wang","sequence":"additional","affiliation":[{"name":"National University of Defense Technology, Changsha, China"}]}],"member":"320","reference":[{"key":"key-10.1145\/3196321.3196328-1","unstructured":"Matthew Arnold and Barbara G. Ryder. 2001. A framework for reducing the cost of instrumented code.ACM SIGPLAN Notices36, 5 (2001), 168--179.","DOI":"10.1145\/381694.378832","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-2","unstructured":"Boyuan Chen and Zhen Ming (Jack) Jiang. 2017. Characterizing logging practices in Java-based open source software projects - a replication study in Apache Software Foundation.Empirical Software Engineering22, 1 (2017), 330--374.","DOI":"10.1007\/s10664-016-9429-5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-3","unstructured":"Boyuan Chen and Zhen Ming Jiang. 2017. Characterizing and Detecting AntiPatterns in the Logging Code.Proceedings - 2017 IEEE\/ACM 39th International Conference on Software Engineering, ICSE 2017(2017), 71--81."},{"key":"key-10.1145\/3196321.3196328-4","unstructured":"Michael L. Collard, Michael John Decker, and Jonathan I. Maletic. 2013. SrcML: An infrastructure for the exploration, analysis, and manipulation of source code: A tool demonstration. InIEEE International Conference on Software Maintenance, ICSM.IEEE, 516--519."},{"key":"key-10.1145\/3196321.3196328-5","unstructured":"Collectd. 2017. Start page - collectd - The system statistics collection daemon. (2017). http:\/\/collectd.org\/"},{"key":"key-10.1145\/3196321.3196328-6","unstructured":"Software Freedom Conservancy. 2018. Git. (2018). https:\/\/git-scm.com\/"},{"key":"key-10.1145\/3196321.3196328-7","unstructured":"Wayne Davison. 2018. rsync. (2018). https:\/\/rsync.samba.org\/"},{"key":"key-10.1145\/3196321.3196328-8","unstructured":"Rui Ding, Hucheng Zhou, Jian-Guang Lou, Hongyu Zhang, Qingwei Lin, Qiang Fu, Dongmei Zhang, and Tao Xie. 2015. Log 2: a cost-aware logging mechanism for performance diagnosis.Proceedings of the 2015 USENIX Conference on Usenix Annual Technical Conference - USENIX ATC '15(2015), 139--150."},{"key":"key-10.1145\/3196321.3196328-9","unstructured":"Jean-R&#233;my Falleri, Flor&#233;al Morandat, Xavier Blanc, Matias Martinez, and Martin Montperrus. 2014. Fine-grained and accurate source code differencing.Proceedings of the 29th ACM\/IEEE international conference on Automated software engineering - ASE '14(2014), 313--324."},{"key":"key-10.1145\/3196321.3196328-10","unstructured":"Free Software Foundation. 2016. Diffutils - GNU Project - Free Software Foundation. (2016). https:\/\/www.gnu.org\/software\/diffutils\/"},{"key":"key-10.1145\/3196321.3196328-11","unstructured":"Free Software Foundation. 2017. Tar - GNU Project - Free Software Foundation. (2017). https:\/\/www.gnu.org\/software\/tar\/"},{"key":"key-10.1145\/3196321.3196328-12","unstructured":"Free Software Foundation. 2017. Wget - GNU Project - Free Software Foundation. (2017). https:\/\/www.gnu.org\/software\/wget\/"},{"key":"key-10.1145\/3196321.3196328-13","unstructured":"Python Software Foundation. 2018. Built-in Functions-Python 2.7.14 documentation. (2018). https:\/\/docs.python.org\/2\/library\/functions.html"},{"key":"key-10.1145\/3196321.3196328-14","unstructured":"The Apache Software Foundation. 2017. httpd - Apache Hypertext Transfer Protocol Server - Apache HTTP Server Version 2.4. (2017). http:\/\/httpd.apache.org\/docs\/2.4\/programs\/httpd.html"},{"key":"key-10.1145\/3196321.3196328-15","unstructured":"Qiang Fu, Jieming Zhu, Wenlu Hu, Jian-Guang Lou, Rui Ding, Qingwei Lin, Dongmei Zhang, and Tao Xie. 2014. Where do developers log? an empirical study on logging practices in industry.Proceedings of the 36th International Conference on Software Engineering - ICSE '14(2014), 24--33."},{"key":"key-10.1145\/3196321.3196328-16","unstructured":"Mark Gabel, Lingxiao Jiang, and Zhendong Su. 2008. Scalable detection of semantic clones.Proceedings of the 30th international conference on Software engineering - ICSE '08(2008), 321."},{"key":"key-10.1145\/3196321.3196328-17","unstructured":"Github. 2018. GitHub - GumTreeDiff\/gumtree: A neat code differencing tool. (2018). https:\/\/github.com\/GumTreeDiff\/gumtree"},{"key":"key-10.1145\/3196321.3196328-18","unstructured":"GitHub. 2018. skyhover\/Deckard: Code clone detection; clone-related bug detection; semantic clone analysis. (2018). https:\/\/github.com\/skyhover\/Deckard"},{"key":"key-10.1145\/3196321.3196328-19","unstructured":"Lingxiao Jiang, Ghassan Misherghi, Zhendong Su, and St&#233;phane Glondu. 2007. DECKARD: Scalable and accurate tree-based detection of code clones.Proceedings of the 29th International Conference on on Software Engineering - ICSE '07(2007), 96--105."},{"key":"key-10.1145\/3196321.3196328-20","unstructured":"Elmar Juergens, Florian Deissenboeck, and Benjamin Hummel. 2009. CloneDetective - A workbench for clone detection research.Proceedings of the 31th International Conference on Software Engineering - ICSE '09(2009), 603--606."},{"key":"key-10.1145\/3196321.3196328-21","unstructured":"Toshihiro Kamiya, Shinji Kusumoto, and Katsuro Inoue. 2002. CCFinder: A multilinguistic token-based code clone detection system for large scale source code.IEEE Transactions on Software Engineering28, 7 (2002), 654--670. https: \/\/","DOI":"10.1109\/TSE.2002.1019480","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-22","unstructured":"kevin8t8. 2018. The Mutt E-Mail Client. (2018). http:\/\/www.mutt.org\/"},{"key":"key-10.1145\/3196321.3196328-23","unstructured":"Miryung Kim, Vibha Sazawal, and David Notkin. 2005. An empirical study of code clone genealogies.ACM SIGSOFT Software Engineering Notes30, 5 (2005), 187."},{"key":"key-10.1145\/3196321.3196328-24","unstructured":"Heng Li, Weiyi Shang, Ying Zou, and Ahmed E. Hassan. 2017. Towards just-in-time suggestions for log changes.Empirical Software Engineering22, 4 (2017), 1831--1865.","DOI":"10.1007\/s10664-016-9467-z","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-25","unstructured":"Zhenmin Li, Shan Lu, Suvda Myagmar, and Yuanyuan Zhou. 2004. CP-Miner : A Tool for Finding Copy-paste and Related Bugs in Operating System Code.Proceedings of the 6th conference on Symposium on Opearting Systems Design &#38; Implementation - OSDI '04(2004), 20."},{"key":"key-10.1145\/3196321.3196328-26","unstructured":"Slashdot Media. 2018. SLOCCount download | SourceForge.net. (2018). https:\/\/sourceforge.net\/projects\/sloccount\/"},{"key":"key-10.1145\/3196321.3196328-27","unstructured":"Na Meng, Miryung Kim, and Kathryn S. McKinley. 2011. Systematic editing.Proceedings of the 32nd ACM SIGPLAN conference on Programming language design and implementation - PLDI '11(2011), 329."},{"key":"key-10.1145\/3196321.3196328-28","unstructured":"Na Meng, Miryung Kim, and Kathryn S. McKinley. 2013. LASE : Locating and Applying Systematic Edits by Learning from Examples.Proceedings of the 35th International Conference on Software Engineering - ICSE '13(2013), 502--511."},{"key":"key-10.1145\/3196321.3196328-29","unstructured":"Antonio Pecchia, Marcello Cinque, Gabriella Carrozza, and Domenico Cotroneo. 2015. Industry Practices and Event Logging: Assessment of a Critical Software Development Process.Proceedings of the 37th IEEE International Conference on Software Engineering - ICSE '15(2015), 169--178."},{"key":"key-10.1145\/3196321.3196328-30","unstructured":"Oleksandr Polozov and Sumit Gulwani. 2015. FlashMeta: a framework for inductive program synthesis.ACM SIGPLAN Notices50, 10 (2015), 107--126.","DOI":"10.1145\/2858965.2814310","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-31","unstructured":"Reudismam Rolim, Gustavo Soares, Loris D'Antoni, Oleksandr Polozov, Sumit Gulwani, Rohit Gheyi, Ryo Suzuki, and Bjorn Hartmann. 2017. Learning syntactic program transformations from examples.Proceedings of the 39th International Conference on Software Engineering - ICSE '17(2017), 404--415."},{"key":"key-10.1145\/3196321.3196328-32","unstructured":"Warren S. Sarle, Anil K. Jain, and Richard C. Dubes. 1990. Algorithms for Clustering Data.Technometrics32, 2 (1990), 227. arXiv:tesxx","DOI":"10.2307\/1268876","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-33","unstructured":"Benjamin H Sigelman, Luiz Andr, Mike Burrows, Pat Stephenson, Manoj Plakal, Donald Beaver, Saul Jaspan, and Chandan Shanbhag. 2010.Dapper, a Large-Scale Distributed Systems Tracing Infrastructure.Technical Report. California, USA. https:\/\/doi.org\/dapper-2010-1"},{"key":"key-10.1145\/3196321.3196328-34","unstructured":"Wietse Venema. 2013. The Postfix Home Page. (2013). http:\/\/www.postfix.org\/"},{"key":"key-10.1145\/3196321.3196328-35","unstructured":"Ding Yuan, Soyeon Park, Peng Huang, Yang Liu, and Mm Lee. 2012. Be conservative: enhancing failure diagnosis with proactive logging.Proceedings of the 10th USENIX conference on Operating Systems Design and Implementation - OSDI '1241, 6 (2012), 293--306."},{"key":"key-10.1145\/3196321.3196328-36","unstructured":"Ding Yuan, Soyeon Park, and Yuanyuan Zhou. 2012. Characterizing logging practices in open-source software. InProceedings of the 34th International Conference on Software Engineering - ICSE '12.102--112.","DOI":"10.1109\/ICSE.2012.6227202","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-37","unstructured":"Ding Yuan, Jing Zheng, Soyeon Park, Yuanyuan Zhou, and Stefan Savage. 2012. Improving Software Diagnosability via Log Enhancement.ACM Transactions on Computer Systems30, 1 (2012), 1--28.","DOI":"10.1145\/2110356.2110360","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-38","unstructured":"Xu Zhao, Kirk Rodrigues, and Michael Stumm. 2017. Log20 : Fully Automated Optimal Placement of Log Printing Statements under Specified Overhead Threshold.Proceedings of the 26th Symposium on Operating Systems Principles - SOSP '17(2017), 565--581.","DOI":"10.1145\/3132747.3132778","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3196321.3196328-39","unstructured":"Jieming Zhu, Pinjia He, Qiang Fu, Hongyu Zhang, Michael R. Lyu, and Dongmei Zhang. 2015. Learning to log: Helping developers make informed logging decisions.Proceedings of the 37th International Conference on Software Engineering - ICSE '15(2015), 415--425."}],"event":{"name":"the 26th Conference","location":"Gothenburg, Sweden","sponsor":["SIGSOFT, ACM Special Interest Group on Software Engineering","IEEE-CS, Computer Society"],"acronym":"ICPC '18","number":"26","start":{"date-parts":[[2018,5,28]]},"end":{"date-parts":[[2018,5,29]]}},"container-title":["Proceedings of the 26th Conference on Program Comprehension - ICPC '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3196328&ftid=1988677&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,10,21]],"date-time":"2019-10-21T01:00:36Z","timestamp":1571619636000},"score":1.0,"subtitle":["learning log revision behaviors proactively from software evolution history"],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450357142"],"references-count":39,"URL":"http:\/\/dx.doi.org\/10.1145\/3196321.3196328","relation":{"cites":[]}}}