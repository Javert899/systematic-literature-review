{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,9,5]],"date-time":"2019-09-05T18:10:18Z","timestamp":1567707018427},"publisher-location":"New York, New York, USA","reference-count":37,"publisher":"ACM Press","isbn-type":[{"value":"9781450339957","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2016,3,14]],"date-time":"2016-03-14T00:00:00Z","timestamp":1457913600000},"delay-in-days":73,"content-version":"vor"}],"funder":[{"DOI":"10.13039\/501100006562","name":"Universidad Nacional de San Juan","doi-asserted-by":"publisher","award":[]},{"name":"US National Science Foundation","award":["CCF-1017334."]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2016]]},"DOI":"10.1145\/2889443.2889447","type":"proceedings-article","created":{"date-parts":[[2016,3,18]],"date-time":"2016-03-18T13:50:50Z","timestamp":1458309050000},"source":"Crossref","is-referenced-by-count":4,"title":["Reasoning tradeoffs in languages with enhanced modularity features"],"prefix":"10.1145","author":[{"given":"Jos\u00e9","family":"S\u00e1nchez","sequence":"first","affiliation":[{"name":"Universidad Nacional, Costa Rica"}]},{"given":"Gary T.","family":"Leavens","sequence":"additional","affiliation":[{"name":"University of Central Florida, USA"}]}],"member":"320","reference":[{"key":"key-10.1145\/2889443.2889447-1","unstructured":"Jonathan Aldrich. Open modules: Reconciling extensibility and information hiding. Available from http:\/\/www-2. cs.cmu.edu\/&#732;aldrich\/aosd\/, 2003."},{"key":"key-10.1145\/2889443.2889447-2","unstructured":"Pierre America. A behavioural approach to subtyping in object-oriented programming languages. Technical Report 443, Philips Research Laboratories, Nederlandse Philips Bedrijven B. V., January 1989. Superseded by a later version in April 1989."},{"key":"key-10.1145\/2889443.2889447-3","unstructured":"R. J. R. Back. A calculus of refinements for program derivations. Acta Informatica, 25(6):593&#8211;624, August 1988.","DOI":"10.1007\/BF00291051","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-4","unstructured":"Ralph-Johan Back and Joakim von Wright. Refinement Calculus: A Systematic Introduction. Graduate Texts in Computer Science. Springer-Verlag, Berlin, 1998.","DOI":"10.1007\/978-1-4612-1674-2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-5","unstructured":"Mehdi Bagherzadeh, Gary T. Leavens, and Robert Dyer. Applying translucid contracts for modular reasoning about aspect and object oriented events. In Proceedings of the 10th international workshop on Foundations of aspect-oriented languages, FOAL &#8217;11, pages 31&#8211;35, New York, NY, USA, 2011. ACM.","DOI":"10.1145\/1960510.1960517","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-6","unstructured":"Mehdi Bagherzadeh, Hridesh Rajan, Gary T. Leavens, and Sean Mooney. Translucid contracts: Expressive specification and modular verification for aspect-oriented interfaces. In Proceedings of the tenth international conference on Aspectoriented software development, AOSD &#8217;11, pages 141&#8211;152, New York, NY, USA, 2011. ACM.","DOI":"10.1145\/1960275.1960293","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-7","unstructured":"Rolando Blanco and Paulo Alencar. Categorization of implicit invocation systems. Technical Report CS-2007-31, University of Waterloo, Cheriton School of Computer Science, 200 University Avenue West Waterloo, ON, Canada N2L 3G1, 2007."},{"key":"key-10.1145\/2889443.2889447-8","unstructured":"Eric Bodden, &#201;ric Tanter, and Milton Inostroza. Joint point interfaces for safe and flexible decoupling of aspects. ACM Transactions on Software Engineering and Methodology (TOSEM), Vol. 23, Issue 1, February 2014.","DOI":"10.1145\/2559933","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-9","unstructured":"Patrick Cousot. Compositional separate modular static analysis of programs by abstract interpretation. In Proc. SSGRR 2001 &#8211; Advances in Infrastructure for Electronic Business, Science, and Education on the Internet, 6 &#8211; 10, 2001."},{"key":"key-10.1145\/2889443.2889447-10","unstructured":"Johan Dovland, Einar Broch Johnsen, Olaf Owe, and Martin Steffen. Lazy behavioral subtyping. In FM 2008: Formal Methods, volume 5014 of Lecture Notes in Computer Science, pages 52&#8211;67, Berlin, 2008. Springer-Verlag.","DOI":"10.1007\/978-3-540-68237-0_6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-11","unstructured":"ECMA. C# language specification. ECMA Standard 334, February 2006."},{"key":"key-10.1145\/2889443.2889447-12","unstructured":"Tzilla Elrad, Robert E. Filman, and Atef Bader. Aspectoriented programming: Introduction. Communications of the ACM, 44(10):29&#8211;32, October 2001.","DOI":"10.1145\/383845.383853","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-13","unstructured":"Robert E. Filman and Daniel P. Friedman. Aspect-oriented programming is quantification and obliviousness. In OOPSLA 2000 Workshop on Advanced Separation of Concerns, Minneapolis, MN, October 2000."},{"key":"key-10.1145\/2889443.2889447-14","unstructured":"David Garlan and David Notkin. Formalizing design spaces: Implicit invocation mechanisms. Lecture Notes in Computer Science, 551:31&#8211;44, 1991.","DOI":"10.1007\/3-540-54834-3_5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-15","unstructured":"Erik Hilsdale and Jim Hugunin. Advice weaving in AspectJ. In AOSD 04, pages 26&#8211;35, 2004.","DOI":"10.1145\/976270.976276","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-16","unstructured":"C. A. R. Hoare. An axiomatic basis for computer programming. Communications of the ACM, 12(10):576&#8211;580,583, October 1969.","DOI":"10.1145\/363235.363259","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-17","unstructured":"K. Huizing and R. Kuiper. Verification of object-oriented programs using class invariants. In E. Maibaum, editor, Fundamental Approaches to Software Engineering, volume 1783 of Lecture Notes in Computer Science, pages 208&#8211;221. Springer-Verlag, 2000.","DOI":"10.1007\/3-540-46428-X_15","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-18","unstructured":"Gregor Kiczales, John Lamping, Anurag Menhdhekar, Chris Maeda, Cristina Lopes, Jean-Marc Loingtier, and John Irwin. Aspect-oriented programming. In Mehmet Aks&#184;it and Satoshi Matsuoka, editors, ECOOP &#8217;97&#8212;Object-Oriented Programming 11th European Conference, Jyv&#228;skyl&#228;, Finland, Proceedings, volume 1241 of Lecture Notes in Computer Science, pages 220&#8211;242. Springer-Verlag, New York, NY, June 1997.","DOI":"10.1007\/BFb0053381","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-19","unstructured":"Gregor Kiczales and Mira Mezini. Aspect-oriented programming and modular reasoning. In Proc. of the 27th International Conference on Software Engineering, pages 49&#8211;58. ACM, 2005.","DOI":"10.1109\/ICSE.2005.1553547","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-20","unstructured":"Gary T. Leavens, Albert L. Baker, and Clyde Ruby. Preliminary design of JML: A behavioral interface specification language for Java. ACM SIGSOFT Software Engineering Notes, 31(3):1&#8211;38, March 2006.","DOI":"10.1145\/1127878.1127884","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-21","unstructured":"Gary T. Leavens and David A. Naumann. Behavioral subtyping, specification inheritance, and modular reasoning. TOPLAS, 37(4):13:1&#8211;13:88, August 2015.","DOI":"10.1145\/2766446","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-22","unstructured":"Gary T. Leavens and William E. Weihl. Specification and verification of object-oriented programs using supertype abstraction. Acta Informatica, 32(8):705&#8211;778, November 1995.","DOI":"10.1007\/BF01178658","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-23","unstructured":"Barbara H. Liskov and Jeannette M. Wing. A behavioral notion of subtyping. ACM Transactions on Programming Languages and Systems, 16(6):1811&#8211;1841, November 1994.","DOI":"10.1145\/197320.197383","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-24","unstructured":"Carroll Morgan and Ken Robinson. Specification statements and refinement. In Carroll Morgan and Trevor Vickers, editors, On the Refinement Calculus, Formal Approaches to Computing and Information Technology (FACIT), pages 23&#8211; 46. Springer London, 1992.","DOI":"10.1007\/978-1-4471-3273-8_2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-25","unstructured":"Joseph M. Morris. A theoretical basis for stepwise refinement and the programming calculus. Science of Computer Programming, 9(3):287&#8211;306, December 1987.","DOI":"10.1016\/0167-6423(87)90011-6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-26","unstructured":"Peter M&#252;ller and Joseph N. Ruskiewicz. Rigorous methods for software construction and analysis. chapter A Modular Verification Methodology for C# Delegates, pages 187&#8211;203. Springer-Verlag, Berlin, Heidelberg, 2009.","DOI":"10.1007\/978-3-642-11447-2_12","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-27","unstructured":"David Notkin, David Garlan, William G. Griswold, and Kevin J. Sullivan. Adding implicit invocation to languages: Three approaches. In Proceedings of the First JSSST International Symposium on Object Technologies for Advanced Software, pages 489&#8211;510, London, UK, 1993. Springer-Verlag.","DOI":"10.1007\/3-540-57342-9_91","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-28","unstructured":"Ernst-R&#252;diger Olderog. On the notion of expressiveness and the rule of adaptation. Theoretical Computer Science, 24:337&#8211; 347, 1983.","DOI":"10.1016\/0304-3975(83)90009-9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-29","unstructured":"Thomas Pawlitzki and Friedrich Steimann. Implicit invocation of traits. In Proceedings of the 2010 ACM Symposium on Applied Computing, SAC &#8217;10, pages 2085&#8211;2089, New York, NY, USA, 2010. ACM.","DOI":"10.1145\/1774088.1774528","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-30","unstructured":"Cees Pierik. Validation Techniques for Object-Oriented Proof Outlines. PhD thesis, Universiteit Utrecht, 2006."},{"key":"key-10.1145\/2889443.2889447-31","unstructured":"Hridesh Rajan and Gary T. Leavens. Ptolemy: A language with quantified, typed events. In Jan Vitek, editor, ECOOP 2008 &#8211; Object-Oriented Programming: 22nd European Conference, Paphos, Cyprus, volume 5142 of Lecture Notes in Computer Science, pages 155&#8211;179, Berlin, July 2008. Springer-Verlag.","DOI":"10.1007\/978-3-540-70592-5_8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-32","unstructured":"Jos&#233; S&#225;nchez and Gary T. Leavens. Separating obligations of subjects and handlers for more flexible event type verification. In Walter Binder, Eric Bodden, and Welf L&#246;we, editors, Software Composition, volume 8088 of Lecture Notes in Computer Science, pages 65&#8211;80. Springer-Verlag, Berlin, 2013.","DOI":"10.1007\/978-3-642-39614-4_5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-33","unstructured":"Jos&#233; S&#225;nchez and Gary T. Leavens. Static verification of PtolemyRely programs using OpenJML. In Proceedings of the 13th Workshop on Foundations of Aspect-oriented Languages, FOAL &#8217;14, pages 13&#8211;18, New York, NY, USA, 2014. ACM.","DOI":"10.1145\/2588548.2588550","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-34","unstructured":"Jose A. Sanchez. Reasoning Tradeoffs in Implicit Invocation and Aspect Oriented Languages. PhD thesis, Univ. of Central Florida, Dept. of Electrical Engineering and Computer Science, 2015. Technical Report CS-TR-15-02."},{"key":"key-10.1145\/2889443.2889447-35","unstructured":"Friedrich Steimann, Thomas Pawlitzki, Sven Apel, and Christian K&#228;stner. Types and modularity for implicit invocation with implicit announcement. ACM Trans. Softw. Eng. Methodol., pages 1:1&#8211;1:43, 2010.","DOI":"10.1145\/1767751.1767752","doi-asserted-by":"crossref"},{"key":"key-10.1145\/2889443.2889447-36","unstructured":"Sun. JavaBeans. Sun, August 1997."},{"key":"key-10.1145\/2889443.2889447-37","unstructured":"Jia Xu, Hridesh Rajan, and Kevin Sullivan. Aspect reasoning by reduction to implicit invocation. In Curtis Clifton, Ralf L&#228;mmel, and Gary T. Leavens, editors, FOAL 2004 Proceedings: Foundations of Aspect-Oriented Languages Workshop at AOSD 2004, Lancaster, UK, number 04-04 in TR, pages 31&#8211; 36, Ames, IA, 50011, March 2005. Dept. of Computer Science, Iowa State University."}],"event":{"name":"the 15th International Conference","location":"M&#225;laga, Spain","sponsor":["SIGSOFT, ACM Special Interest Group on Software Engineering","SIGPLAN, ACM Special Interest Group on Programming Languages"],"acronym":"MODULARITY 2016","number":"2016","start":{"date-parts":[[2016,3,14]]},"end":{"date-parts":[[2016,3,17]]}},"container-title":["Proceedings of the 15th International Conference on Modularity - MODULARITY 2016"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=2889447&amp;ftid=1700156&amp;dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,5]],"date-time":"2019-09-05T17:40:31Z","timestamp":1567705231000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2016]]},"ISBN":["9781450339957"],"references-count":37,"URL":"http:\/\/dx.doi.org\/10.1145\/2889443.2889447","relation":{"cites":[]}}}