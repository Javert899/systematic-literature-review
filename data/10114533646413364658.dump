{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,12,5]],"date-time":"2019-12-05T14:40:57Z","timestamp":1575556857054},"publisher-location":"New York, New York, USA","reference-count":39,"publisher":"ACM Press","isbn-type":[{"value":"9781450372824","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2019,10,28]],"date-time":"2019-10-28T00:00:00Z","timestamp":1572220800000},"delay-in-days":300,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2019]]},"DOI":"10.1145\/3364641.3364658","type":"proceedings-article","created":{"date-parts":[[2019,12,5]],"date-time":"2019-12-05T14:07:37Z","timestamp":1575554857000},"source":"Crossref","is-referenced-by-count":0,"title":["Using auxiliary artifacts during code inspection activity"],"prefix":"10.1145","author":[{"given":"Anderson","family":"Belgamo","sequence":"first","affiliation":[{"name":"Department of Computing - Federal Institute of S\u00e3o, Paulo Piracicaba-SP-Brazil"}]},{"given":"Auri Marcelo Rizzo","family":"Vincenzi","sequence":"additional","affiliation":[{"name":"Computing Department - Federal University of S\u00e3o, Carlos S\u00e3o Carlos-SP-Brazil"}]},{"given":"Fabiano Cutigi","family":"Ferrari","sequence":"additional","affiliation":[{"name":"Department of Computing - Federal University of S\u00e3o, Carlos S\u00e3o Carlos-SP-Brazil"}]},{"given":"Sandra","family":"Fabbri","sequence":"additional","affiliation":[{"name":"Computing Department - Federal University of S\u00e3o, Carlos S\u00e3o Carlos-SP-Brazil"}]}],"member":"320","reference":[{"key":"key-10.1145\/3364641.3364658-1","unstructured":"de Almeida, Camargo, B. Basseto, and S. Paz. 2003. Best practices in code inspection for safety-critical software. Software, IEEE 20 (06 2003), 56- 63."},{"key":"key-10.1145\/3364641.3364658-2","unstructured":"T. Baum, K. Schneider, and A. Bacchelli. 2017. On the Optimal Order of Reading Source Code Changes for Review. In 2017 IEEE International Conference on Software Maintenance and Evolution (ICSME). 329--340.","DOI":"10.1109\/ICSME.2017.28","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-3","unstructured":"F. Belli and R. Crisan. 1996. Towards automation of checklist-based code-reviews. In Proceedings of ISSRE '96: 7th International Symposium on Software Reliability Engineering. 24--33"},{"key":"key-10.1145\/3364641.3364658-4","unstructured":"F. Belli and R. Crisan. 1997. Empirical performance analysis of computer-supported code-reviews. In Proceedings The Eighth International Symposium on Software Reliability Engineering. 245--255."},{"key":"key-10.1145\/3364641.3364658-5","unstructured":"M. Bernhart, S. Reiterer, K. Matt, A. Mauczka, and T. Grechenig. 2011. A Task-Based Code Review Process and Tool to Comply with the DO-278\/ED-109 Standard for Air Traffic Managment Software Development: An Industrial Case Study. In 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering. 182--187.","DOI":"10.1109\/HASE.2011.54","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-6","unstructured":"Mario Bernhart, Stefan Strobl, Andreas Mauczka, and Thomas Grechenig. 2012. Applying Continuous Code Reviews in Airport Operations Software. In Proceedings of the 2012 12th International Conference on Quality Software (QSIC '12). IEEE Computer Society, Washington, DC, USA, 214--219."},{"key":"key-10.1145\/3364641.3364658-7","unstructured":"Steve Counsell, Stephen Swift, and Allan Tucker. 2005. Object-oriented Cohesion As a Surrogate of Software Comprehension: An Empirical Study. In Proceedings of the Fifth IEEE International Workshop on Source Code Analysis and Manipulation (SCAM '05). IEEE Computer Society, Washington, DC, USA, 161--172."},{"key":"key-10.1145\/3364641.3364658-8","unstructured":"Kostadin Damevski, David Shepherd, and Lori Pollock. 2016. A Field Study of How Developers Locate Features in Source Code. Empirical Softw. Engg. 21, 2 (April 2016), 724--747."},{"key":"key-10.1145\/3364641.3364658-9","unstructured":"Alastair Dunsmore. 2002. Investigating Effective Inspection of Object-oriented Code. (10 2002)."},{"key":"key-10.1145\/3364641.3364658-10","unstructured":"A. Dunsmore, M. Roper, and M. Wood. 2000. Object-oriented inspection in the face of delocalisation. In Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium. 467--476.","DOI":"10.1145\/337180.337343","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-11","unstructured":"Alastair Dunsmore, Marc Roper, and Murray Wood. 2003. Practical Code Inspection Techniques for Object-Oriented Systems: An Experimental Comparison. IEEE Softw. 20, 4 (July 2003), 21--29."},{"key":"key-10.1145\/3364641.3364658-12","unstructured":"M. E. Fagan. 1976. Design and Code Inspections to Reduce Errors in Program Development. IBM Syst. J. 15, 3 (Sept. 1976), 182--211."},{"key":"key-10.1145\/3364641.3364658-13","unstructured":"M. S. Fisher and B. Cukic. 2001. Automating Techniques for Inspecting High Assurance Systems. In The 6th IEEE International Symposium on High-Assurance Systems Engineering: Special Topic: Impact of Networking (HASE '01). IEEE Computer Society, Washington, DC, USA, 0117--."},{"key":"key-10.1145\/3364641.3364658-14","unstructured":"L. Hatton. 2008. Testing the Value of Checklists in Code Inspections. IEEE Software 25, 4 (July 2008), 82--88."},{"key":"key-10.1145\/3364641.3364658-15","unstructured":"K. Havelund and G. J. Holzmann. 2011. Software certification - coding, code, and coders. In 2011 Proceedings of the Ninth ACM International Conference on Embedded Software (EMSOFT). 205--210."},{"key":"key-10.1145\/3364641.3364658-16","unstructured":"Martin H&#246;st and Conny Johansson. 2000. Evaluation of Code Review Methods Through Interviews and Experimentation. J. Syst. Softw. 52, 2 (June 2000), 113--120."},{"key":"key-10.1145\/3364641.3364658-17","unstructured":"Brian Johnson and Ben Shneiderman. 1991. Treemaps: a space-filling approach to the visualization of hierarchical information structures. In PROC. 2ND INTERNATIONAL VISUALIZATION CONFERENCE 1991. IEEE. 284--291."},{"key":"key-10.1145\/3364641.3364658-18","unstructured":"Diane Kelly and Terry Shepard. 2002. Qualitative observations from software code inspection experiments. 5."},{"key":"key-10.1145\/3364641.3364658-19","unstructured":"Andrew J. Ko, Brad A. Myers, Michael J. Coblenz, and Htet Htet Aung. 2006. An Exploratory Study of How Developers Seek, Relate, and Collect Relevant Information During Software Maintenance Tasks. IEEE Trans. Softw. Eng. 32, 12 (Dec. 2006), 971--987."},{"key":"key-10.1145\/3364641.3364658-20","unstructured":"S. C. Kothari, Luke Bishop, Jeremias Sauceda, and Gary Daugherty. 2004. A Pattern-Based Framework for Software Anomaly Detection. Software Quality Journal 12, 2 (June 2004), 99--120."},{"key":"key-10.1145\/3364641.3364658-21","unstructured":"Oliver Laitenberger, Khaled El Emam, and Thomas G. Harbich. 2001. An Internally Replicated Quasi-Experimental Comparison of Checklist and Perspective-Based Reading of Code Documents. IEEE Trans. Softw. Eng. 27, 5 (May 2001), 387--421."},{"key":"key-10.1145\/3364641.3364658-22","unstructured":"Xiaolin Li. 1995. A Comparison-based Approach for Software Inspection. In Proceedings of the 1995 Conference of the Centre for Advanced Studies on Collaborative Research (CASCON '95). IBM Press, 41--."},{"key":"key-10.1145\/3364641.3364658-23","unstructured":"Andrea Lucia, Fausto Fasano, Genoveffa Tortora, and Giuseppe Scanniello. 2007. Assessing the Effectiveness of a Distributed Method for Code Inspection: A Controlled Experiment. Proceedings - International Conference on Global Software Engineering, ICGSE 2007, 252 -- 261."},{"key":"key-10.1145\/3364641.3364658-24","unstructured":"L. MacLeod, M. Greiler, M. Storey, C. Bird, and J. Czerwonka. 2018. Code Reviewing in the Trenches: Challenges and Best Practices. IEEE Software 35, 4 (July 2018), 34--42."},{"key":"key-10.1145\/3364641.3364658-25","unstructured":"David Mcmeekin, Brian von Konsky, Elizabeth Chang, and David Cooper. 2008. Checklist Inspections and Modifications: Applying Bloom's Taxonomy to Categorise Developer Comprehension. IEEE International Conference on Program Comprehension, 224--229."},{"key":"key-10.1145\/3364641.3364658-26","unstructured":"T.R. Gopalakrishnan Nair. 2012. Significance of depth of inspection and inspection performance metrics for consistent defect management in software industry. IET Software 6 (December 2012), 524--535(11). Issue 6."},{"key":"key-10.1145\/3364641.3364658-27","unstructured":"Kazuki Nishizono, Shuji Morisaki, Rodrigo Vivanco, and Kenichi Matsumoto. 2011. Source code comprehension strategies and metrics to predict comprehension effort in software maintenance and evolution tasks - An empirical study with industry practitioners. IEEE International Conference on Software Maintenance, ICSM, 473--481."},{"key":"key-10.1145\/3364641.3364658-28","unstructured":"Masami Noro and Atsushi Sawada. 2015. Software Architecture and Specification Model for Customizable Code Inspection Tools. 230--237.","DOI":"10.1109\/APSEC.2015.44","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-29","unstructured":"Jun-Suk Oh and Ho-Jin Choi. 2005. A reflective practice of automated and manual code reviews for a studio project. 37 -- 42.","DOI":"10.1109\/ICIS.2005.17","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-30","unstructured":"Daniel Porto, Manoel Mendon&#231;a, and Sandra Fabbri. 2009. The Use of Reading Technique and Visualization for Program Understanding. Proceedings of the 21st International Conference on Software Engineering and Knowledge Engineering, SEKE 2009, 386--391."},{"key":"key-10.1145\/3364641.3364658-31","unstructured":"Martin P. Robillard, Wesley Coelho, and Gail C. Murphy. 2004. How Effective Developers Investigate Source Code: An Exploratory Study. IEEE Trans. Softw. Eng. 30, 12 (Dec. 2004), 889--903."},{"key":"key-10.1145\/3364641.3364658-32","unstructured":"Guoping Rong, He Zhang, Qi Shan, and Gaoxuan Liu. 2015. The Impacts of Supporting Materials on Code Reading: A Controlled Experiment. 88--95.","DOI":"10.1109\/APSEC.2015.39","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3364641.3364658-33","unstructured":"Per Runeson and Anneliese Andrews. 2003. Detection or Isolation of Defects? An Experimental Comparison of Unit Testing and Code Inspection. In Proceedings of the 14th International Symposium on Software Reliability Engineering (ISSRE '03). IEEE Computer Society, Washington, DC, USA, 3--."},{"key":"key-10.1145\/3364641.3364658-34","unstructured":"Giuseppe Scanniello, Fausto Fasano, Andrea Lucia, and Genoveffa Tortora. 2013. Does software error\/defect identification matter in the Italian industry? Software, IET 7 (04 2013), 76--84."},{"key":"key-10.1145\/3364641.3364658-35","unstructured":"Forrest Shull, Ioana Rus, and Victor Basili. 2000. How Perspective-Based Reading Can Improve Requirements Inspections. Computer 33, 7 (July 2000), 73--79."},{"key":"key-10.1145\/3364641.3364658-36","unstructured":"Thomas Thelin, Per Runeson, and Claes Wohlin. 2003. An experimental comparison of usage-based and checklist-based reading. Software Engineering, IEEE Transactions on 29 (09 2003), 687-- 704."},{"key":"key-10.1145\/3364641.3364658-37","unstructured":"Guilherme H. Travassos, Forrest Shull, Jeffrey Carver, and Victor Basili. 2002. Reading Techniques for OO Design Inspections."},{"key":"key-10.1145\/3364641.3364658-38","unstructured":"Jerod W. Wilkerson, Jay F. Nunamaker, Jr., and Rick Mercer. 2012. Comparing the Defect Reduction Benefits of Code Inspection and Test-Driven Development. IEEE Trans. Softw. Eng. 38, 3 (May 2012), 547--560."},{"key":"key-10.1145\/3364641.3364658-39","unstructured":"Claes Wohlin, Per Runeson, Martin H&#246;st, Magnus C. Ohlsson, Bj&#246;orn Regnell, and Anders Wessl&#233;n. 2000. Experimentation in Software Engineering: An Introduction. Kluwer Academic Publishers, Norwell, MA, USA."}],"event":{"name":"the XVIII Brazilian Symposium","location":"Fortaleza, Brazil","sponsor":["SBC, Brazilian Computer Society"],"acronym":"SBQS'19","number":"18","start":{"date-parts":[[2019,10,28]]},"end":{"date-parts":[[2019,11,1]]}},"container-title":["Proceedings of the XVIII Brazilian Symposium on Software Quality  - SBQS'19"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3364658&ftid=2099539&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,12,5]],"date-time":"2019-12-05T14:09:52Z","timestamp":1575554992000},"score":1.0,"subtitle":["findings from an exploratory study"],"short-title":[],"issued":{"date-parts":[[2019]]},"ISBN":["9781450372824"],"references-count":39,"URL":"http:\/\/dx.doi.org\/10.1145\/3364641.3364658","relation":{"cites":[]}}}