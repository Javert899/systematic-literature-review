{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,9,20]],"date-time":"2019-09-20T19:10:17Z","timestamp":1569006617702},"reference-count":154,"publisher":"Association for Computing Machinery (ACM)","issue":"2","license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2017,4,6]],"date-time":"2017-04-06T00:00:00Z","timestamp":1491436800000},"delay-in-days":0,"content-version":"vor"}],"funder":[{"name":"FONDECYT (Chile)","award":["1151195"]},{"name":"Institute for the Promotion of Innovation through Science and Technology in Flanders (Belgium)","award":[]},{"name":"&ldquo;Change-centric Quality Assurance&rdquo; (CHAQ)","award":["120028"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":["CSUR","ACM Comput. Surv."],"published-print":{"date-parts":[[2017,4,6]]},"DOI":"10.1145\/3038926","type":"journal-article","created":{"date-parts":[[2017,4,6]],"date-time":"2017-04-06T12:50:07Z","timestamp":1491483007000},"page":"1-38","source":"Crossref","is-referenced-by-count":2,"title":["Changes as First-Class Citizens"],"prefix":"10.1145","volume":"50","author":[{"given":"Quinten David","family":"Soetens","sequence":"first","affiliation":[{"name":"Dept. of Mathematics and Computer Science, University of Antwerp, Belgium"}]},{"given":"Romain","family":"Robbes","sequence":"additional","affiliation":[{"name":"Computer Science Department (DCC), University of Chile, Italy"}]},{"given":"Serge","family":"Demeyer","sequence":"additional","affiliation":[{"name":"Dept. of Mathematics and Computer Science, University of Antwerp, Antwerp, Belgium"}]}],"member":"320","reference":[{"key":"key-10.1145\/3038926-1","unstructured":"Raihan Al-Ekram, Archana Adma, and Olga Baysal. 2005. DIFFX: an algorithm to detect changes in multi-version XML documents. In Proc. of the Conf. of the Centre for Advanced Studies on Collaborative Research (CASCON&#8217;05). IBM Press, 1--11."},{"key":"key-10.1145\/3038926-2","unstructured":"Lars Bendix and Fabio Vitali. 1999. VTML for fine-grained change tracking in editing structured documents. In Proc. of the 9th Int. Symposium on System Configuration Management (SCM-9). Springer-Verlag, London, UK, 139--156."},{"key":"key-10.1145\/3038926-3","unstructured":"Amel Bennaceur, Robert France, Giordano Tamburrelli, Thomas Vogel, Pieter J. Mosterman, Walter Cazzola, Fabio M. Costa, Alfonso Pierantonio, Matthias Tichy, Mehmet Ak&#351;it, P&#228;r Emmanuelson, Huang Gang, Nikolaos Georgantas, and David Redlich. 2014. Mechanisms for Leveraging Models at Runtime in Self-adaptive Software. Springer International Publishing, Cham, 19--46. DOI:http:\/\/dx.doi.org\/10.1007\/978-3-319-08915-7_2","DOI":"10.1007\/978-3-319-08915-7_2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-4","unstructured":"Xavier Blanc, Isabelle Mounier, Alix Mougenot, and Tom Mens. 2008. Detecting model inconsistency through operation-based model construction. In Proceedings of the 30th International Conference on Software Engineering (ICSE&#8217;08). ACM, New York, NY, 511--520. DOI:http:\/\/dx.doi.org\/10.1145\/1368088.1368158","DOI":"10.1145\/1368088.1368158","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-5","unstructured":"David Budgen, Mark Turner, Pearl Brereton, and Barbara Kitchenham. 2008. Using mapping studies in software engineering. In Proc. of the 20th Annual Meeting of the Pschology of Programming Interest Group (PPIG&#8217;08). Lancaster University, 195--204."},{"key":"key-10.1145\/3038926-6","unstructured":"Ophelia C. Chesley, Xiaoxia Ren, and Barbara G. Ryder. 2005. Crisp: A debugging tool for java programs. In Proc. of the 21st IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;05). 401--410.","DOI":"10.1109\/ICSM.2005.37","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-7","unstructured":"Eunjong Choi, Kenji Fujiwara, Norihiro Yoshida, and Shinpei Hayashi. 2015. A survey of refactoring detection techniques based on change history analysis (in Japanese). Comput. Soft. 32, 1 (Feb 2015), 47--59."},{"key":"key-10.1145\/3038926-8","unstructured":"Istv&#225;n D&#225;vid, Istv&#225;n R&#225;th, and D&#225;niel Varr&#243;. 2016. Foundations for streaming model transformations by complex event processing. Softw. Syst. Model. (2016), 1--28. DOI:http:\/\/dx.doi.org\/10.1007\/s10270-016-0533-1","DOI":"10.1007\/s10270-016-0533-1","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-9","unstructured":"Coen De Roover, Christophe Scholliers, Viviane Jonckers, Javier P&#233;rez, Alessandro Murgia, and Serge Demeyer. 2014. The implementation of the CHA-Q meta-model: A comprehensive, change-centric soft. representation. In Proc. of the 8th Int. Workshop on Soft. Quality. ECEASST 65 (2014)."},{"key":"key-10.1145\/3038926-10","unstructured":"Marcus Denker, Marcus Denker, Oscar Nierstrasz, Lukas Renggli, and Pascal&#8221; Zumkehr. 2007. Encapsulating and exploiting change with changeboxes. In Proc. of the 2007 Int. Conf. on Dynamic Languages (ICDL&#8217;07). 25--49.","DOI":"10.1145\/1352678.1352681","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-11","unstructured":"Mart&#237;n Dias, Alberto Bacchelli, Georgios Gousios, Damien Cassou, and St&#233;phane Ducasse. 2015. Untangling fine-grained code changes. In Proc. of the 22nd IEEE Int. Conf. on Soft. Analysis, Evolution and Reengineering (SANER&#8217;15). 341--350.","DOI":"10.1109\/SANER.2015.7081844","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-12","unstructured":"Martin Dias, Damien Cassou, and St&#233;phane Ducasse. 2013. Representing code history with development environment events. In Proc. of the 5th Int. Workshop on Smalltalk Technologies (IWST&#8217;13). http:\/\/arxiv.org\/abs\/1309.4334"},{"key":"key-10.1145\/3038926-13","unstructured":"Danny Dig, Can Comertoglu, Darko Marinov, and Ralph Johnson. 2006. Automated detection of refactorings in evolving components. In Proc. of the 20th European Conf. on Object-Oriented Programming (ECOOP&#8217;06). Springer-Verlag, Berlin, 404--428. http:\/\/dx.doi.org\/10.1007\/11785477_24","DOI":"10.1007\/11785477_24","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-14","unstructured":"Danny Dig, Danny Dig, Can Comertoglu, Darko Marinov, and Ralph Johnson. 2005. Automatic detection of refactorings for libraries and frameworks. In Proc. of the 6th ECOOP Workshop on Object-Oriented Reengineering (WOOR&#8217;05)."},{"key":"key-10.1145\/3038926-15","unstructured":"Danny Dig and Ralph Johnson. 2005. The role of refactorings in API evolution. In Proc. of the 21st IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;05). 389--398.","DOI":"10.1109\/ICSM.2005.90","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-16","unstructured":"Danny Dig, Kashif Manzoor, Ralph Johnson, and Tien N. Nguyen. 2007. Refactoring-aware configuration management for object-oriented programs. In Proc. of the 29th Int. Conf. on Soft. Eng. (ICSE&#8217;07). 427--436.","DOI":"10.1109\/ICSE.2007.71","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-17","unstructured":"Danny Dig, Kashif Manzoor, Ralph Johnson, and Tien N. Nguyen. 2008. Effective soft. merging in the presence of object-oriented refactorings. IEEE Trans. Softw. Eng. 34, 3 (May 2008), 321--335.","DOI":"10.1109\/TSE.2008.29","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-18","unstructured":"Nicolas Dintzner, Arie Van Deursen, and Martin Pinzger. 2013. Extracting feature model changes from the linux kernel using FMDiff. In Proc. of the 8th Int. Workshop on Variability Modelling of Soft.-Intensive Systems (VaMoS&#8217;14). ACM, New York, NY, Article 22, 8 pages. http:\/\/doi.acm.org\/10.1145\/2556624.2556631","DOI":"10.1145\/2556624.2556631","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-19","unstructured":"Hannes Dohrn and Dirk Riehle. 2014. Fine-grained change detection in structured text documents. In Proc. of the 2014 ACM Symposium on Document Eng. (DocEng&#8217;14). ACM, New York, NY, 87--96. http:\/\/doi.acm.org\/10.1145\/2644866.2644880","DOI":"10.1145\/2644866.2644880","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-20","unstructured":"Peter Ebraert. 2008. First-class change objects for feature-oriented programming. In Proc. of the 15th Working Conf. on Reverse Eng. (WCRE&#8217;08). 319--322.","DOI":"10.1109\/WCRE.2008.43","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-21","unstructured":"Peter Ebraert, Theo D&#8217;Hondt, and Tom Mens. 2004. Enabling dynamic soft. evolution through automatic refactoring. In Proc. of the Int. Workshop on Soft. Evolution Transformations (SETra&#8217;04), Ying Zhou and James R. Cordy (Eds.). 3--6."},{"key":"key-10.1145\/3038926-22","unstructured":"Peter Ebraert, Quinten David Soetens, and Dirk Janssens. 2011. Change-based foda diagrams: bridging the gap between feature-oriented design and implementation. In Proc. of the 2011 ACM Symposium on Applied Computing (SAC&#8217;11). ACM, New York, NY, 1345--1352. http:\/\/doi.acm.org\/10.1145\/1982185.1982478","DOI":"10.1145\/1982185.1982478","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-23","unstructured":"Peter Ebraert, Jorge Vallejos, Pascal Costanza, Ellen Van Paesschen, and Theo D&#8217;Hondt. 2007a. Change-oriented soft. eng.. In Proc. of the 2007 Int. Conf. on Dynamic Languages: In Conjunction with the 15th Int. Smalltalk Joint Conf. 2007 (ICDL&#8217;07). ACM, New York, NY, 3--24. http:\/\/doi.acm.org\/10.1145\/1352678.1352680","DOI":"10.1145\/1352678.1352680","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-24","unstructured":"Peter Ebraert, Ellen Van Paesschen, and Theo D&#8217;Hondt. 2007b. Change-Oriented Round-Trip Eng. Technical Report. Vrije Universiteit Brussel. Retrieved from ftp:\/\/prog.vub.ac.be\/tech_report\/2007\/vub-prog-tr-07-04.pdf."},{"key":"key-10.1145\/3038926-25","unstructured":"Johan Fabry, Tom Dinkelaker, Jacques Noy&#233;, and &#201;ric Tanter. 2015. A taxonomy of domain-specific aspect languages. ACM Comput. Surv. 47, 3 (2015), 3:1--3:44. DOI:http:\/\/dx.doi.org\/10.1145\/2685028","DOI":"10.1145\/2685028","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-26","unstructured":"Jean-R&#233;my Falleri, Flor&#233;al Morandat, Xavier Blanc, Matias Martinez, and Martin Montperrus. 2014. Fine-grained and accurate source code differencing. In Proc. of the 29th IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;14). ACM, New York, NY, 313--324. http:\/\/doi.acm.org\/10.1145\/2642937.2642982","DOI":"10.1145\/2642937.2642982","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-27","unstructured":"Beat Fluri and Harald C. Gall. 2006. Classifying change types for qualifying change couplings. In Proc. of the 14th IEEE Int. Conf. on Program Comprehension (ICPC&#8217;06). 35--45.","DOI":"10.1109\/ICPC.2006.16","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-28","unstructured":"Beat Fluri, Harald C. Gall, and Martin Pinzger. 2005. Fine-grained analysis of change couplings. In Proc. of the 5th IEEE Int. Workshop on Source Code Analysis and Manipulation (SCAM&#8217;05). IEEE Computer Society, Washington, DC, 66--74. http:\/\/dx.doi.org\/10.1109\/SCAM.2005.14","DOI":"10.1109\/SCAM.2005.14","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-29","unstructured":"Beat Fluri, Emanuel Giger, and Harald C. Gall. 2008a. Discovering patterns of change types. In Proc. of the 23rd IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;08). 463--466.","DOI":"10.1109\/ASE.2008.74","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-30","unstructured":"Beat Fluri, Michael Wursch, and Harald C. Gall. 2007a. Do code and comments co-evolve? On the relation between source code and comment changes. In Proc. of the 14th Working Conf. on Reverse Eng. (WCRE&#8217;07). 70--79.","DOI":"10.1109\/WCRE.2007.21","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-31","unstructured":"Beat Fluri, Michael Wursch, Martin Pinzger, and Harald C. Gall. 2007b. Change distilling: Tree differencing for fine-grained source code change extraction. IEEE Trans. Softw. Eng. 33, 11 (Nov 2007), 725--743.","DOI":"10.1109\/TSE.2007.70731","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-32","unstructured":"Beat Fluri, Jonas Zuberb&#252;hler, and Harald C. Gall. 2008b. Recommending method invocation context changes. In Proc. of the 2008 Int. Workshop on Recommendation Systems for Soft. Eng. (RSSE&#8217;08). ACM, New York, NY, 1--5. http:\/\/doi.acm.org\/10.1145\/1454247.1454249","DOI":"10.1145\/1454247.1454249","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-33","unstructured":"Harald C. Gall, Beat Fluri, and Martin Pinzger. 2009. Change analysis with evolizer and ChangeDistiller. IEEE Soft. 26, 1 (Jan 2009), 26--33.","DOI":"10.1109\/MS.2009.6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-34","unstructured":"Emanuel Giger, Marco D&#8217;Ambros, Martin Pinzger, and Harald C. Gall. 2012a. Method-level bug prediction. In Proc. of the ACM-IEEE Int. Symposium on Empirical Soft. Eng. and Measurement (ESEM&#8217;12). 171--180.","DOI":"10.1145\/2372251.2372285","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-35","unstructured":"Emanuel Giger, Martin Pinzger, and Harald C. Gall. 2011. Comparing fine-grained source code changes and code churn for bug prediction. In Proc. of the 8th IEEE Working Conf. on Mining Soft. Repositories (MSR&#8217;11). ACM, New York, NY, 83--92. http:\/\/doi.acm.org\/10.1145\/1985441.1985456","DOI":"10.1145\/1985441.1985456","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-36","unstructured":"Emanuel Giger, Martin Pinzger, and Harald C. Gall. 2012b. Can we predict types of code changes? An empirical analysis. In Proc. of the 9th IEEE Working Conf. on Mining Soft. Repositories (MSR&#8217;12). IEEE Press, Piscataway, NJ, 217--226.","DOI":"10.1109\/MSR.2012.6224284","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-37","unstructured":"Carsten G&#246;rg and Peter Wei&#223;gerber. 2005a. Detecting and visualizing refactorings from software archives. In Proc. of the 13th Int. Workshop on Program Comprehension (IWPC&#8217;05). 205--214.","DOI":"10.1109\/WPC.2005.18","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-38","unstructured":"Carsten G&#246;rg and Peter Wei&#223;gerber. 2005b. Error detection by refactoring reconstruction. In Proc. of the 2nd Int. Workshop on Mining Soft. Repositories. SIGSOFT Softw. Eng. Notes 30, 4 (May 2005), 1--5. http:\/\/doi.acm.org\/10.1145\/1082983.1083148","DOI":"10.1145\/1082983.1083148","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-39","unstructured":"Masatomo Hashimoto and Akira Mori. 2008. Diff\/TS: A tool for fine-grained structural change analysis. In Proc. of the 15th Working Conf. on Reverse Eng. (WCRE&#8217;08). 279--288.","DOI":"10.1109\/WCRE.2008.44","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-40","unstructured":"Masatomo Hashimoto and Akira Mori. 2010. A method for analyzing code homology in genealogy of evolving soft. In Fundamental Approaches to Soft. Eng., David S. Rosenblum and Gabriele Taentzer (Eds.). Lecture Notes in Computer Science, Vol. 6013. Springer, Berlin, 91--106. http:\/\/dx.doi.org\/10.1007\/978-3-642-12029-9_7","DOI":"10.1007\/978-3-642-12029-9_7","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-41","unstructured":"Masatomo Hashimoto and Akira Mori. 2012. Enhancing history-based concern mining with fine-grained change analysis. In Proc. of the 16th European Conf. on Soft. Maintenance and Reengineering (CSMR&#8217;12). 75--84.","DOI":"10.1109\/CSMR.2012.18","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-42","unstructured":"Masatomo Hashimoto, Akira Mori, and Tomonori Izumida. 2015. A comprehensive and scalable method for analyzing fine-grained source code change patterns. In Proc. of the 22nd IEEE Int. Conf. on Soft. Analysis, Evolution and Reengineering (SANER&#8217;15). 351--360.","DOI":"10.1109\/SANER.2015.7081845","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-43","unstructured":"Lile Hattori. 2010. Enhancing collaboration of multi-developer projects with synchronous changes. In Proc. of the 32nd Int. Conf. on Soft. Eng. (ICSE&#8217;10), Vol. 2. 377--380.","DOI":"10.1145\/1810295.1810397","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-44","unstructured":"Lile Hattori, Marco D&#8217;Ambros, Michele Lanza, and Mircea Lungu. 2011. Soft. evolution comprehension: Replay to the rescue. In Proc. of the 19th Int. Conf. on Program Comprehension (ICPC&#8217;11). IEEE, 161--170."},{"key":"key-10.1145\/3038926-45","unstructured":"Lile Hattori, Marco D&#8217;Ambros, Michele Lanza, and Mircea Lungu. 2013. Answering soft. evolution questions. Inf. Softw. Technol. 55, 4 (April 2013), 755--775. http:\/\/dx.doi.org\/10.1016\/j.infsof.2012.09.001","DOI":"10.1016\/j.infsof.2012.09.001","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-46","unstructured":"Lile Hattori and Michele Lanza. 2009a. An environment for synchronous software development. In Companion of the 31th Int. Conf. on Soft. Eng. (ICSE Companion&#8217;09). 223--226.","DOI":"10.1109\/ICSE-COMPANION.2009.5070987","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-47","unstructured":"Lile Hattori and Michele Lanza. 2009b. Mining the history of synchronous changes to refine code ownership. In Proc. of the 6th IEEE Int. Working Conf. on Mining Soft. Repositories (MSR&#8217;09). 141--150.","DOI":"10.1109\/MSR.2009.5069492","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-48","unstructured":"Lile Hattori and Michele Lanza. 2010. Syde: A tool for collaborative software development. In Proc. of the 32nd ACM\/IEEE Int. Conf. on Soft. Eng. (ICSE&#8217;10), Vol. 2. 235--238.","DOI":"10.1145\/1810295.1810339","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-49","unstructured":"Lile Hattori, Mircea Lungu, and Michele Lanza. 2010. Replaying past changes in multi-developer projects. In Proc. of the Joint ERCIM Workshop on Soft. Evolution (EVOL) and Int. Workshop on Principles of Soft. Evolution (IWPSE) (IWPSE-EVOL&#8217;10). ACM, New York, NY, 13--22. http:\/\/doi.acm.org\/10.1145\/1862372.1862379","DOI":"10.1145\/1862372.1862379","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-50","unstructured":"Shinpei Hayashi, Daiki Hoshino, Jumpei Matsuda, Motoshi Saeki, Takayuki Omori, and Katsuhisa Maruyama. 2015. Historef: A tool for edit history refactoring. In Proc. of the 22nd IEEE Int. Conf. on Soft. Analysis, Evolution and Reengineering (SANER&#8217;15). 469--473."},{"key":"key-10.1145\/3038926-51","unstructured":"Shinpei Hayashi, Takayuki Omori, Teruyoshi Zenmyo, Katsuhisa Maruyama, and Motoshi Saeki. 2012. Refactoring edit history of source code. In Proc. of the 28th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;12). 617--620.","DOI":"10.1109\/ICSM.2012.6405336","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-52","unstructured":"Shinpei Hayashi and Motoshi Saeki. 2010. Recording finer-grained soft. evolution with IDE: An annotation-based approach. In Proc. of the Joint ERCIM Workshop on Soft. Evolution (EVOL) and Int. Workshop on Principles of Soft. Evolution (IWPSE) (IWPSE-EVOL&#8217;10). ACM, New York, NY, 8--12. http:\/\/doi.acm.org\/10.1145\/1862372.1862378","DOI":"10.1145\/1862372.1862378","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-53","unstructured":"Johannes Henkel and Amer Diwan. 2005. CatchUp&excl; Capturing and replaying refactorings to support API evolution. In Proc. of the 27th Int. Conf. on Soft. Eng. (ICSE&#8217;05). 274--283.","DOI":"10.1145\/1062455.1062512","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-54","unstructured":"Jon Jenkins. 2011. Velocity Culture. (2011). Keynote Address at the Velocity 2011 Conference."},{"key":"key-10.1145\/3038926-55","unstructured":"Sven Johann and Alexander Egyed. 2004. Instant and incremental transformation of models. In Proceedings of the 19th IEEE International Conference on Automated Software Engineering (ASE&#8217;04). IEEE Computer Society, Washington, DC, 362--365. DOI:http:\/\/dx.doi.org\/10.1109\/ASE.2004.43"},{"key":"key-10.1145\/3038926-56","unstructured":"Huzefa H. Kagdi, Michael L. Collard, and Jonathan I. Maletic. 2007. A survey and taxonomy of approaches for mining software repositories in the context of software evolution. J. Softw. Maint. 19, 2 (2007), 77--131. DOI:http:\/\/dx.doi.org\/10.1002\/smr.344","DOI":"10.1002\/smr.344","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-57","unstructured":"David Kawrykow and Martin P. Robillard. 2011. Non-essential changes in version histories. In Proc. of the 33rd Int. Conf. on Soft. Eng. (ICSE&#8217;11). ACM, New York, NY, 351--360. http:\/\/doi.acm.org\/10.1145\/1985793.1985842","DOI":"10.1145\/1985793.1985842","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-58","unstructured":"Asad Masood Khattak, Khalid Latif, Manhyung Han, Sungyoung Lee, Young-Koo Lee, and Hyoung-Il Kim. 2009. Change tracer: Tracking changes in web ontologies. In Proc. of the 21st Int. Conf. on Tools with Artificial Intelligence (ICTAI&#8217;09). 449--456.","DOI":"10.1109\/ICTAI.2009.42","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-59","unstructured":"Foutse Khomh, Bram Adams, Tejinder Dhaliwal, and Ying Zou. 2015. Understanding the impact of rapid releases on software quality. Emp. Softw. Eng. 20, 2 (2015), 336--373. DOI:http:\/\/dx.doi.org\/10.1007\/s10664-014-9308-x","DOI":"10.1007\/s10664-014-9308-x","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-60","unstructured":"Miryung Kim, Matthew Gee, Alex Loh, and Napol Rachatasumrit. 2010. Ref-finder: A refactoring reconstruction tool based on logic query templates. In Proc. of the 18th ACM SIGSOFT Int. Symposium on Foundations of Soft. Eng. (FSE&#8217;10). ACM, New York, NY 371--372. http:\/\/doi.acm.org\/10.1145\/1882291.1882353","DOI":"10.1145\/1882291.1882353","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-61","unstructured":"Miryung Kim and David Notkin. 2006. Program element matching for multi-version program analyses. In Proc. of the 3rd Int. Workshop on Mining Soft. Repositories (MSR&#8217;06). ACM, New York, NY, 58--64. http:\/\/doi.acm.org\/10.1145\/1137983.1137999","DOI":"10.1145\/1137983.1137999","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-62","unstructured":"Miryung Kim and David Notkin. 2009. Discovering and representing systematic code changes. In Proc. of the 31st Int. Conf. on Soft. Eng. (ICSE&#8217;09). IEEE Computer Society, Washington, DC, 309--319. http:\/\/dx.doi.org\/10.1109\/ICSE.2009.5070531","DOI":"10.1109\/ICSE.2009.5070531","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-63","unstructured":"Miryung Kim, David Notkin, and Dan Grossman. 2007. Automatic inference of structural changes for matching across program versions. In Proc. of the 29th Int. Conf. on Soft. Eng. (ICSE&#8217;07). IEEE Computer Society, Washington, DC, 333--343. http:\/\/dx.doi.org\/10.1109\/ICSE.2007.20","DOI":"10.1109\/ICSE.2007.20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-64","unstructured":"Barbara Kitchenham and Stuart Charters. 2007. Guidelines for performing systematic literature reviews in soft. eng. (2007)."},{"key":"key-10.1145\/3038926-65","unstructured":"Eijiro Kitsu, Takayuki Omori, and Katsuhisa Maruyama. 2013. Detecting program changes from edit history of source code. In Proc. of the 20th Asia-Pacific Soft. Eng. Conf. (APSEC&#8217;13), Vol. 1. 299--306.","DOI":"10.1109\/APSEC.2013.48","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-66","unstructured":"Meir M. Lehman and Laszlo A. Belady. 1985. Program evolution: processes of software change. Academic Press Professional, Inc., San Diego, CA."},{"key":"key-10.1145\/3038926-67","unstructured":"Steffen Lehnert, Qurat-ul-ann Farooq, and Matthias Riebisch. 2012. A taxonomy of change types and its application in soft. evolution. In Proc. of the 19th Int. Conf. and Workshops on Eng. of Computer Based Systems (ECBS&#8217;12). 98--107.","DOI":"10.1109\/ECBS.2012.9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-68","unstructured":"You Liang and Lu Yansheng. 2012. The atomic change set of java programming language. In Proc. of the 7th Int. Conf. on Computer Science Education (ICCSE&#8217;12). 1090--1092.","DOI":"10.1109\/ICCSE.2012.6295253","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-69","unstructured":"Zhongpeng Lin. 2013. Understanding and simulating software evolution. In Proc. of the 35th Int. Conf. on Soft. Eng. (ICSE&#8217;13). 1411--1414.","DOI":"10.1109\/ICSE.2013.6606730","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-70","unstructured":"Zhongpeng Lin and Jim Whitehead. 2014. Using fine-grained code change metrics to simulate soft. evolution. In Proc. of the 5th Int. Workshop on Emerging Trends in Soft. Metrics (WETSoM&#8217;14). ACM, New York, NY, 15--18. http:\/\/doi.acm.org\/10.1145\/2593868.2593871"},{"key":"key-10.1145\/3038926-71","unstructured":"Ernst Lippe and Norbert van Oosterom. 1992. Operation-based merging. SIGSOFT Softw. Eng. Notes 17, 5 (Nov. 1992), 78--87. http:\/\/doi.acm.org\/10.1145\/142882.143753","DOI":"10.1145\/142882.143753","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-72","unstructured":"Alex Loh and Miryung Kim. 2010. LSdiff: A program differencing tool to identify systematic structural differences. In Proc. of the 32nd ACM\/IEEE Int. Conf. on Soft. Eng. (ICSE&#8217;10), Vol. 2. 263--266.","DOI":"10.1145\/1810295.1810348","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-73","unstructured":"Cosmin Marsavina, Daniele Romano, and Andy Zaidman. 2014. Studying fine-grained co-evolution patterns of production and test code. In Proc. of the 14th IEEE Int. Working Conf. on Source Code Analysis and Manipulation (SCAM&#8217;14). 195--204.","DOI":"10.1109\/SCAM.2014.28","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-74","unstructured":"Katsuhisa Maruyama, Eijiro Kitsu, Takayuki Omori, and Shinpei Hayashi. 2012. Slicing and replaying code change history. In Proc. of the 27th IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;12). ACM, New York, NY, 246--249. http:\/\/doi.acm.org\/10.1145\/2351676.2351713","DOI":"10.1145\/2351676.2351713","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-75","unstructured":"Tom Mens and Tom Tourw&#233;. 2004. A survey of software refactoring. IEEE Trans. Softw. Eng. 30, 2 (Feb. 2004), 126--139. DOI:http:\/\/dx.doi.org\/10.1109\/TSE.2004.1265817","DOI":"10.1109\/TSE.2004.1265817","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-76","unstructured":"Bertrand Meyer, Christine Choppy, J&#248;rgen Staunstrup, and Jan van Leeuwen. 2009. Viewpoint: research evaluation for computer science. Commun. ACM 52, 4 (Apr. 2009), 31--34. DOI:http:\/\/dx.doi.org\/10.1145\/1498765.1498780","DOI":"10.1145\/1498765.1498780","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-77","unstructured":"Hausi M&#252;ller and Norha Villegas. 2014. Runtime Evolution of Highly Dynamic Software. Springer, Berlin, 229--264. DOI:http:\/\/dx.doi.org\/10.1007\/978-3-642-45398-4_8","DOI":"10.1007\/978-3-642-45398-4_8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-78","unstructured":"Gail C. Murphy, Mik Kersten, and Leah Findlater. 2006. How are java soft. developers using the eclipse ide? IEEE Softw. 23, 4 (2006), 76--83.","DOI":"10.1109\/MS.2006.105","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-79","unstructured":"Nachiappan Nagappan and Thomas Ball. 2005. Use of relative code churn measures to predict system defect density. In Proceedings of the 27th International Conference on Software Engineering (ICSE&#8217;05). ACM, New York, NY, 284--292. DOI:http:\/\/dx.doi.org\/10.1145\/1062455.1062514","DOI":"10.1145\/1062455.1062514","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-80","unstructured":"Stas Negara, Mihai Codoban, Danny Dig, and Ralph E. Johnson. 2013. Mining continous code changes to detect frequent program transformations. Technical Report. University of Illinois at Urbana-Champaign. http:\/\/hdl.handle.net\/2142\/43889"},{"key":"key-10.1145\/3038926-81","unstructured":"Stas Negara, Mihai Codoban, Danny Dig, and Ralph E. Johnson. 2014. Mining fine-grained code changes to detect unknown change patterns. In Proc. of the 36th Int. Conf. on Soft. Eng. (ICSE&#8217;14). ACM, New York, NY, 803--813. http:\/\/doi.acm.org\/10.1145\/2568225.2568317","DOI":"10.1145\/2568225.2568317","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-82","unstructured":"Stas Negara, Mohsen Vakilian, Nicholas Chen, Ralph E. Johnson, and Danny Dig. 2012. Is it dangerous to use version control histories to study source code evolution? In Proc. of the 26th European Conf. on Object-Oriented Programming (ECOOP&#8217;12). Springer-Verlag, Berlin, 79--103. http:\/\/dx.doi.org\/10.1007\/978-3-642-31057-7_5","DOI":"10.1007\/978-3-642-31057-7_5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-83","unstructured":"Oscar Nierstrasz, Marcus Denker, Tudor Girba, and Adrian Lienhard. 2006. analyzing, capturing and taming soft. change. In Proc. of the Workshop on Revival of Dynamic Languages (co-located with ECOOP&#8217;06) (RDL&#8217;06). Nantes, France."},{"key":"key-10.1145\/3038926-84","unstructured":"Dirk Ohst, Michael Welle, and Udo Kelter. 2003. Differences between versions of uml diagrams. SIGSOFT Softw. Eng. Notes 28, 5 (Sept. 2003), 227--236. http:\/\/doi.acm.org\/10.1145\/949952.940102","DOI":"10.1145\/949952.940102","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-85","unstructured":"Takayuki Omori, Shinpei Hayashi, and Katsuhisa Maruyama. 2015. A survey on methods of recording fine-grained operations on integrated development environments and their applications (in japanese). Computer Softw. 32, 1 (Feb. 2015), 60--80."},{"key":"key-10.1145\/3038926-86","unstructured":"Takayuki Omori and Katsuhisa Maruyama. 2008. A change-aware development environment by recording editing operations of source code. In Proc. of the 5th Int. Working Conf. on Mining Soft. Repositories (MSR&#8217;08). ACM, New York, NY, 31--34. http:\/\/doi.acm.org\/10.1145\/1370750.1370758","DOI":"10.1145\/1370750.1370758","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-87","unstructured":"Takayuki Omori and Katsuhisa Maruyama. 2009. Identifying stagnation periods in soft. evolution by replaying editing operations. In Proc. of the 16th Asia-Pacific Soft. Eng. Conf. (APSEC&#8217;09). 389--396.","DOI":"10.1109\/APSEC.2009.50","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-88","unstructured":"Takayuki Omori and Katsuhisa Maruyama. 2010. Flexibly highlighting in replaying operation history. In Proc. of the Int. Workshop on Empirical Soft. Eng. in Practice (IWESEP&#8217;10). 59--60."},{"key":"key-10.1145\/3038926-89","unstructured":"Takayuki Omori and Katsuhisa Maruyama. 2011. An editing-operation replayer with highlights supporting investigation of program modifications. In Proc. of the 12th Int. Workshop on Principles of Soft. Evolution and the 7th Annual ERCIM Workshop on Soft. Evolution (IWPSE-EVOL&#8217;11). ACM, New York, NY, 101--105. http:\/\/doi.acm.org\/10.1145\/2024445.2024464","DOI":"10.1145\/2024445.2024464","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-90","unstructured":"Ali Ouni, Marouane Kessentini, and Houari Sahraoui. 2013. Search-based refactoring using recorded code changes. In Proc. of the 17th European Conf. on Soft. Maintenance and Reengineering (CSMR&#8217;13). 221--230.","DOI":"10.1109\/CSMR.2013.31","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-91","unstructured":"Kai Petersen, Robert Feldt, Shahid Mujtaba, and Michael Mattsson. 2008. Systematic mapping studies in soft. eng.. In Proc. of the 12th Int. Conf. on Evaluation and Assessment in Soft. Eng. (EASE&#8217;08). British Computer Society, Swinton, UK, 68--77."},{"key":"key-10.1145\/3038926-92","unstructured":"Kai Petersen, Sairam Vakkalanka, and Ludwik Kuzniarz. 2015. Guidelines for conducting systematic mapping studies in software engineering: an update. Inf. Soft. Technol. 64, 0 (2015), 1--18.","DOI":"10.1016\/j.infsof.2015.03.007","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-93","unstructured":"Kyle Prete, Napol Rachatasumrit, Nikita Sudan, and Miryung Kim. 2010. Template-based reconstruction of complex refactorings. In Proc. of the 26th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;10). IEEE Computer Society, Washington, DC, 1--10. http:\/\/dx.doi.org\/10.1109\/ICSM.2010.5609577","DOI":"10.1109\/ICSM.2010.5609577","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-94","unstructured":"Yin Qian, Sai Zhang, and Zhengwei Qi. 2008. Mining change patterns in aspectj soft. evolution. In Proc. of the 2008 Int. Conf. on Computer Science and Soft. Eng. (CSSE&#8217;08), Vol. 2. 108--111."},{"key":"key-10.1145\/3038926-95","unstructured":"Napol Rachatasumrit and Miryung Kim. 2012. An empirical investigation into the impact of refactoring on regression testing. In Proc. of the 28th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;12). 357--366.","DOI":"10.1109\/ICSM.2012.6405293","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-96","unstructured":"Md Saidur Rahman and Chanchal K. Roy. 2014. A change-type based empirical study on the stability of cloned code. In Proc. of the 14th IEEE Int. Working Conf. on Source Code Analysis and Manipulation (SCAM&#8217;14). 31--40.","DOI":"10.1109\/SCAM.2014.13","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-97","unstructured":"Xiaoxia Ren, Barbara G. Ryder, Maximilian Stoerzer, and Frank Tip. 2005. Chianti: a change impact analysis tool for java programs. In Proc. of the 27th Int. Conf. on Soft. Eng. (ICSE&#8217;05). ACM, New York, NY, 664--665. http:\/\/doi.acm.org\/10.1145\/1062455.1062598","DOI":"10.1145\/1062455.1062598","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-98","unstructured":"Xiaoxia Ren, Fenil Shah, Frank Tip, Barbara G. Ryder, and Ophelia Chesley. 2004. Chianti: a tool for change impact analysis of java programs. SIGPLAN Notices 39, 10 (Oct. 2004), 432--448. http:\/\/doi.acm.org\/10.1145\/1035292.1029012","DOI":"10.1145\/1035292.1029012","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-99","unstructured":"Charles Rich and Richard C. Waters. 1990. The Programmer&#8217;s Apprentice. ACM Press."},{"key":"key-10.1145\/3038926-100","unstructured":"Romain Robbes. 2007. Mining a change-based soft. repository. In Proc. of the 4th Int. Workshop on Mining Soft. Repositories (MSR&#8217;07). 15--15.","DOI":"10.1109\/MSR.2007.18","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-101","unstructured":"Romain Robbes and Michele Lanza. 2005. Versioning systems for evolution research. In Proc. of the 8th Int. Workshop on Principles of Soft. Evolution (IWPSE&#8217;05). IEEE Computer Society, Washington, DC, 155--164. http:\/\/dx.doi.org\/10.1109\/IWPSE.2005.32","DOI":"10.1109\/IWPSE.2005.32","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-102","unstructured":"Romain Robbes and Michele Lanza. 2007a. A change-based approach to soft. evolution. Electronic Notes in Theoretical Computer Science 166, 0 (2007), 93--109. http:\/\/www.sciencedirect.com\/science\/article\/pii\/S1571066106005317 Proc. of the {ERCIM} Working Group on Soft. Evolution (2006).","DOI":"10.1016\/j.entcs.2006.06.015","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-103","unstructured":"Romain Robbes and Michele Lanza. 2007b. Characterizing and understanding development sessions. In Proc. of the 15th IEEE Int. Conf. on Program Comprehension (ICPC&#8217;07). 155--166.","DOI":"10.1109\/ICPC.2007.12","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-104","unstructured":"Romain Robbes and Michele Lanza. 2008a. Example-based program transformation. In Model Driven Eng. Languages and Systems, Krzysztof Czarnecki, Ileana Ober, Jean-Michel Bruel, Axel Uhl, and Markus V&#246;lter (Eds.). Lecture Notes in Computer Science, Vol. 5301. Springer, Berlin, 174--188. http:\/\/dx.doi.org\/10.1007\/978-3-540-87875-9_13","DOI":"10.1007\/978-3-540-87875-9_13","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-105","unstructured":"Romain Robbes and Michele Lanza. 2008b. How program history can improve code completion. In Proc. of the 23rd IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;08). IEEE Computer Society, Washington, DC, 317--326. http:\/\/dx.doi.org\/10.1109\/ASE.2008.42","DOI":"10.1109\/ASE.2008.42","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-106","unstructured":"Romain Robbes and Michele Lanza. 2008c. Spyware: a change-aware development toolset. In Proc. of the 30th Int. Conf. on Soft. Eng. (ICSE&#8217;08). ACM, New York, NY, USA, 847--850. http:\/\/doi.acm.org\/10.1145\/1368088.1368219","DOI":"10.1145\/1368088.1368219","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-107","unstructured":"Romain Robbes and Michele Lanza. 2010. Improving code completion with program history. Automated Softw. Eng. 17, 2 (Jun. 2010), 181--212. http:\/\/dx.doi.org\/10.1007\/s10515-010-0064-x","DOI":"10.1007\/s10515-010-0064-x","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-108","unstructured":"Romain Robbes, Michele Lanza, and Mircea Lungu. 2007. An approach to soft. evolution based on semantic change. In Proc. of the 10th Int. Conf. on Fundamental Approaches to Soft. Eng. (FASE&#8217;07). Springer-Verlag, Berlin, 27--41."},{"key":"key-10.1145\/3038926-109","unstructured":"Romain Robbes, Damien Pollet, and Michele Lanza. 2008. Logical coupling based on fine-grained change information. In Proc. of the 15th Working Conf. on Reverse Eng. (WCRE&#8217;08). 42--46.","DOI":"10.1109\/WCRE.2008.47","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-110","unstructured":"Romain Robbes, Damien Pollet, and Michele Lanza. 2010. Replaying ide interactions to evaluate and improve change prediction approaches. In Proc. of the 7th IEEE Working Conf. on Mining Soft. Repositories (MSR&#8217;10). 161--170.","DOI":"10.1109\/MSR.2010.5463278","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-111","unstructured":"Martin Robillard, Robert Walker, and Thomas Zimmermann. 2010. Recommendation systems for soft. eng. IEEE Softw. 27 (2010), 80--86.","DOI":"10.1109\/MS.2009.161","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-112","unstructured":"Daniele Romano and Martin Pinzger. 2011. Using source code metrics to predict change-prone java interfaces. In Proc. of the 2011 27th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;11). IEEE Computer Society, Washington, DC, 303--312. http:\/\/dx.doi.org\/10.1109\/ICSM.2011.6080797","DOI":"10.1109\/ICSM.2011.6080797","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-113","unstructured":"Daniele Romano and Martin Pinzger. 2012. Analyzing the evolution of web services using fine-grained changes. In Proc. of the 19th Int. Conf. on Web Services (ICWS&#8217;12). 392--399.","DOI":"10.1109\/ICWS.2012.29","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-114","unstructured":"Daniele Romano, Paulius Raila, Martin Pinzger, and Foutse Khomh. 2012. Analyzing the impact of antipatterns on change-proneness using fine-grained source code changes. In Proc. of the 19th Working Conf. on Reverse Eng. (WCRE&#8217;12). 437--446.","DOI":"10.1109\/WCRE.2012.53","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-115","unstructured":"Barbara G. Ryder and Frank Tip. 2001. Change impact analysis for object-oriented programs. In Proc. of the 2001 ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Soft. Tools and Eng. (PASTE&#8217;01). ACM, New York, NY, 46--53. http:\/\/doi.acm.org\/10.1145\/379605.379661","DOI":"10.1145\/379605.379661","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-116","unstructured":"Anita Sarma, David Redmiles, and Andr&#233; van der Hoek. 2008. Empirical evidence of the benefits of workspace awareness in software configuration management. In Proc. of the 16th Int. Symposium on Foundations of Soft. Eng. (FSE&#8217;08). ACM Press, 113--123.","DOI":"10.1145\/1453101.1453118","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-117","unstructured":"Curtis Schofield, Brendan Tansey, Zhenchang Xing, and Eleni Stroulia. 2006. Digging the development dust for refactorings. In Proc. of the 14th IEEE Int. Conf. on Program Comprehension (ICPC&#8217;06). 23--34.","DOI":"10.1109\/ICPC.2006.18","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-118","unstructured":"Ian Skerrett. 2013. Eclipse Community Survey Results for 2013. Market analysis report. Eclipse Foundation. Retrieved from http:\/\/www.eclipse.org\/org\/press-release\/20130612_eclipsesurvey2013.php."},{"key":"key-10.1145\/3038926-119","unstructured":"Quinten David Soetens and Serge Demeyer. 2012. Cheopsj: change-based test optimization. In Proc. of the 16th European Conf. on Soft. Maintenance and Reengineering (CSMR&#8217;12). 535--538.","DOI":"10.1109\/CSMR.2012.70","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-120","unstructured":"Quinten David Soetens, Serge Demeyer, and Andy Zaidman. 2013a. Change-based test selection in the presence of developer tests. In Proc. of the 17th European Conf. on Soft. Maintenance and Reengineering (CSMR&#8217;13). 101--110.","DOI":"10.1109\/CSMR.2013.20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-121","unstructured":"Quinten David Soetens, Peter Ebraert, and Serge Demeyer. 2010. Avoiding bugs pro-actively by change-oriented programming. In Proc. of the 1st Workshop on Testing Object-Oriented Systems (ETOOS&#8217;10). ACM, New York, NY, Article 7, 7 pages. http:\/\/doi.acm.org\/10.1145\/1890692.1890699","DOI":"10.1145\/1890692.1890699","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-122","unstructured":"Quinten David Soetens, Javier P&#233;rez, and Serge Demeyer. 2013b. An initial investigation into change-based reconstruction of floss-refactorings. In Proc. of the 29th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;13). 384--387.","DOI":"10.1109\/ICSM.2013.53","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-123","unstructured":"Daniel St&#229;hl and Jan Bosch. 2014. Modeling continuous integration practice differences in industry software development. J. Syst. Softw. 87 (2014), 48--59. DOI:http:\/\/dx.doi.org\/10.1016\/j.jss.2013.08.032","DOI":"10.1016\/j.jss.2013.08.032","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-124","unstructured":"Reinhout Stevens and Coen De Roover. 2014. Querying the history of soft. projects using qwalkeko. In Proc. of the IEEE Int. Conf. on Soft. Maintenance and Evolution (ICSME&#8217;14). 585--588.","DOI":"10.1109\/ICSME.2014.101","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-125","unstructured":"Maximilian Stoerzer, Barbara G. Ryder, Xiaoxia Ren, and Frank Tip. 2006. Finding failure-inducing changes in java programs using change classification. In Proc. of the 14th ACM SIGSOFT Int. Symposium on Foundations of Soft. Eng. (SIGSOFT&#8217;06\/FSE-14). ACM, New York, NY, 57--68. http:\/\/doi.acm.org\/10.1145\/1181775.1181783","DOI":"10.1145\/1181775.1181783","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-126","unstructured":"Gabriele Taentzer, Claudia Ermel, Philip Langer, and Manuel Wimmer. 2014. A fundamental approach to model versioning based on graph modifications: from theory to implementation. Softw. Syst. Model. 13, 1 (2014), 239--272. DOI:http:\/\/dx.doi.org\/10.1007\/s10270-012-0248-x","DOI":"10.1007\/s10270-012-0248-x","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-127","unstructured":"Xiangchen Tan, Tie Feng, and Jiachen Zhang. 2007. Mapping soft. design changes to source code changes. In Proc. of the 8th ACIS Int. Conf. on Soft. Eng., Artificial Intelligence, Networking, and Parallel\/Distributed Computing, 2007 (SNPD&#8217;07), Vol. 2. 650--655."},{"key":"key-10.1145\/3038926-128","unstructured":"Paolo Tonella, Marco Torchiano, Bart Du Bois, and Tarja Syst&#228;. 2007. Empirical studies in reverse engineering: state of the art and future trends. Emp. Soft. Eng. 12, 5 (2007), 551--571.","DOI":"10.1007\/s10664-007-9037-5","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-129","unstructured":"Mohsen Vakilian, Nicholas Chen, Stas Negara, Balaji Ambresh Rajkumar, Brian P. Bailey, and Ralph E. Johnson. 2012. Use, disuse, and misuse of automated refactorings. In Proc. of the 34th Int. Conf. on Soft. Eng. (ICSE&#8217;12). IEEE Press, Piscataway, NJ, 233--243.","DOI":"10.1109\/ICSE.2012.6227190","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-130","unstructured":"Peter Wei&#223;gerber and Stephan Diehl. 2006a. Are refactorings less error-prone than other changes? In Proc. of the 3rd Int. Workshop on Mining Soft. Repositories (MSR&#8217;06). ACM, New York, NY, 112--118. http:\/\/doi.acm.org\/10.1145\/1137983.1138011","DOI":"10.1145\/1137983.1138011","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-131","unstructured":"Peter Wei&#223;gerber and Stephan Diehl. 2006b. Identifying refactorings from source-code changes. In Proc. of the 21st IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;06). 231--240.","DOI":"10.1109\/ASE.2006.41","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-132","unstructured":"Claes Wohlin. 2014. Guidelines for snowballing in systematic literature studies and a replication in software engineering. In Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering (EASE&#8217;14). ACM, New York, NY, 38:1--38:10.","DOI":"10.1145\/2601248.2601268","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-133","unstructured":"Zhenchang Xing. 2005. Design mentoring based on design evolution analysis. In Proc. of the 27th Int. Conf. on Soft. Eng. (ICSE&#8217;05). ACM, New York, NY, 660--660.","DOI":"10.1145\/1062455.1062594","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-134","unstructured":"Zhenchang Xing and Eleni Stroulia. 2003. Recognizing refactoring from change tree. In Proc. of the Int. Workshop on REFactoring: Achievements, Challenges, Effects (REFACE&#8217;03). 41--44."},{"key":"key-10.1145\/3038926-135","unstructured":"Zhenchang Xing and Eleni Stroulia. 2004a. Data-mining in support of detecting class co-evolution. In Proc. of the 16th Int. Conf. on Soft. Eng. &#x38; Knowledge Eng. (SEKE&#8217;04). 123--128."},{"key":"key-10.1145\/3038926-136","unstructured":"Zhenchang Xing and Eleni Stroulia. 2004b. Understanding class evolution in object-oriented software. In Proc. of the 12th IEEE Int. Workshop on Program Comprehension (WPC&#8217;04). 34--43.","DOI":"10.1109\/WPC.2004.1311045","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-137","unstructured":"Zhenchang Xing and Eleni Stroulia. 2004c. Understanding phases and styles of object-oriented systems&#8217; evolution. In Proc. of the 20th Int. Conf. on Soft. Maintenance (ICSM&#8217;04). 242--251."},{"key":"key-10.1145\/3038926-138","unstructured":"Zhenchang Xing and Eleni Stroulia. 2005a. Analyzing the evolutionary history of the logical design of object-oriented soft. IEEE Trans. Soft. Eng. 31, 10 (Oct. 2005), 850--868.","DOI":"10.1109\/TSE.2005.106","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-139","unstructured":"Zhenchang Xing and Eleni Stroulia. 2005b. Towards experience-based mentoring of evolutionary development. In Proc. of the 21st IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;05). IEEE Computer Society, Washington, DC, 621--624. http:\/\/dx.doi.org\/10.1109\/ICSM.2005.95","DOI":"10.1109\/ICSM.2005.95","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-140","unstructured":"Zhenchang Xing and Eleni Stroulia. 2005c. Towards mentoring object-oriented evolutionary development. In Proc. of the 21st Int. Conf. on Soft. Maintenance (ICSM&#8217;05). 621--624."},{"key":"key-10.1145\/3038926-141","unstructured":"Zhenchang Xing and Eleni Stroulia. 2005d. Umldiff: an algorithm for object-oriented design differencing. In Proc. of the 20th IEEE\/ACM Int. Conf. on Automated Soft. Eng. (ASE&#8217;05). ACM, New York, NY, 54--65. http:\/\/doi.acm.org\/10.1145\/1101908.1101919"},{"key":"key-10.1145\/3038926-142","unstructured":"Zhenchang Xing and Eleni Stroulia. 2006a. Refactoring detection based on umldiff change-facts queries. In Proc. of the 13th Working Conf. on Reverse Eng. (WCRE&#8217;06). 263--274.","DOI":"10.1109\/WCRE.2006.48","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-143","unstructured":"Zhenchang Xing and Eleni Stroulia. 2006b. Refactoring practice: how it is and how it should be supported - an eclipse case study. In Proc. of the 22nd IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;06). 458--468."},{"key":"key-10.1145\/3038926-144","unstructured":"Zhenchang Xing and Eleni Stroulia. 2006c. Understanding the evolution and co-evolution of classes in object-oriented systems. Int. J. Soft. Eng. Knowl. Eng. 16, 1 (2006), 23--51.","DOI":"10.1142\/S0218194006002707","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-145","unstructured":"Zhenchang Xing and Eleni Stroulia. 2007a. Api-evolution support with diff-catchup. IEEE Trans. Soft. Eng. 33, 12 (Dec. 2007), 818--836. http:\/\/dx.doi.org\/10.1109\/TSE.2007.70747","DOI":"10.1109\/TSE.2007.70747","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-146","unstructured":"Zhenchang Xing and Eleni Stroulia. 2007b. Differencing logical uml models. Automated Soft. Eng. 14, 2 (Jun. 2007), 215--259. http:\/\/dx.doi.org\/10.1007\/s10515-007-0007-3","DOI":"10.1007\/s10515-007-0007-3","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-147","unstructured":"YoungSeok Yoon and Brad A. Myers. 2011. Capturing and analyzing low-level events from the code editor. In Proc. of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU&#8217;11). ACM, New York, NY, 25--30. http:\/\/doi.acm.org\/10.1145\/2089155.2089163","DOI":"10.1145\/2089155.2089163","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-148","unstructured":"YoungSeok Yoon, Brad A. Myers, and Sebon Koo. 2013. Visualization of fine-grained code change history. In Proc. of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL\/HCC&#8217;13). 119--126.","DOI":"10.1109\/VLHCC.2013.6645254","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-149","unstructured":"Andreas Zeller. 2007. The future of programming environments: integration, synergy, and assistance. In Proc. of the 2nd Conf. on The Future of Soft. Eng. (FOSE&#8217;07). IEEE Computer Society, Washington, DC, 316--325.","DOI":"10.1109\/FOSE.2007.31","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-150","unstructured":"Lingming Zhang, Miryung Kim, and Sarfraz Khurshid. 2011. Localizing failure-inducing program edits based on spectrum information. In Proc. of the 27th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;11). IEEE Computer Society, Washington, DC, 23--32. http:\/\/dx.doi.org\/10.1109\/ICSM.2011.6080769","DOI":"10.1109\/ICSM.2011.6080769","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-151","unstructured":"Lingming Zhang, Miryung Kim, and Sarfraz Khurshid. 2012. Faulttracer: a change impact and regression fault analysis tool for evolving java programs. In Proc. of the ACM SIGSOFT 20th Int. Symposium on the Foundations of Soft. Eng. (FSE&#8217;12). ACM, New York, NY, Article 40, 4 pages. http:\/\/doi.acm.org\/10.1145\/2393596.2393642","DOI":"10.1145\/2393596.2393642","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-152","unstructured":"Sai Zhang, Zhongxian Gu, Yu Lin, and Jianjun Zhao. 2008a. Celadon: a change impact analysis tool for aspect-oriented programs. In Companion of the 30th Int. Conf. on Soft. Eng. (ICSE Companion&#8217;08). ACM, New York, NY, 913--914. http:\/\/doi.acm.org\/10.1145\/1370175.1370184","DOI":"10.1145\/1370175.1370184","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-153","unstructured":"Sai Zhang, Zhongxian Gu, Yu Lin, and Jianjun Zhao. 2008b. Change impact analysis for aspectj programs. In Proc. of the 24th IEEE Int. Conf. on Soft. Maintenance (ICSM&#8217;08). 87--96.","DOI":"10.1109\/ICSM.2008.4658057","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3038926-154","unstructured":"Thomas Zimmermann, Andreas Zeller, Peter Wei&#223;gerber, and Stephan Diehl. 2005. Mining version histories to guide software changes. IEEE Trans. Soft. Eng. 31, 6 (Jun. 2005), 429--445.","DOI":"10.1109\/TSE.2005.72","doi-asserted-by":"crossref"}],"container-title":["ACM Computing Surveys"],"original-title":[],"language":"en","link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3038926&ftid=1864386&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,20]],"date-time":"2019-09-20T18:33:49Z","timestamp":1569004429000},"score":1.0,"subtitle":["A Research Perspective on Modern Software Tooling"],"short-title":[],"issued":{"date-parts":[[2017,4,6]]},"references-count":154,"journal-issue":{"published-print":{"date-parts":[[2017,6,19]]},"issue":"2"},"URL":"http:\/\/dx.doi.org\/10.1145\/3038926","relation":{"cites":[]},"ISSN":["0360-0300"],"issn-type":[{"value":"0360-0300","type":"print"}]}}