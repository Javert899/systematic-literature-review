{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,10,25]],"date-time":"2019-10-25T03:10:55Z","timestamp":1571973055519},"publisher-location":"New York, New York, USA","reference-count":31,"publisher":"ACM Press","isbn-type":[{"value":"9781450365031","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,9,17]],"date-time":"2018-09-17T00:00:00Z","timestamp":1537142400000},"delay-in-days":259,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3266237.3266274","type":"proceedings-article","created":{"date-parts":[[2018,9,28]],"date-time":"2018-09-28T20:59:18Z","timestamp":1538168358000},"source":"Crossref","is-referenced-by-count":0,"title":["Can automated test case generation cope with extract method validation?"],"prefix":"10.1145","author":[{"given":"Indy P. S. C.","family":"Silva","sequence":"first","affiliation":[{"name":"Software Practices Laboratory (SPLab)\/UFCG, Campina Grande, PB, Brazil"}]},{"given":"Everton L. G.","family":"Alves","sequence":"additional","affiliation":[{"name":"Software Practices Laboratory (SPLab)\/UFCG, Campina Grande, PB, Brazil"}]},{"given":"Patr\u00edcia D. L.","family":"Machado","sequence":"additional","affiliation":[{"name":"Software Practices Laboratory (SPLab)\/UFCG, Campina Grande, PB, Brazil"}]}],"member":"320","reference":[{"key":"key-10.1145\/3266237.3266274-1","unstructured":"M Moein Almasi, Hadi Hemmati, Gordon Fraser, Andrea Arcuri, and J&#257;nis Benefelds. 2017. An Industrial Evaluation of Unit Test Generation: Finding Real Faults in a Financial Application. InProceedings of the 39th International Conference on Software Engineering: Software Engineering in Practice Track.IEEE Press, 263--272."},{"key":"key-10.1145\/3266237.3266274-2","unstructured":"Everton LG Alves, Tiago Massoni, and Patr&#237;cia Duarte de Lima Machado. 2017. Test coverage of impacted code elements for detecting refactoring faults: An exploratory study.Journal of Systems and Software123 (2017), 223--238."},{"key":"key-10.1145\/3266237.3266274-3","unstructured":"Everton L. G. Alves, Tiago Massoni, and Patr&#237;cia D. L. Machado. 2015. Test Coverage and Impact Analysis for Detecting Refactoring Faults: A Study on the Extract Method Refactoring. InProc. of the 30th Annual ACM Symposium on Applied Computing (SAC '15).ACM, 1534--1540.","DOI":"10.1145\/2695664.2695811","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-4","unstructured":"ZF Andy Field, Jeremy Miles, and Zoe Field. 2012.Discovering statistics using R.Sage, Thousand Oaks."},{"key":"key-10.1145\/3266237.3266274-5","unstructured":"Andrea Arcuri, Jos&#233; Campos, and Gordon Fraser. 2016. Unit test generation during software development: Evosuite plugins for maven, intellij and jenkins. InSoftware Testing, Verification and Validation (ICST), 2016 IEEE International Conference on.IEEE, 401--408."},{"key":"key-10.1145\/3266237.3266274-6","unstructured":"Andrea Arcuri, Gordon Fraser, and Ren&#233; Just. 2017. Private api access and functional mocking in automated unit test generation. InSoftware Testing,Verification and Validation (ICST), 2017 IEEE International Conference on.IEEE, 126--137."},{"key":"key-10.1145\/3266237.3266274-7","unstructured":"Sebastian Bauersfeld, Tanja EJ Vos, and Kiran Lakhotia. 2013. Unit testing tool competitions-lessons learned. InInternational Workshop on Future Internet Testing.Springer, 75--94."},{"key":"key-10.1145\/3266237.3266274-8","unstructured":"Brett Daniel, Danny Dig, Kely Garcia, and Darko Marinov. 2007. Automated Testing of Refactoring Engines. InProceedings of the the 6th Joint Meeting of theEuropean Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering (ESEC-FSE '07). ACM, New York, NY, USA, 185--194."},{"key":"key-10.1145\/3266237.3266274-9","unstructured":"Martin Fowler and Kent Beck. 1999.Refactoring: improving the design of existing code. Addison-Wesley Professional."},{"key":"key-10.1145\/3266237.3266274-10","unstructured":"Gordon Fraser and Andrea Arcuri. 2011. EvoSuite: Automatic Test Suite Generation for Object-oriented Software. InProceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (ESEC\/FSE '11).ACM, New York, NY, USA, 416--419."},{"key":"key-10.1145\/3266237.3266274-11","unstructured":"Gordon Fraser and Andrea Arcuri. 2015. 1600 faults in 100 projects: Automatically finding faults while achieving high coverage with evosuite.Empirical Software Engineering20, 3 (2015), 611--639.","DOI":"10.1007\/s10664-013-9288-2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-12","unstructured":"Gordon Fraser and Andrea Arcuri. 2017. EvoSuite at the SBST 2017 Tool Competition. In10th International Workshop on Search-Based Software Testing (SBST'17) at ICSE'17. 39--42.","DOI":"10.1109\/SBST.2017.6","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-13","unstructured":"Miryung Kim, Thomas Zimmermann, and Nachiappan Nagappan. 2012. A Field Study of Refactoring Challenges and Benefits. InProceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering (FSE '12).ACM, New York, NY, USA, Article 50, 11 pages."},{"key":"key-10.1145\/3266237.3266274-14","unstructured":"David G Kleinbaum and Mitchel Klein. 2010. Introduction to logistic regression. InLogistic regression. Springer, 1--39.","DOI":"10.1007\/978-1-4419-1742-3_1","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-15","unstructured":"J. S. Kracht, J. Z. Petrovic, and K. R. Walcott-Justice. 2014. Empirically Evaluating the Quality of Automatically Generated and Manually Written Test Suites. In2014 14th International Conference on Quality Software.256--265.","DOI":"10.1109\/QSIC.2014.33","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-16","unstructured":"Robert C Martin. 2002.Agile software development: principles, patterns, and practices. Prentice Hall."},{"key":"key-10.1145\/3266237.3266274-17","unstructured":"Alysson F Milanez, Tiago L Massoni, Rohit Gheyi, and Campina Grande-PB-Brazil. 2013. Categorizing Nonconformances Between Programs and Their Specifications. InBrazilian Workshop on Systematic and Automated Software Testing - CBSoft\/SAST."},{"key":"key-10.1145\/3266237.3266274-18","unstructured":"Melina Mongiovi, Rohit Gheyi, Gustavo Soares, Leopoldo Teixeira, and Paulo Borba. 2014. Making refactoring safer through impact analysis.Science of Computer Programming93 (2014), 39--64.","DOI":"10.1016\/j.scico.2013.11.001","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-19","unstructured":"Raimund Moser, Pekka Abrahamsson, Witold Pedrycz, Alberto Sillitti, and Giancarlo Succi. 2008. A case study on the impact of refactoring on quality and productivity in an agile team. InBalancing Agility and Formalism in Software Engineering. Springer, 252--266.","DOI":"10.1007\/978-3-540-85279-7_20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-20","unstructured":"Emerson Murphy-Hill, Chris Parnin, and Andrew P Black. 2012. How we refactor, and how we know it.Software Engineering, IEEE Transactions on38, 1 (2012), 5--18."},{"key":"key-10.1145\/3266237.3266274-21","unstructured":"Carlos Pacheco and Michael D. Ernst. 2007. Randoop: Feedback-directed Random Testing for Java. InCompanion to the 22Nd ACM SIGPLAN Conference on Object-oriented Programming Systems and Applications Companion (OOPSLA '07). ACM, New York, NY, USA, 815--816."},{"key":"key-10.1145\/3266237.3266274-22","unstructured":"Napol Rachatasumrit and Miryung Kim. 2012. An empirical investigation into the impact of refactoring on regression testing. InSoftware Maintenance (ICSM), 2012 28th IEEE International Conference on.IEEE, 357--366."},{"key":"key-10.1145\/3266237.3266274-23","unstructured":"Jos&#233; Miguel Rojas, Mattia Vivanti, Andrea Arcuri, and Gordon Fraser. 2016. A detailed investigation of the effectiveness of whole test suite generation.Empirical Software Engineering(2016), 1--42."},{"key":"key-10.1145\/3266237.3266274-24","unstructured":"Urko Rueda, Ren&#233; Just, Juan P Galeotti, and Tanja EJ Vos. 2016. Unit Testing Tool Competition - Round Four. InSearch-Based Software Testing (SBST), 2016 IEEE\/ACM 9th International Workshop on.IEEE, 19--28."},{"key":"key-10.1145\/3266237.3266274-25","unstructured":"Urko Rueda, Tanja EJ Vos, and ISWB Prasetya. 2015. Unit testing tool competition: round three. InProceedings of the Eighth International Workshop on Search-Based Software Testing. IEEE Press, 19--24."},{"key":"key-10.1145\/3266237.3266274-26","unstructured":"Sina Shamshiri, Rene Just, Jose Miguel Rojas, Gordon Fraser, Phil McMinn, and Andrea Arcuri. 2015. Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T). InProceedings of the 2015 30th IEEE\/ACM International Conference on Automated Software Engineering (ASE) (ASE '15). IEEE Computer Society, Washington, DC, USA, 201--211."},{"key":"key-10.1145\/3266237.3266274-27","unstructured":"Indy P.S. Silva. 2018. Empirical Study's Artifacts. (2018). https:\/\/sites.google.com\/copin.ufcg.edu.br\/investigatingautomaticgenerate\/"},{"key":"key-10.1145\/3266237.3266274-28","unstructured":"Indy PSC Silva, Everton LG Alves, and Wilkerson L Andrade. 2017. Analyzing automatic test generation tools for refactoring validation. InProceedings of the 12th International Workshop on Automation of Software Testing.IEEE Press, 38--44."},{"key":"key-10.1145\/3266237.3266274-29","unstructured":"Gustavo Soares, Rohit Gheyi, and Tiago Massoni. 2013. Automated behavioral testing of refactoring engines.IEEE Transactions on Software Engineering39, 2 (2013), 147--162.","DOI":"10.1109\/TSE.2012.19","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-30","unstructured":"Gustavo Soares, Rohit Gheyi, Dalton Serey, and Tiago Massoni. 2010. Making program refactoring safer.IEEE software27, 4 (2010), 52--57.","DOI":"10.1109\/MS.2010.63","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3266237.3266274-31","unstructured":"Xusheng Xiao, Tao Xie, Nikolai Tillmann, and Jonathan de Halleux. 2011. Precise Identification of Problems for Structural Test Generation. InProceedings of the 33rd International Conference on Software Engineering (ICSE '11).ACM, New York, NY, USA, 611--620."}],"event":{"name":"the XXXII Brazilian Symposium","location":"Sao Carlos, Brazil","acronym":"SBES '18","number":"32","start":{"date-parts":[[2018,9,17]]},"end":{"date-parts":[[2018,9,21]]}},"container-title":["Proceedings of the XXXII Brazilian Symposium on Software Engineering - SBES '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3266274&ftid=2001806&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,10,25]],"date-time":"2019-10-25T02:33:55Z","timestamp":1571970835000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450365031"],"references-count":31,"URL":"http:\/\/dx.doi.org\/10.1145\/3266237.3266274","relation":{"cites":[]}}}