{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,10,24]],"date-time":"2019-10-24T01:40:41Z","timestamp":1571881241730},"publisher-location":"New York, New York, USA","reference-count":37,"publisher":"ACM Press","isbn-type":[{"value":"9781450364805","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,9,20]],"date-time":"2018-09-20T00:00:00Z","timestamp":1537401600000},"delay-in-days":262,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3264637.3264649","type":"proceedings-article","created":{"date-parts":[[2018,9,10]],"date-time":"2018-09-10T12:11:35Z","timestamp":1536581495000},"source":"Crossref","is-referenced-by-count":0,"title":["Towards progressive program verification in Dafny"],"prefix":"10.1145","author":[{"given":"Ismael","family":"Figueroa","sequence":"first","affiliation":[{"name":"Pontificia Universidad, Valpara\u00edso, Chile"}]},{"given":"Bruno","family":"Garc\u00eda","sequence":"additional","affiliation":[{"name":"Pontificia Universidad, Valpara\u00edso, Chile"}]},{"given":"Paul","family":"Leger","sequence":"additional","affiliation":[{"name":"Universidad Cat\u00f3lica del Norte, Coquimbo, Chile"}]}],"member":"320","reference":[{"key":"key-10.1145\/3264637.3264649-1","unstructured":"2018. The Java Modeling Language (JML). https:\/\/www.eecs.ucf.edu\/leavens\/JML\/index.shtml."},{"key":"key-10.1145\/3264637.3264649-2","unstructured":"Jos&#233; Bacelar Almeida, Maria Jo&#227;o Frade, Jorge Sousa Pinto, and Sim&#227;o Melo de Sousa. 2011.Rigorous Software Development: An Introduction to Program Verification(1st ed.). Springer-Verlag.","DOI":"10.1007\/978-0-85729-018-2","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-3","unstructured":"Johannes Bader, Jonathan Aldrich, and &#201;ric Tanter. 2018. Gradual Program Verification. InProceedings of the 19th International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI 2018) (Lecture Notes in Computer Science), I sil Dillig and Jens Palsberg (Eds.), Vol. 10747. Springer-Verlag, Los Angeles, CA, USA, 25--46."},{"key":"key-10.1145\/3264637.3264649-4","unstructured":"Mike Barnett, Bor-Yuh Evan Chang, Robert DeLine, Bart Jacobs, and K. Rustan M. Leino. 2006.Boogie: A Modular Reusable Verifier for Object-Oriented Programs.Springer Berlin Heidelberg, Berlin, Heidelberg, 364--387."},{"key":"key-10.1145\/3264637.3264649-5","unstructured":"Clark W Barrett, Roberto Sebastiani, Sanjit A Seshia, Cesare Tinelli, et al. 2009. Satisfiability modulo theories.Handbook of satisfiability185 (2009), 825--885."},{"key":"key-10.1145\/3264637.3264649-6","unstructured":"Patrick Baudin, Pascal Cuoq, Jean-Cristophe Filli&#226;tre, Claude March&#233;, Benjamin Monate, Yannick Moy, and Virgile Prevosto. 2018. The ANSI\/ISO C Specification Language (ACSL). https:\/\/frama-c.com\/acsl.html."},{"key":"key-10.1145\/3264637.3264649-7","unstructured":"Jesper Bengtson, Karthikeyan Bhargavan, C&#233;dric Fournet, Andrew D. Gordon, and Sergio Maffeis. 2011. Refinement types for secure implementations.ACM Transactions on Programming Languages and Systems33, 2, Article 8 (Jan. 2011), 8:1--8:45 pages.","DOI":"10.1145\/1890028.1890031","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-8","unstructured":"Pascal Cuoq, Florent Kirchner, Nikolai Kosmatov, Virgile Prevosto, Julien Signoles, and Boris Yakobowski. 2012. Frama-C. InSoftware Engineering and Formal Methods, George Eleftherakis, Mike Hinchey, and Mike Holcombe (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 233--247."},{"key":"key-10.1145\/3264637.3264649-9","unstructured":"Dart Team. 2013. Dart Programming Language Specification. Version 0.41."},{"key":"key-10.1145\/3264637.3264649-10","unstructured":"Leonardo De Moura and Nikolaj Bj&#248;rner. 2008. Z3: An Efficient SMT Solver. InProceedings of the Theory and Practice of Software, 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'08\/ETAPS'08).Springer-Verlag, Berlin, Heidelberg, 337--340. http:\/\/dl.acm.org\/citation.cfm?id=1792734.1792766","DOI":"10.1007\/978-3-540-78800-3_24","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-11","unstructured":"Micka&#235;l Delahaye, Nikolai Kosmatov, and Julien Signoles. 2013. Common Specification Language for Static and Dynamic Analysis of C Programs. InProceedings of the 28th Annual ACM Symposium on Applied Computing (SAC '13).ACM, New York, NY, USA, 1230--1235.","DOI":"10.1145\/2480362.2480593","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-12","unstructured":"Len Erlikh. 2000. Leveraging Legacy System Dollars for E-Business.IT Professional2, 3 (May 2000), 17--23.","DOI":"10.1109\/6294.846201","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-13","unstructured":"Manuel F&#228;hndrich, Michael Barnett, and Francesco Logozzo. 2010. Embedded Contract Languages. InProceedings of the 2010 ACM Symposium on Applied Computing (SAC '10).ACM, New York, NY, USA, 2103--2110.","DOI":"10.1145\/1774088.1774531","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-14","unstructured":"Jean-Christophe Filli&#225;tre. 2011. Deductive Software Verification.International Journal on Software Tools for Technology Transfer13, 5 (Oct. 2011), 397--403.","DOI":"10.1007\/s10009-011-0211-0","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-15","unstructured":"M&#246;ssenb&#246;ck Hanspeter, L&#246;berbauer Markus, and W&#246;&#223;Albrecht. 2018. The Compiler Generator Coco\/R. http:\/\/www.ssw.uni-linz.ac.at\/Coco\/."},{"key":"key-10.1145\/3264637.3264649-16","unstructured":"David Janzen and Hossein Saiedian. 2005. Test-Driven Development: Concepts, Taxonomy, and Future Direction.Computer38, 9 (Sept. 2005), 43--50.","DOI":"10.1109\/MC.2005.314","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-17","unstructured":"G. Kiczales, J. Irwin, J. Lamping, J. Loingtier, C.V. Lopes, C. Maeda, and A. Mendhekar. 1996. Aspect Oriented Programming. InSpecial Issues in Object-Oriented Programming.Max Muehlhaeuser (general editor) et al.","DOI":"10.1007\/BFb0053381","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-18","unstructured":"Nico Lehmann and &#201;ric Tanter. 2017. Gradual Refinement Types. InProceedings of the 44th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL 2017).ACM Press, Paris, France, 775--788.","DOI":"10.1145\/3009837.3009856","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-19","unstructured":"J. Lehtosalo and contributors. 2018. MyPy - optional static typing for Python. http:\/\/mypy-lang.org."},{"key":"key-10.1145\/3264637.3264649-20","unstructured":"K. Rustan M. Leino. 2010.Dafny: An Automatic Program Verifier for Functional Correctness.Springer Berlin Heidelberg, Berlin, Heidelberg, 348--370."},{"key":"key-10.1145\/3264637.3264649-21","unstructured":"K. R. M. Leino. 2017. Accessible Software Verification with Dafny.IEEE Software34, 6 (November 2017), 94--97.","DOI":"10.1109\/MS.2017.4121212","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-22","unstructured":"Bertrand Meyer. 1992. Applying \"Design by Contract\".Computer25, 10 (Oct. 1992), 40--51.","DOI":"10.1109\/2.161279","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-23","unstructured":"D North. 2006. Behavior Modification: The evolution of behavior-driven development.Better Software8, 3 (2006)."},{"key":"key-10.1145\/3264637.3264649-24","unstructured":"Benjamin C. Pierce. 2002.Types and programming languages.MIT Press, Cambridge, MA, USA."},{"key":"key-10.1145\/3264637.3264649-25","unstructured":"Benjamin C. Pierce (Ed.). 2005.Advanced Topics in Types and Programming Languages.MIT Press, Cambridge, MA, USA.","DOI":"10.7551\/mitpress\/1104.001.0001","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-26","unstructured":"Roger Pressman. 2010.Software Engineering: A Practitioner's Approach(7 ed.). McGraw-Hill, Inc., New York, NY, USA."},{"key":"key-10.1145\/3264637.3264649-27","unstructured":"Henrique Reb&#234;lo, Gary T. Leavens, Mehdi Bagherzadeh, Hridesh Rajan, Ricardo Lima, Daniel M. Zimmerman, M&#225;rcio Corn&#233;lio, and Thomas Th&#252;m. 2014. AspectJML: Modular Specification and Runtime Checking for Crosscutting Contracts. InProceedings of the 13th International Conference on Modularity (MODULARITY '14).ACM, New York, NY, USA, 157--168.","DOI":"10.1145\/2577080.2577084","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-28","unstructured":"MicrosoftResearch. 2018. Dafny - guide. https:\/\/rise4fun.com\/Dafny\/tutorial."},{"key":"key-10.1145\/3264637.3264649-29","unstructured":"Tim Sheard, Aaron Stump, and Stephanie Weirich. 2010. Language-Based Verification Will Change The World. InProceedings of the FSE\/SDP Workshop on the Future of Sofware Engineering Research (FoSER 2010).343--348.","DOI":"10.1145\/1882362.1882432","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-30","unstructured":"Jeremy Siek and Walid Taha. 2006. Gradual Typing for Functional Languages. InProceedings of the Scheme and Functional Programming Workshop.81--92."},{"key":"key-10.1145\/3264637.3264649-31","unstructured":"Jeremy G. Siek, Michael M. Vitousek, Matteo Cimini, and John Tang Boyland. 2015. Refined Criteria for Gradual Typing. In1st Summit on Advances in Programming Languages (SNAPL 2015) (Leibniz International Proceedings in Informatics (LIPIcs)), Vol. 32. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik, Asilomar, California, USA, 274--293."},{"key":"key-10.1145\/3264637.3264649-32","unstructured":"Ian Sommerville. 2006.Software Engineering: (Update) (8th Edition) (International Computer Science).Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA."},{"key":"key-10.1145\/3264637.3264649-33","unstructured":"Umberto Souza da Costa, Anamaria Martins Moreira, Martin A. Musicante, and Placido A. Souza Neto. 2012. JCML: A specification language for the runtime verification of Java Card programs.Science of Computer Programming77, 4 (2012), 533 -- 550.","DOI":"10.1016\/j.scico.2010.03.003","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-34","unstructured":"Ioannis G. Stamelos and Panagiotis Sfetsos. 2007.Agile Software Development Quality Assurance.IGI Global, Hershey, PA, USA.","DOI":"10.4018\/978-1-59904-216-9","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-35","unstructured":"&#201;ric Tanter and Nicolas Tabareau. 2015. Gradual Certified Programming in Coq. InProceedings of the 11th ACM Dynamic Languages Symposium (DLS 2015).ACM Press, Pittsburgh, PA, USA, 26--40.","DOI":"10.1145\/2816707.2816710","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3264637.3264649-36","unstructured":"The Coq Development Team. 2015.The Coq proof assistant reference manual.http:\/\/coq.inria.fr Version 8.5."},{"key":"key-10.1145\/3264637.3264649-37","unstructured":"Hongwei Xi and Frank Pfenning. 1998. Eliminating array bound checking through dependent types. InProceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI '98).ACM Press, 249--257."}],"event":{"name":"the XXII Brazilian Symposium","location":"Sao Carlos, Brazil","acronym":"SBLP '18","number":"22","start":{"date-parts":[[2018,9,20]]},"end":{"date-parts":[[2018,9,21]]}},"container-title":["Proceedings of the XXII Brazilian Symposium on Programming Languages - SBLP '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3264649&ftid=2001531&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,10,24]],"date-time":"2019-10-24T01:01:46Z","timestamp":1571878906000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450364805"],"references-count":37,"URL":"http:\/\/dx.doi.org\/10.1145\/3264637.3264649","relation":{"cites":[]}}}