{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,11,7]],"date-time":"2019-11-07T18:10:14Z","timestamp":1573150214468},"publisher-location":"New York, New York, USA","reference-count":49,"publisher":"ACM Press","isbn-type":[{"value":"9781450356381","type":"print"}],"license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2018,5,27]],"date-time":"2018-05-27T00:00:00Z","timestamp":1527379200000},"delay-in-days":146,"content-version":"vor"}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":[],"published-print":{"date-parts":[[2018]]},"DOI":"10.1145\/3180155.3180247","type":"proceedings-article","created":{"date-parts":[[2018,12,13]],"date-time":"2018-12-13T15:45:16Z","timestamp":1544715916000},"source":"Crossref","is-referenced-by-count":10,"title":["Semantic program repair using a reference implementation"],"prefix":"10.1145","author":[{"given":"Sergey","family":"Mechtaev","sequence":"first","affiliation":[{"name":"National University of Singapore"}]},{"given":"Manh-Dung","family":"Nguyen","sequence":"additional","affiliation":[{"name":"National University of Singapore"}]},{"given":"Yannic","family":"Noller","sequence":"additional","affiliation":[{"name":"Humboldt University of Berlin"}]},{"given":"Lars","family":"Grunske","sequence":"additional","affiliation":[{"name":"Humboldt University of Berlin"}]},{"given":"Abhik","family":"Roychoudhury","sequence":"additional","affiliation":[{"name":"National University of Singapore"}]}],"member":"320","reference":[{"key":"key-10.1145\/3180155.3180247-1","unstructured":"Rajeev Alur, Rastislav Bodik, Eric Dallal, Dana Fisman, Pranav Garg, Garvit Juniwal, Hadas Kress-Gazit, P. Madhusudan, Milo M. K. Martin, Mukund Raghothaman, Shambwaditya Saha, Sanjit A. Seshia, Rishabh Singh, Armando Solar-Lezama, Emina Torlak, and Abhishek Udupa. 2015. Syntax-Guided Synthesis. InDependable Software Systems Engineering. 1--25."},{"key":"key-10.1145\/3180155.3180247-2","unstructured":"Earl T. Barr, Yuriy Brun, Premkumar T. Devanbu, Mark Harman, and Federica Sarro. 2014. The plastic surgery hypothesis. InFSE. ACM, 306--317.","DOI":"10.1145\/2635868.2635898","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-3","unstructured":"Earl T. Barr, Mark Harman, Yue Jia, Alexandru Marginean, and Justyna Petke. 2015. Automated Software Transplantation. InISSTA. ACM, New York, NY, USA, 257--269.","DOI":"10.1145\/2771783.2771796","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-4","unstructured":"Cristian Cadar, Daniel Dunbar, Dawson R Engler, et al. 2008. KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs.. InOSDI, Vol. 8. 209--224."},{"key":"key-10.1145\/3180155.3180247-5","unstructured":"Satish Chandra, Emina Torlak, Shaon Barman, and Rastislav Bod&#237;k. 2011. Angelic debugging. InICSE. 121--130.","DOI":"10.1145\/1985793.1985811","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-6","unstructured":"Leonardo De Moura and Nikolaj Bj&#248;rner. 2008. Z3: An Efficient SMT Solver. InTACAS. Springer-Verlag, Berlin, Heidelberg, 337--340.","DOI":"10.1007\/978-3-540-78800-3_24","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-7","unstructured":"Thomas Durieux, Matias Martinez, Martin Monperrus, Romain Sommerard, and Jifeng Xuan. 2015. Automatic Repair of Real Bugs: An Experience Report on the Defects4J Dataset.CoRRabs\/1505.07002 (2015)."},{"key":"key-10.1145\/3180155.3180247-8","unstructured":"Mark Harman, Yue Jia, and William B. Langdon. 2014. Babel Pidgin: SBSE Can Grow and Graft Entirely New Functionality into a Real World System. InSSBSE, Vol. 8636. Springer, 247--252."},{"key":"key-10.1145\/3180155.3180247-9","unstructured":"James A Jones, Mary Jean Harrold, and John Stasko. 2002. Visualization of test information to assist fault localization. InICSE. ACM, 467--477.","DOI":"10.1145\/581396.581397","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-10","unstructured":"Ming Kawaguchi, Shuvendu Lahiri, and Henrique Rebelo. 2010.Conditional equivalence. Technical Report."},{"key":"key-10.1145\/3180155.3180247-11","unstructured":"Yalin Ke, Kathryn T. Stolee, Claire Le Goues,and Yuriy Brun. 2015. Repairing Programs with Semantic Code Search. InASE. IEEE Computer Society, 295--306.","DOI":"10.1109\/ASE.2015.60","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-12","unstructured":"James C. King. 1976. Symbolic Execution and Program Testing.Commun. ACM19, 7 (1976), 385--394.","DOI":"10.1145\/360248.360252","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-13","unstructured":"Shuvendu K. Lahiri, Chris Hawblitzel, Ming Kawaguchi, and Henrique Reb&#234;lo. 2012. SYMDIFF: A Language-Agnostic Semantic Diff Tool for Imperative Programs. InCAV. 712--717.","DOI":"10.1007\/978-3-642-31424-7_54","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-14","unstructured":"Shuvendu K. Lahiri, Rohit Sinha, and Chris Hawblitzel. 2015. Automatic Rootcausing for Program Equivalence Failures in Binaries. InCAV. 362--379.","DOI":"10.1007\/978-3-319-21690-4_21","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-15","unstructured":"Xuan-Bach D. Le, Duc-Hiep Chu, David Lo, Claire Le Goues, and Willem Visser. 2017. JFIX: semantics-based repair of Java programs via symbolic PathFinder. InISSTA. ACM, 376--379.","DOI":"10.1145\/3092703.3098225","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-16","unstructured":"Claire Le Goues, Michael Dewey-Vogt, Stephanie Forrest, and WestleyWeimer. 2012. A Systematic Study ofAutomated Program Repair: Fixing 55 out of 105 Bugs for $8 Each. InICSE. IEEE Press, 3--13."},{"key":"key-10.1145\/3180155.3180247-17","unstructured":"Claire Le Goues, Neal Holtschulte, Edward K Smith, Yuriy Brun, Premkumar Devanbu, Stephanie Forrest, and Westley Weimer. 2015. The ManyBugs and IntroClass benchmarks for automated repair of C programs.TSE41, 12 (2015), 1236--1256."},{"key":"key-10.1145\/3180155.3180247-18","unstructured":"Claire Le Goues, ThanhVu Nguyen, Stephanie Forrest, and Westley Weimer. 2012. GenProg: A generic method for automatic software repair.IEEE TSE38, 1 (2012), 54--72."},{"key":"key-10.1145\/3180155.3180247-19","unstructured":"Rainer Leupers. 2013.Code optimization techniques for embedded processors: Methods, algorithms, and tools. Springer Science &#38; Business Media."},{"key":"key-10.1145\/3180155.3180247-20","unstructured":"Qing Li, Tatuya Jinmei, and Keiichi Shima. 2010.IPv6 Core Protocols Implementation. Morgan Kaufmann."},{"key":"key-10.1145\/3180155.3180247-21","unstructured":"Fan Long and Martin Rinard. {n. d.}. Staged program repair with condition synthesis. InESEC\/FSE. ACM, 166--178."},{"key":"key-10.1145\/3180155.3180247-22","unstructured":"Fan Long and Martin Rinard. 2016. Automatic patch generation by learning correct code. InPOPL. ACM, 298--312.","DOI":"10.1145\/2837614.2837617","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-23","unstructured":"Paul Dan Marinescu and Cristian Cadar. 2012. Make test-zesti: A symbolic execution solution for improving regression testing. InICSE. IEEE Press, 716--726.","DOI":"10.1109\/ICSE.2012.6227146","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-24","unstructured":"Matias Martinez and Martin Monperrus. 2015. Mining software repair models for reasoning on the search space of automated program fixing.Empirical Software Engineering20, 1 (2015), 176--205.","DOI":"10.1007\/s10664-013-9282-8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-25","unstructured":"Sergey Mechtaev, Jooyong Yi, and Abhik Roychoudhury. 2015. Directfix: Looking for simple program repairs. InICSE. IEEE Press, 448--458.","DOI":"10.1109\/ICSE.2015.63","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-26","unstructured":"Sergey Mechtaev, Jooyong Yi, and Abhik Roychoudhury. 2016. Angelix: Scalable Multiline Program Patch Synthesis via Symbolic Analysis. InICSE. 691--701.","DOI":"10.1145\/2884781.2884807","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-27","unstructured":"Hoang Duong Thien Nguyen, Dawei Qi, Abhik Roychoudhury, and Satish Chandra. 2013. SemFix: Program Repair via Semantic Analysis. InICSE. IEEE Press, Piscataway, NJ, USA, 772--781."},{"key":"key-10.1145\/3180155.3180247-28","unstructured":"Suzette Person, Matthew B. Dwyer, Sebastian G. Elbaum, and Corina S. Pasareanu. 2008. Differential symbolic execution. InFSE. 226--237.","DOI":"10.1145\/1453101.1453131","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-29","unstructured":"Justyna Petke, Mark Harman, William B. Langdon, and Westley Weimer. 2014. Using Genetic Improvement and Code Transplants to Specialise a C+ + Program to a Problem Class. InEuroGP, Vol. 8599. Springer, 137--149.","DOI":"10.1007\/978-3-662-44303-3_12","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-30","unstructured":"Yuhua Qi, Xiaoguang Mao, Yan Lei, Ziying Dai, and Chengsong Wang. 2014. The strength of random search on automated program repair. InICSE. ACM, 254--265.","DOI":"10.1145\/2568225.2568254","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-31","unstructured":"Stelios Sidiroglou-Douskos, Eric Lahtinen, Anthony Eden, Fan Long, and Martin Rinard. 2017. CodeCarbonCopy. InESEC\/FSE. ACM, 95--105.","DOI":"10.1145\/3106237.3106269","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-32","unstructured":"Stelios Sidiroglou-Douskos, Eric Lahtinen, Fan Long, and Martin Rinard. 2015. Automatic Error Elimination by Horizontal Code Transfer Across Multiple Applications. InPLDI. ACM, New York, NY, USA, 43--54.","DOI":"10.1145\/2737924.2737988","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-33","unstructured":"Kathryn T. Stolee, Sebastian G. Elbaum, and Daniel Dobos. 2014. Solving the Search for Source Code.ACM Trans. Softw. Eng. Methodol. 23,3 (2014), 26:1--26:45."},{"key":"key-10.1145\/3180155.3180247-34","unstructured":"Kathryn T. Stolee, Sebastian G. Elbaum, and Matthew B. Dwyer. 2016. Code search with input\/output queries: Generalizing, ranking, and assessment.Journal of Systems and Software116 (2016), 35--48.","DOI":"10.1016\/j.jss.2015.04.081","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-35","unstructured":"Shin Hwei Tan and Abhik Roychoudhury. 2015. relifix: Automated repair of software regressions. InICSE. IEEE Press, 471--482."},{"key":"key-10.1145\/3180155.3180247-36","unstructured":"Shin Hwei Tan, Jooyong Yi, Sergey Mechtaev, Abhik Roychoudhury, et al. 2017. Codeflaws: a programming competition benchmark for evaluating automated program repair tools. InICSE Companion. 180--182.","DOI":"10.1109\/ICSE-C.2017.76","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-37","unstructured":"Shin Hwei Tan, Hiroaki Yoshida, Mukul R Prasad, and Abhik Roychoudhury. 2016. Anti-patterns in search-based program repair. InFSE. ACM, 727--738."},{"key":"key-10.1145\/3180155.3180247-38","unstructured":"Nikolai Tillmann and Wolfram Schulte. 2005. Parameterized unit tests. InACM SIGSOFT Software Engineering Notes, Vol. 30. ACM, 253--262.","DOI":"10.1145\/1081706.1081749","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-39","unstructured":"Busybox Website. 2017. Busybox. https:\/\/busybox.net\/. (2017)."},{"key":"key-10.1145\/3180155.3180247-40","unstructured":"GNU Coreutils Website. 2017. GNU Coreutils. https:\/\/www.gnu.org\/software\/coreutils\/coreutils.html. (2017)."},{"key":"key-10.1145\/3180155.3180247-41","unstructured":"Westley Weimer, Zachary P. Fry, and Stephanie Forrest. 2013. Leveraging program equivalence for adaptive program repair: Models and first results. InASE. IEEE, 356--366.","DOI":"10.1109\/ASE.2013.6693094","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-42","unstructured":"Westley Weimer, ThanhVu Nguyen, Claire Le Goues, and Stephanie Forrest. 2009. Automatically Finding Patches Using Genetic Programming. InICSE. IEEE Computer Society, 364--374."},{"key":"key-10.1145\/3180155.3180247-43","unstructured":"Qi Xin and Steven P Reiss. 2017. Identifying test-suite-overfitted patches through test case generation. InISSTA. ACM, 226--236."},{"key":"key-10.1145\/3180155.3180247-44","unstructured":"Yingfei Xiong, Jie Wang, Runfa Yan, Jiachen Zhang, Shi Han, Gang Huang, and Lu Zhang. 2017. Precise condition synthesis for program repair. InICSE. IEEE \/ ACM, 416--426.","DOI":"10.1109\/ICSE.2017.45","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-45","unstructured":"Jifeng Xuan, Matias Martinez, Favio Demarco, Maxime Clement, Sebastian R. Lamelas Marcote, Thomas Durieux, Daniel Le Berre, and Martin Monperrus. 2017. Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs.IEEE TSE43, 1 (2017), 34--55.","DOI":"10.1109\/TSE.2016.2560811","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-46","unstructured":"Jinqiu Yang, Alexey Zhikhartsev, Yuefei Liu, and Lin Tan. 2017. Better test cases for better automated program repair. InESEC\/FSE. ACM, 831--841.","DOI":"10.1145\/3106237.3106274","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-47","unstructured":"Jooyong Yi, Shin Hwei Tan, Sergey Mechtaev, Marcel Boehme, and Abhik Roychoudhury. 2018. Correlation of Test-suite Metrics with Patch Quality in Program Repair.Empirical Software EngineeringTo appear (2018).","DOI":"10.1007\/s10664-017-9552-y","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-48","unstructured":"Andreas Zeller. 1999. Yesterday, My Program Worked. Today, It Does Not. Why?. InFSE. Springer-Verlag, London, UK, UK, 253--267.","DOI":"10.1007\/3-540-48166-4_16","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3180155.3180247-49","unstructured":"Tianyi Zhang and Miryung Kim. 2017. Automated transplantation and differential testing for clones. InICSE. IEEE \/ ACM, 665--676.","DOI":"10.1109\/ICSE.2017.67","doi-asserted-by":"crossref"}],"event":{"name":"the 40th International Conference","location":"Gothenburg, Sweden","sponsor":["SIGSOFT, ACM Special Interest Group on Software Engineering","IEEE-CS, Computer Society"],"acronym":"ICSE '18","number":"40","start":{"date-parts":[[2018,5,27]]},"end":{"date-parts":[[2018,6,3]]}},"container-title":["Proceedings of the 40th International Conference on Software Engineering - ICSE '18"],"original-title":[],"link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3180247&ftid=1979824&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,11,7]],"date-time":"2019-11-07T17:52:22Z","timestamp":1573149142000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2018]]},"ISBN":["9781450356381"],"references-count":49,"URL":"http:\/\/dx.doi.org\/10.1145\/3180155.3180247","relation":{"cites":[]}}}