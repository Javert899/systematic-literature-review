{"status":"ok","message-type":"work","message-version":"1.0.0","message":{"indexed":{"date-parts":[[2019,9,24]],"date-time":"2019-09-24T15:40:17Z","timestamp":1569339617319},"reference-count":46,"publisher":"Association for Computing Machinery (ACM)","issue":"1","license":[{"URL":"http:\/\/www.acm.org\/publications\/policies\/copyright_policy#Background","start":{"date-parts":[[2017,4,4]],"date-time":"2017-04-04T00:00:00Z","timestamp":1491264000000},"delay-in-days":0,"content-version":"vor"}],"funder":[{"DOI":"10.13039\/100000001","name":"National Science Foundation","doi-asserted-by":"publisher","award":["CCF-1160904"]},{"DOI":"10.13039\/100000185","name":"Defense Advanced Research Projects Agency","doi-asserted-by":"publisher","award":["FA84750-14-2-0006"]}],"content-domain":{"domain":[],"crossmark-restriction":false},"short-container-title":["SIGARCH Comput. Archit. News"],"published-print":{"date-parts":[[2017,4,4]]},"DOI":"10.1145\/3093337.3037754","type":"journal-article","created":{"date-parts":[[2017,5,12]],"date-time":"2017-05-12T12:16:12Z","timestamp":1494591372000},"page":"313-326","source":"Crossref","is-referenced-by-count":1,"title":["Sound Loop Superoptimization for Google Native Client"],"prefix":"10.1145","volume":"45","author":[{"given":"Berkeley","family":"Churchill","sequence":"first","affiliation":[{"name":"Stanford University, Stanford, CA, USA"}]},{"given":"Rahul","family":"Sharma","sequence":"additional","affiliation":[{"name":"Microsoft Research India, Bangalore, India"}]},{"given":"JF","family":"Bastien","sequence":"additional","affiliation":[{"name":"Stanford University, Stanford, CA, USA"}]},{"given":"Alex","family":"Aiken","sequence":"additional","affiliation":[{"name":"Stanford University, Stanford, CA, USA"}]}],"member":"320","reference":[{"key":"key-10.1145\/3093337.3037754-1","unstructured":"Chrome rewards. https:\/\/www.google.com\/about\/appsecurity\/chrome-rewards\/. Accessed: Aug 2016."},{"key":"key-10.1145\/3093337.3037754-2","unstructured":"A. Andoni, D. Daniliuc, S. Khurshid, and D. Marinov. Evaluating the \"small scope hypothesis\". In Principles of Programming Languages (POPL), 2002."},{"key":"key-10.1145\/3093337.3037754-3","unstructured":"T. Arons, E. Elster, L. Fix, S. Mador-Haim, M. Mishaeli, J. Shalev, E. Singerman, A. Tiemeyer, M. Y. Vardi, and L. D. Zuck. Formal verification of backward compatibility of microcode. In Computer Aided Verification (CAV), 2005.","DOI":"10.1007\/11513988_20","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-4","unstructured":"V. Bala, E. Duesterwald, and S. Banerjia. Dynamo: A transparent dynamic optimization system. In Programming Language Design and Implementation (PLDI), 2000.","DOI":"10.1145\/349299.349303","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-5","unstructured":"G. Balakrishnan and T. W. Reps. WYSINWYX: What you see is not what you execute. ACM Transactions on Programming Languages and Systems, 32 (6), 2010.","DOI":"10.1145\/1749608.1749612","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-6","unstructured":"D. Brumley, C. Hartwig, M. G. Kang, Z. L. J. Newsome, P. Poosankam, D. Song, and H. Yin. Bitscope: Automatically dissecting malicious binaries. Technical report, School of Computer Science, Carnegie Mellon University, 2007."},{"key":"key-10.1145\/3093337.3037754-7","unstructured":"D. Brumley, I. Jager, T. Avgerinos, and E. J. Schwartz. BAP: A binary analysis platform. In Computer Aided Verification (CAV), 2011.","DOI":"10.1007\/978-3-642-22110-1_37","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-8","unstructured":"M. Castro, M. Costa, J.-P. Martin, M. Peinado, P. Akritidis, A. Donnelly, P. Barham, and R. Black. Fast byte-granularity software fault isolation. In Symposium on Operating Systems Principles (SOSP), 2009.","DOI":"10.1145\/1629575.1629581","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-9","unstructured":"A. Chernoff, M. Herdeg, R. Hookway, C. Reeve, N. Rubin, T. Tye, S. B. Yadavalli, and J. Yates. Fx! 32: A profile-directed binary translator. IEEE Micro, 18 (2), 1998.","DOI":"10.1109\/40.671403","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-10","unstructured":"V. Chipounov, V. Kuznetsov, and G. Candea. S2E: A platform for in-vivo multi-path analysis of software systems. In Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2011.","DOI":"10.1145\/1950365.1950396","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-11","unstructured":"D. Currie, X. Feng, M. Fujita, A. J. Hu, M. Kwan, and S. Rajan. Embedded software verification using symbolic execution and uninterpreted functions. International Journal of Parallel Programming, 32 (3), 2006.","DOI":"10.1007\/s10766-005-0004-8","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-12","unstructured":"D. W. Currie, A. J. Hu, and S. P. Rajan. Automatic formal verification of DSP software. In Design Automation Conference (DAC), 2000.","DOI":"10.1145\/337292.337339","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-13","unstructured":"er(2008)]z3fL. De Moura and N. Bj&#248;rner. Z3: An efficient SMT solver. In Theory and Practice of Software, Tools and Algorithms for the Construction and Analysis of Systems (TACAS), 2008."},{"key":"key-10.1145\/3093337.3037754-14","unstructured":"M. Elder, J. Lim, T. Sharma, T. Andersen, and T. Reps. Abstract domains of affine relations. ACM Transactions on Programming Languages and Systems, 36 (4), 2014.","DOI":"10.1145\/2651361","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-15","unstructured":"mer, and Ulbrich]arvD. Felsing, S. Grebing, V. Klebanov, P. R&#252;mmer, and M. Ulbrich. Automating regression verification. In Automated Software Engineering (ASE), 2014."},{"key":"key-10.1145\/3093337.3037754-16","unstructured":"X. Feng and A. J. Hu. Automatic formal verification for scheduled VLIW code. In Languages, Compilers and Tools for Embedded Systems: Software and Compilers for Embedded Systems (LCTES-SCOPES), 2002.","DOI":"10.1145\/513829.513844","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-17","unstructured":"X. Feng and A. J. Hu. Cutpoints for formal equivalence verification of embedded software. In Embedded Software (EMSOFT), 2005.","DOI":"10.1145\/1086228.1086284","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-18","unstructured":"C. Flanagan and K. R. M. Leino. Houdini: An annotation assistant for ESC\/Java. In Formal Methods Europe (FME), 2001.","DOI":"10.1007\/3-540-45251-6_29","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-19","unstructured":"B. Godlin and O. Strichman. Regression verification. In Design Automation Conference (DAC), 2009.","DOI":"10.1145\/1629911.1630034","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-20","unstructured":"B. Goldberg, L. Zuck, and C. Barrett. Into the loops: Practical issues in translation validation for optimizing compilers. Electronic Notes in Theoretical Computer Science, 132 (1), 2005.","DOI":"10.1016\/j.entcs.2005.01.030","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-21","unstructured":"S. Gulwani, S. Jha, A. Tiwari, and R. Venkatesan. Synthesis of loop-free programs. In Programming Language Design and Implementation, (PLDI), 2011.","DOI":"10.1145\/1993498.1993506","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-22","unstructured":"C. Hawblitzel, S. Lahiri, K. Pawar, H. Hashmi, S. Gokbulut, L. Fernando, D. Detlefs, and S. Wadsworth. Will you still compile me tomorrow? Static cross-version compiler validation. In Foundations of Software Engineering (FSE), 2013.","DOI":"10.1145\/2491411.2491442","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-23","unstructured":"S. Heule, E. Schkufza, R. Sharma, and A. Aiken. Stratified synthesis: Automatically learning the x86--64 instruction set. In Programming Language Design and Implementation (PLDI), 2016.","DOI":"10.1145\/2908080.2908121","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-24","unstructured":"D. Jackson and C. A. Damon. Elements of Style: Analyzing a software design feature with a counterexample detector. In Software Testing and Analysis (ISSTA), 1996.","DOI":"10.1145\/229000.226322","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-25","unstructured":"R. Joshi, G. Nelson, and Y. Zhou. Denali: A practical algorithm for generating optimal code. ACM Transactions on Programming Languages and Systems, 28 (6), 2006.","DOI":"10.1145\/1186632.1186633","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-26","unstructured":"X. Leroy. A formally verified compiler back-end. Journal of Automated Reasoning, 43 (4), 2009.","DOI":"10.1007\/s10817-009-9155-4","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-27","unstructured":"P. Mangpo, A. Thakur, R. Bodik, and D. Dhurjati. Scaling up superoptimization. In Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2016."},{"key":"key-10.1145\/3093337.3037754-28","unstructured":"O. Mao, H. Chen, D. Zhou, X. Wang, N. Zeldovich, and M. F. Kaashoek. Software fault isolation with API integrity and multi-principal modules. In Symposium on Operating Systems Principles (SOSP), 2011.","DOI":"10.1145\/2043556.2043568","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-29","unstructured":"H. Massalin. Superoptimizer - a look at the smallest program. In Architectural Support for Programming Languages and Operating Systems (ASPLOS), 1987.","DOI":"10.1145\/36204.36194","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-30","unstructured":"G. C. Necula. Translation validation for an optimizing compiler. ACM Sigplan Notices, 35 (5), 2000.","DOI":"10.1145\/358438.349314","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-31","unstructured":"er, Schwengerer, and Tompits]OetschSmallScopeJ. Oetsch, M. Prischink, J. P&#252;hrer, M. Schwengerer, and H. Tompits. On the small-scope hypothesis for testing answer-set programs. In Principles of Knowledge Representation and Reasoning, 2012."},{"key":"key-10.1145\/3093337.3037754-32","unstructured":"N. Partush and E. Yahav. Abstract semantic differencing for numerical programs. In Static Analysis Symposium (SAS), 2013.","DOI":"10.1007\/978-3-642-38856-9_14","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-33","unstructured":"S. Person, M. B. Dwyer, S. G. Elbaum, and C. S. Pasareanu. Differential symbolic execution. In Foundations of Software Engineering (FSE), 2008.","DOI":"10.1145\/1453101.1453131","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-34","unstructured":"A. Pnueli, M. Siegel, and E. Singerman. Translation validation. In Tools and Algorithms for Construction and Analysis of Systems (TACAS), 1998.","DOI":"10.1007\/BFb0054170","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-35","unstructured":"D. A. Ramos and D. R. Engler. Practical, low-effort equivalence verification of real code. In Computer Aided Verification (CAV), 2011.","DOI":"10.1007\/978-3-642-22110-1_55","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-36","unstructured":"E. Schkufza, R. Sharma, and A. Aiken. Stochastic superoptimization. In Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2013.","DOI":"10.1145\/2451116.2451150","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-37","unstructured":"E. Schulte, J. Dorn, S. Harding, S. Forrest, and W. Weimer. Post-compiler software optimization for reducing energy. In Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2014.","DOI":"10.1145\/2541940.2541980","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-38","unstructured":"D. Sehr, R. Muth, C. L. Biffle, V. Khimenko, E. Pasko, B. Yee, K. Schimpf, and B. Chen. Adapting software fault isolation to contemporary CPU architectures. In USENIX Security Symposium, 2010."},{"key":"key-10.1145\/3093337.3037754-39","unstructured":"R. Sharma, E. Schkufza, B. R. Churchill, and A. Aiken. Data-driven equivalence checking. In Object-Oriented Programming, Systems, Languages, and Applications, (OOPSLA), 2013.","DOI":"10.1145\/2509136.2509509","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-40","unstructured":"R. Sharma, E. Schkufza, B. Churchill, and A. Aiken. Conditionally correct superoptimization. In Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), 2015.","DOI":"10.1145\/2814270.2814278","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-41","unstructured":"K. C. Shashidhar, M. Bruynooghe, F. Catthoor, and G. Janssens. Verification of source code transformations by program equivalence checking. In Compiler Construction, 2005.","DOI":"10.1007\/978-3-540-31985-6_15","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-42","unstructured":"Y. Shoshitaishvili, R. Wang, C. Hauser, C. Kruegel, and G. Vigna. Firmalice - automatic detection of authentication bypass vulnerabilities in binary firmware. In Network and Distributed System Security Symposium (NDSS), 2015.","DOI":"10.14722\/ndss.2015.23294","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-43","unstructured":"D. Song, D. Brumley, H. Yin, J. Caballero, I. Jager, M. G. Kang, Z. Liang, J. Newsome, P. Poosankam, and P. Saxena. BitBlaze: A new approach to computer security via binary analysis. In Information Systems Security (ICISS), 2008.","DOI":"10.1007\/978-3-540-89862-7_1","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-44","unstructured":"R. Wahbe, S. Lucco, T. E. Anderson, and S. L. Graham. Efficient software-based fault isolation. SIGOPS Operating Systems Review, 27 (5), 1994.","DOI":"10.1145\/173668.168635","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-45","unstructured":"W. Wang. Partitioned Memory Models for Program Analysis. Ph.D., New York University, 2016.","DOI":"10.1007\/978-3-319-52234-0_29","doi-asserted-by":"crossref"},{"key":"key-10.1145\/3093337.3037754-46","unstructured":"B. Yee, D. Sehr, G. Dardyk, B. Chen, R. Muth, T. Ormandy, S. Okasaka, N. Narula, and N. Fullagar. Native client: A sandbox for portable, untrusted x86 native code. In IEEE Symposium on Security and Privacy (Oakland), 2009.","DOI":"10.1109\/SP.2009.25","doi-asserted-by":"crossref"}],"container-title":["ACM SIGARCH Computer Architecture News"],"original-title":[],"language":"en","link":[{"URL":"http:\/\/dl.acm.org\/ft_gateway.cfm?id=3037754&ftid=1863119&dwn=1","content-type":"unspecified","content-version":"vor","intended-application":"similarity-checking"}],"deposited":{"date-parts":[[2019,9,24]],"date-time":"2019-09-24T15:03:29Z","timestamp":1569337409000},"score":1.0,"subtitle":[],"short-title":[],"issued":{"date-parts":[[2017,4,4]]},"references-count":46,"journal-issue":{"published-print":{"date-parts":[[2017,5,11]]},"issue":"1"},"URL":"http:\/\/dx.doi.org\/10.1145\/3093337.3037754","relation":{"cites":[]},"ISSN":["0163-5964"],"issn-type":[{"value":"0163-5964","type":"print"}]}}